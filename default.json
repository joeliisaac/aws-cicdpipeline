{
    "UserDetailList": [
        {
            "Path": "/",
            "UserName": "Terraform_user",
            "UserId": "AIDAWWNTTZLGSMXPXNN2S",
            "Arn": "arn:aws:iam::460475058893:user/Terraform_user",
            "CreateDate": "2021-10-11 23:25:25+00:00",
            "GroupList": [
                "AdminAccess"
            ],
            "AttachedManagedPolicies": [],
            "Tags": []
        }
    ],
    "GroupDetailList": [
        {
            "Path": "/",
            "GroupName": "AdminAccess",
            "GroupId": "AGPAWWNTTZLGTIZWIE6IC",
            "Arn": "arn:aws:iam::460475058893:group/AdminAccess",
            "CreateDate": "2021-10-11 23:25:10+00:00",
            "GroupPolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AdministratorAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AdministratorAccess"
                }
            ]
        }
    ],
    "RoleDetailList": [
        {
            "Path": "/service-role/",
            "RoleName": "aws-codestar-service-role",
            "RoleId": "AROAWWNTTZLG4R7CR6ULJ",
            "Arn": "arn:aws:iam::460475058893:role/service-role/aws-codestar-service-role",
            "CreateDate": "2022-01-26 17:21:00+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "codestar.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSCodeStarServiceRole",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSCodeStarServiceRole"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {}
        },
        {
            "Path": "/aws-service-role/ops.apigateway.amazonaws.com/",
            "RoleName": "AWSServiceRoleForAPIGateway",
            "RoleId": "AROAWWNTTZLG4CCSZPLFD",
            "Arn": "arn:aws:iam::460475058893:role/aws-service-role/ops.apigateway.amazonaws.com/AWSServiceRoleForAPIGateway",
            "CreateDate": "2021-10-25 18:06:07+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "ops.apigateway.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "APIGatewayServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/APIGatewayServiceRolePolicy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {}
        },
        {
            "Path": "/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/",
            "RoleName": "AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "RoleId": "AROAWWNTTZLGWEX2OSQEQ",
            "Arn": "arn:aws:iam::460475058893:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "CreateDate": "2021-10-21 16:59:03+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "dynamodb.application-autoscaling.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSApplicationAutoscalingDynamoDBTablePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingDynamoDBTablePolicy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {
                "LastUsedDate": "2021-10-21 17:11:19+00:00",
                "Region": "us-east-1"
            }
        },
        {
            "Path": "/aws-service-role/config.amazonaws.com/",
            "RoleName": "AWSServiceRoleForConfig",
            "RoleId": "AROAWWNTTZLG3WIVXAHMD",
            "Arn": "arn:aws:iam::460475058893:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig",
            "CreateDate": "2021-10-05 19:23:03+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "config.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSConfigServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {
                "LastUsedDate": "2022-02-09 18:19:55+00:00",
                "Region": "us-east-2"
            }
        },
        {
            "Path": "/aws-service-role/organizations.amazonaws.com/",
            "RoleName": "AWSServiceRoleForOrganizations",
            "RoleId": "AROAWWNTTZLG7WNAUBPUZ",
            "Arn": "arn:aws:iam::460475058893:role/aws-service-role/organizations.amazonaws.com/AWSServiceRoleForOrganizations",
            "CreateDate": "2021-10-14 20:40:27+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "organizations.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSOrganizationsServiceTrustPolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSOrganizationsServiceTrustPolicy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {}
        },
        {
            "Path": "/aws-service-role/rds.amazonaws.com/",
            "RoleName": "AWSServiceRoleForRDS",
            "RoleId": "AROAWWNTTZLGWXL7GEF4Z",
            "Arn": "arn:aws:iam::460475058893:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS",
            "CreateDate": "2021-10-21 15:24:17+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "rds.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AmazonRDSServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSServiceRolePolicy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {
                "LastUsedDate": "2021-10-21 16:35:32+00:00",
                "Region": "us-east-1"
            }
        },
        {
            "Path": "/aws-service-role/support.amazonaws.com/",
            "RoleName": "AWSServiceRoleForSupport",
            "RoleId": "AROAWWNTTZLGXW63YCFRJ",
            "Arn": "arn:aws:iam::460475058893:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport",
            "CreateDate": "2021-09-03 01:46:23+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "support.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSSupportServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {}
        },
        {
            "Path": "/aws-service-role/trustedadvisor.amazonaws.com/",
            "RoleName": "AWSServiceRoleForTrustedAdvisor",
            "RoleId": "AROAWWNTTZLGZSIUYRSIR",
            "Arn": "arn:aws:iam::460475058893:role/aws-service-role/trustedadvisor.amazonaws.com/AWSServiceRoleForTrustedAdvisor",
            "CreateDate": "2021-09-03 01:46:23+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "trustedadvisor.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSTrustedAdvisorServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {}
        },
        {
            "Path": "/",
            "RoleName": "businessonlyLambda",
            "RoleId": "AROAWWNTTZLG26LD7MPBG",
            "Arn": "arn:aws:iam::460475058893:role/businessonlyLambda",
            "CreateDate": "2021-10-27 22:14:56+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AlexaForBusinessReadOnlyAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AlexaForBusinessReadOnlyAccess"
                }
            ],
            "Tags": [
                {
                    "Key": "Action",
                    "Value": "lambda:CreateAlias"
                }
            ],
            "RoleLastUsed": {}
        },
        {
            "Path": "/",
            "RoleName": "codebuild-role",
            "RoleId": "AROAWWNTTZLGY2R7DR3ME",
            "Arn": "arn:aws:iam::460475058893:role/codebuild-role",
            "CreateDate": "2022-02-09 17:04:15+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "codebuild.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "PowerUserAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/PowerUserAccess"
                },
                {
                    "PolicyName": "build-policy",
                    "PolicyArn": "arn:aws:iam::460475058893:policy/build-policy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {
                "LastUsedDate": "2022-02-09 18:43:27+00:00",
                "Region": "us-east-1"
            }
        },
        {
            "Path": "/",
            "RoleName": "codepipeline-role",
            "RoleId": "AROAWWNTTZLG6RXJTUJVR",
            "Arn": "arn:aws:iam::460475058893:role/codepipeline-role",
            "CreateDate": "2022-02-09 17:04:15+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "codepipeline.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "pipeline-policy",
                    "PolicyArn": "arn:aws:iam::460475058893:policy/pipeline-policy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {
                "LastUsedDate": "2022-02-09 18:43:33+00:00",
                "Region": "us-east-1"
            }
        },
        {
            "Path": "/rdk/",
            "RoleName": "config-role",
            "RoleId": "AROAWWNTTZLG4MHMQLUVX",
            "Arn": "arn:aws:iam::460475058893:role/rdk/config-role",
            "CreateDate": "2022-01-21 16:26:21+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "config.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    },
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "AWS": "arn:aws:iam::460475058893:root"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [
                {
                    "PolicyName": "ConfigDeliveryPermissions",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": "s3:PutObject*",
                                "Resource": "arn:aws:s3:::config-bucket-460475058893/AWSLogs/460475058893/*",
                                "Condition": {
                                    "StringLike": {
                                        "s3:x-amz-acl": "bucket-owner-full-control"
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": "s3:GetBucketAcl",
                                "Resource": "arn:aws:s3:::config-bucket-460475058893"
                            }
                        ]
                    }
                }
            ],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "ReadOnlyAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/ReadOnlyAccess"
                },
                {
                    "PolicyName": "AWSConfigRole",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSConfigRole"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {
                "LastUsedDate": "2022-01-21 16:31:58+00:00",
                "Region": "us-east-1"
            }
        },
        {
            "Path": "/service-role/",
            "RoleName": "DemoAppFunction-role-jdo0e38v",
            "RoleId": "AROAWWNTTZLGQYM3KYXHU",
            "Arn": "arn:aws:iam::460475058893:role/service-role/DemoAppFunction-role-jdo0e38v",
            "CreateDate": "2021-09-30 13:28:08+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSLambdaBasicExecutionRole-6b9f4b60-ad64-48aa-b58a-67b4ca29e199",
                    "PolicyArn": "arn:aws:iam::460475058893:policy/service-role/AWSLambdaBasicExecutionRole-6b9f4b60-ad64-48aa-b58a-67b4ca29e199"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {
                "LastUsedDate": "2021-10-26 12:24:47+00:00",
                "Region": "us-east-1"
            }
        },
        {
            "Path": "/",
            "RoleName": "LambdaRole",
            "RoleId": "AROAWWNTTZLGYADRRRBD7",
            "Arn": "arn:aws:iam::460475058893:role/LambdaRole",
            "CreateDate": "2021-10-26 13:47:16+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AdministratorAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AdministratorAccess"
                },
                {
                    "PolicyName": "AWSLambda_FullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AWSLambda_FullAccess"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {
                "LastUsedDate": "2021-10-28 17:44:15+00:00",
                "Region": "us-east-1"
            }
        },
        {
            "Path": "/",
            "RoleName": "Lambda_Basic_Role",
            "RoleId": "AROAWWNTTZLGRKYBL7JNC",
            "Arn": "arn:aws:iam::460475058893:role/Lambda_Basic_Role",
            "CreateDate": "2021-10-29 15:30:16+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSLambdaBasicExecutionRole",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {}
        },
        {
            "Path": "/",
            "RoleName": "PowerUserAccess",
            "RoleId": "AROAWWNTTZLGVURY3VVUC",
            "Arn": "arn:aws:iam::460475058893:role/PowerUserAccess",
            "CreateDate": "2022-01-25 20:10:46+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "codebuild.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSCodeCommitPowerUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/AWSCodeCommitPowerUser"
                },
                {
                    "PolicyName": "AWSDataPipeline_PowerUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/AWSDataPipeline_PowerUser"
                },
                {
                    "PolicyName": "AmazonEC2ContainerRegistryPowerUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
                },
                {
                    "PolicyName": "AmazonCognitoPowerUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonCognitoPowerUser"
                },
                {
                    "PolicyName": "AWSKeyManagementServicePowerUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser"
                },
                {
                    "PolicyName": "AmazonElasticContainerRegistryPublicPowerUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicPowerUser"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {}
        },
        {
            "Path": "/",
            "RoleName": "restrcited_lamb_role",
            "RoleId": "AROAWWNTTZLG4LOOVAJ6P",
            "Arn": "arn:aws:iam::460475058893:role/restrcited_lamb_role",
            "CreateDate": "2021-10-29 15:45:55+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "restricted_lambda_policy",
                    "PolicyArn": "arn:aws:iam::460475058893:policy/restricted_lambda_policy"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {}
        },
        {
            "Path": "/",
            "RoleName": "role-sts",
            "RoleId": "AROAWWNTTZLGSCECEOJDB",
            "Arn": "arn:aws:iam::460475058893:role/role-sts",
            "CreateDate": "2021-10-21 21:31:45+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "s3.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AmazonS3FullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                },
                {
                    "PolicyName": "AdministratorAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AdministratorAccess"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {}
        },
        {
            "Path": "/service-role/",
            "RoleName": "Test-function-Versioning-role-gdoblcum",
            "RoleId": "AROAWWNTTZLGWYFA6C26J",
            "Arn": "arn:aws:iam::460475058893:role/service-role/Test-function-Versioning-role-gdoblcum",
            "CreateDate": "2021-10-26 12:43:45+00:00",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "InstanceProfileList": [],
            "RolePolicyList": [],
            "AttachedManagedPolicies": [
                {
                    "PolicyName": "AWSLambdaBasicExecutionRole-7e70e896-397a-407c-8b8b-4319af74c651",
                    "PolicyArn": "arn:aws:iam::460475058893:policy/service-role/AWSLambdaBasicExecutionRole-7e70e896-397a-407c-8b8b-4319af74c651"
                }
            ],
            "Tags": [],
            "RoleLastUsed": {
                "LastUsedDate": "2021-10-26 12:50:15+00:00",
                "Region": "us-east-1"
            }
        }
    ],
    "Policies": [
        {
            "PolicyName": "AWSLambdaBasicExecutionRole-7e70e896-397a-407c-8b8b-4319af74c651",
            "PolicyId": "ANPAWWNTTZLG5CAKQ2R3D",
            "Arn": "arn:aws:iam::460475058893:policy/service-role/AWSLambdaBasicExecutionRole-7e70e896-397a-407c-8b8b-4319af74c651",
            "Path": "/service-role/",
            "DefaultVersionId": "v1",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2021-10-26 12:43:45+00:00",
            "UpdateDate": "2021-10-26 12:43:45+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": "logs:CreateLogGroup",
                                "Resource": "arn:aws:logs:us-east-1:460475058893:*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                ],
                                "Resource": [
                                    "arn:aws:logs:us-east-1:460475058893:log-group:/aws/lambda/Test-function-Versioning:*"
                                ]
                            }
                        ]
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-10-26 12:43:45+00:00"
                }
            ]
        },
        {
            "PolicyName": "restricted_lambda_policy",
            "PolicyId": "ANPAWWNTTZLG5DXLF7ZZA",
            "Arn": "arn:aws:iam::460475058893:policy/restricted_lambda_policy",
            "Path": "/",
            "DefaultVersionId": "v2",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2021-10-29 15:42:29+00:00",
            "UpdateDate": "2021-10-29 15:45:23+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Sid": "VisualEditor0",
                                "Effect": "Allow",
                                "Action": "lambda:GetFunction",
                                "Resource": "arn:aws:lambda:us-east-1:460475058893:function:Business_user_lambda_function"
                            }
                        ]
                    },
                    "VersionId": "v2",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-10-29 15:45:23+00:00"
                },
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Sid": "VisualEditor0",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:GetRole",
                                    "iam:GetPolicyVersion",
                                    "tag:GetResources",
                                    "states:ListStateMachines",
                                    "iam:GetPolicy",
                                    "logs:DescribeLogGroups",
                                    "states:DescribeStateMachine",
                                    "cloudwatch:GetMetricData",
                                    "lambda:ListAliases",
                                    "iam:ListRoles",
                                    "cloudwatch:ListMetrics",
                                    "ec2:DescribeSecurityGroups",
                                    "cloudformation:DescribeStacks",
                                    "xray:BatchGetTraces",
                                    "iam:ListAttachedRolePolicies",
                                    "ec2:DescribeVpcs",
                                    "kms:ListAliases",
                                    "iam:ListRolePolicies",
                                    "ec2:DescribeSubnets",
                                    "xray:GetTraceSummaries",
                                    "iam:GetRolePolicy",
                                    "cloudformation:ListStackResources"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "VisualEditor1",
                                "Effect": "Allow",
                                "Action": [
                                    "logs:DescribeLogStreams",
                                    "logs:GetLogEvents",
                                    "logs:FilterLogEvents"
                                ],
                                "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                            }
                        ]
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": false,
                    "CreateDate": "2021-10-29 15:42:29+00:00"
                }
            ]
        },
        {
            "PolicyName": "build-policy",
            "PolicyId": "ANPAWWNTTZLGUOWT2ACQG",
            "Arn": "arn:aws:iam::460475058893:policy/build-policy",
            "Path": "/",
            "DefaultVersionId": "v1",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2022-02-09 17:04:15+00:00",
            "UpdateDate": "2022-02-09 17:04:15+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Statement": [
                            {
                                "Action": [
                                    "secretsmanager:*",
                                    "s3:*",
                                    "logs:*",
                                    "iam:*",
                                    "codebuild:*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Sid": ""
                            }
                        ],
                        "Version": "2012-10-17"
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": true,
                    "CreateDate": "2022-02-09 17:04:15+00:00"
                }
            ]
        },
        {
            "PolicyName": "pipeline-policy",
            "PolicyId": "ANPAWWNTTZLGXNZHL5FVG",
            "Arn": "arn:aws:iam::460475058893:policy/pipeline-policy",
            "Path": "/",
            "DefaultVersionId": "v1",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2022-02-09 17:04:15+00:00",
            "UpdateDate": "2022-02-09 17:04:15+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Statement": [
                            {
                                "Action": [
                                    "s3:*",
                                    "codestar-connections:UseConnection",
                                    "codebuild:*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Sid": ""
                            },
                            {
                                "Action": [
                                    "s3:*",
                                    "codebuild:*",
                                    "cloudwatch:*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Sid": ""
                            }
                        ],
                        "Version": "2012-10-17"
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": true,
                    "CreateDate": "2022-02-09 17:04:15+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSLambdaBasicExecutionRole-6b9f4b60-ad64-48aa-b58a-67b4ca29e199",
            "PolicyId": "ANPAWWNTTZLGZUPMPAK7J",
            "Arn": "arn:aws:iam::460475058893:policy/service-role/AWSLambdaBasicExecutionRole-6b9f4b60-ad64-48aa-b58a-67b4ca29e199",
            "Path": "/service-role/",
            "DefaultVersionId": "v1",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2021-09-30 13:28:08+00:00",
            "UpdateDate": "2021-09-30 13:28:08+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": "logs:CreateLogGroup",
                                "Resource": "arn:aws:logs:us-east-1:460475058893:*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                ],
                                "Resource": [
                                    "arn:aws:logs:us-east-1:460475058893:log-group:/aws/lambda/DemoAppFunction:*"
                                ]
                            }
                        ]
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-09-30 13:28:08+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSCodeCommitPowerUser",
            "PolicyId": "ANPAI4UIINUVGB5SEC57G",
            "Arn": "arn:aws:iam::aws:policy/AWSCodeCommitPowerUser",
            "Path": "/",
            "DefaultVersionId": "v14",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-07-09 17:06:49+00:00",
            "UpdateDate": "2020-07-30 23:12:48+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "codecommit:AssociateApprovalRuleTemplateWithRepository",
                                    "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
                                    "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
                                    "codecommit:BatchGet*",
                                    "codecommit:BatchDescribe*",
                                    "codecommit:Create*",
                                    "codecommit:DeleteBranch",
                                    "codecommit:DeleteFile",
                                    "codecommit:Describe*",
                                    "codecommit:DisassociateApprovalRuleTemplateFromRepository",
                                    "codecommit:EvaluatePullRequestApprovalRules",
                                    "codecommit:Get*",
                                    "codecommit:List*",
                                    "codecommit:Merge*",
                                    "codecommit:OverridePullRequestApprovalRules",
                                    "codecommit:Put*",
                                    "codecommit:Post*",
                                    "codecommit:TagResource",
                                    "codecommit:Test*",
                                    "codecommit:UntagResource",
                                    "codecommit:Update*",
                                    "codecommit:GitPull",
                                    "codecommit:GitPush"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "CloudWatchEventsCodeCommitRulesAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "events:DeleteRule",
                                    "events:DescribeRule",
                                    "events:DisableRule",
                                    "events:EnableRule",
                                    "events:PutRule",
                                    "events:PutTargets",
                                    "events:RemoveTargets",
                                    "events:ListTargetsByRule"
                                ],
                                "Resource": "arn:aws:events:*:*:rule/codecommit*"
                            },
                            {
                                "Sid": "SNSTopicAndSubscriptionAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "sns:Subscribe",
                                    "sns:Unsubscribe"
                                ],
                                "Resource": "arn:aws:sns:*:*:codecommit*"
                            },
                            {
                                "Sid": "SNSTopicAndSubscriptionReadAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "sns:ListTopics",
                                    "sns:ListSubscriptionsByTopic",
                                    "sns:GetTopicAttributes"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "LambdaReadOnlyListAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "lambda:ListFunctions"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "IAMReadOnlyListAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:ListUsers"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "IAMReadOnlyConsoleAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:ListAccessKeys",
                                    "iam:ListSSHPublicKeys",
                                    "iam:ListServiceSpecificCredentials"
                                ],
                                "Resource": "arn:aws:iam::*:user/${aws:username}"
                            },
                            {
                                "Sid": "IAMUserSSHKeys",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:DeleteSSHPublicKey",
                                    "iam:GetSSHPublicKey",
                                    "iam:ListSSHPublicKeys",
                                    "iam:UpdateSSHPublicKey",
                                    "iam:UploadSSHPublicKey"
                                ],
                                "Resource": "arn:aws:iam::*:user/${aws:username}"
                            },
                            {
                                "Sid": "IAMSelfManageServiceSpecificCredentials",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:UpdateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ResetServiceSpecificCredential"
                                ],
                                "Resource": "arn:aws:iam::*:user/${aws:username}"
                            },
                            {
                                "Sid": "CodeStarNotificationsReadWriteAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "codestar-notifications:CreateNotificationRule",
                                    "codestar-notifications:DescribeNotificationRule",
                                    "codestar-notifications:UpdateNotificationRule",
                                    "codestar-notifications:Subscribe",
                                    "codestar-notifications:Unsubscribe"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "StringLike": {
                                        "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                                    }
                                }
                            },
                            {
                                "Sid": "CodeStarNotificationsListAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "codestar-notifications:ListNotificationRules",
                                    "codestar-notifications:ListTargets",
                                    "codestar-notifications:ListTagsforResource",
                                    "codestar-notifications:ListEventTypes"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "AmazonCodeGuruReviewerFullAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "codeguru-reviewer:AssociateRepository",
                                    "codeguru-reviewer:DescribeRepositoryAssociation",
                                    "codeguru-reviewer:ListRepositoryAssociations",
                                    "codeguru-reviewer:DisassociateRepository",
                                    "codeguru-reviewer:DescribeCodeReview",
                                    "codeguru-reviewer:ListCodeReviews"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "AmazonCodeGuruReviewerSLRCreation",
                                "Action": "iam:CreateServiceLinkedRole",
                                "Effect": "Allow",
                                "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
                                "Condition": {
                                    "StringLike": {
                                        "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                                    }
                                }
                            },
                            {
                                "Sid": "CloudWatchEventsManagedRules",
                                "Effect": "Allow",
                                "Action": [
                                    "events:PutRule",
                                    "events:PutTargets",
                                    "events:DeleteRule",
                                    "events:RemoveTargets"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                                    }
                                }
                            },
                            {
                                "Sid": "CodeStarNotificationsChatbotAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "chatbot:DescribeSlackChannelConfigurations"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "CodeStarConnectionsReadOnlyAccess",
                                "Effect": "Allow",
                                "Action": [
                                    "codestar-connections:ListConnections",
                                    "codestar-connections:GetConnection"
                                ],
                                "Resource": "arn:aws:codestar-connections:*:*:connection/*"
                            }
                        ]
                    },
                    "VersionId": "v14",
                    "IsDefaultVersion": true,
                    "CreateDate": "2020-07-30 23:12:48+00:00"
                }
            ]
        },
        {
            "PolicyName": "AlexaForBusinessReadOnlyAccess",
            "PolicyId": "ANPAI6BKSTB4XMLPBFFJ2",
            "Arn": "arn:aws:iam::aws:policy/AlexaForBusinessReadOnlyAccess",
            "Path": "/",
            "DefaultVersionId": "v3",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2017-11-30 16:47:12+00:00",
            "UpdateDate": "2019-11-20 00:25:33+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "a4b:Get*",
                                    "a4b:List*",
                                    "a4b:Search*"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v3",
                    "IsDefaultVersion": true,
                    "CreateDate": "2019-11-20 00:25:33+00:00"
                }
            ]
        },
        {
            "PolicyName": "AmazonS3FullAccess",
            "PolicyId": "ANPAIFIR6V6BVTRAHWINE",
            "Arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
            "Path": "/",
            "DefaultVersionId": "v2",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-02-06 18:40:58+00:00",
            "UpdateDate": "2021-09-27 20:16:37+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:*",
                                    "s3-object-lambda:*"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v2",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-09-27 20:16:37+00:00"
                }
            ]
        },
        {
            "PolicyName": "ReadOnlyAccess",
            "PolicyId": "ANPAILL3HVNFSB6DCOWYQ",
            "Arn": "arn:aws:iam::aws:policy/ReadOnlyAccess",
            "Path": "/",
            "DefaultVersionId": "v82",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-02-06 18:39:48+00:00",
            "UpdateDate": "2021-10-26 20:14:30+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "a4b:Get*",
                                    "a4b:List*",
                                    "a4b:Search*",
                                    "access-analyzer:GetAccessPreview",
                                    "access-analyzer:GetAnalyzedResource",
                                    "access-analyzer:GetAnalyzer",
                                    "access-analyzer:GetArchiveRule",
                                    "access-analyzer:GetFinding",
                                    "access-analyzer:GetGeneratedPolicy",
                                    "access-analyzer:ListAccessPreviewFindings",
                                    "access-analyzer:ListAccessPreviews",
                                    "access-analyzer:ListAnalyzedResources",
                                    "access-analyzer:ListAnalyzers",
                                    "access-analyzer:ListArchiveRules",
                                    "access-analyzer:ListFindings",
                                    "access-analyzer:ListPolicyGenerations",
                                    "access-analyzer:ListTagsForResource",
                                    "access-analyzer:ValidatePolicy",
                                    "acm-pca:Describe*",
                                    "acm-pca:Get*",
                                    "acm-pca:List*",
                                    "acm:Describe*",
                                    "acm:Get*",
                                    "acm:List*",
                                    "airflow:ListEnvironments",
                                    "airflow:ListTagsForResource",
                                    "amplify:GetApp",
                                    "amplify:GetBranch",
                                    "amplify:GetDomainAssociation",
                                    "amplify:GetJob",
                                    "amplify:ListApps",
                                    "amplify:ListBranches",
                                    "amplify:ListDomainAssociations",
                                    "amplify:ListJobs",
                                    "apigateway:GET",
                                    "appconfig:GetApplication",
                                    "appconfig:GetConfiguration",
                                    "appconfig:GetConfigurationProfile",
                                    "appconfig:GetDeployment",
                                    "appconfig:GetDeploymentStrategy",
                                    "appconfig:GetEnvironment",
                                    "appconfig:GetHostedConfigurationVersion",
                                    "appconfig:ListApplications",
                                    "appconfig:ListConfigurationProfiles",
                                    "appconfig:ListDeployments",
                                    "appconfig:ListDeploymentStrategies",
                                    "appconfig:ListEnvironments",
                                    "appconfig:ListHostedConfigurationVersions",
                                    "appconfig:ListTagsForResource",
                                    "application-autoscaling:Describe*",
                                    "applicationinsights:Describe*",
                                    "applicationinsights:List*",
                                    "appmesh:Describe*",
                                    "appmesh:List*",
                                    "appstream:Describe*",
                                    "appstream:List*",
                                    "appsync:Get*",
                                    "appsync:List*",
                                    "aps:DescribeAlertManagerDefinition",
                                    "aps:DescribeRuleGroupsNamespace",
                                    "aps:DescribeWorkspace",
                                    "aps:GetAlertManagerSilence",
                                    "aps:GetAlertManagerStatus",
                                    "aps:GetLabels",
                                    "aps:GetMetricMetadata",
                                    "aps:GetSeries",
                                    "aps:ListAlerts",
                                    "aps:ListAlertManagerAlerts",
                                    "aps:ListAlertManagerAlertGroups",
                                    "aps:ListAlertManagerReceivers",
                                    "aps:ListAlertManagerSilences",
                                    "aps:ListRules",
                                    "aps:ListRuleGroupsNamespaces",
                                    "aps:ListTagsForResource",
                                    "aps:ListWorkspaces",
                                    "aps:QueryMetrics",
                                    "athena:Batch*",
                                    "athena:Get*",
                                    "athena:List*",
                                    "auditmanager:GetAccountStatus",
                                    "auditmanager:GetAssessment",
                                    "auditmanager:GetAssessmentFramework",
                                    "auditmanager:GetAssessmentReportUrl",
                                    "auditmanager:GetChangeLogs",
                                    "auditmanager:GetControl",
                                    "auditmanager:GetDelegations",
                                    "auditmanager:GetEvidence",
                                    "auditmanager:GetEvidenceByEvidenceFolder",
                                    "auditmanager:GetEvidenceFolder",
                                    "auditmanager:GetEvidenceFoldersByAssessment",
                                    "auditmanager:GetEvidenceFoldersByAssessmentControl",
                                    "auditmanager:GetOrganizationAdminAccount",
                                    "auditmanager:GetServicesInScope",
                                    "auditmanager:GetSettings",
                                    "auditmanager:ListAssessmentFrameworks",
                                    "auditmanager:ListAssessmentReports",
                                    "auditmanager:ListAssessments",
                                    "auditmanager:ListControls",
                                    "auditmanager:ListKeywordsForDataSource",
                                    "auditmanager:ListNotifications",
                                    "auditmanager:ListTagsForResource",
                                    "auditmanager:ValidateAssessmentReportIntegrity",
                                    "autoscaling-plans:Describe*",
                                    "autoscaling-plans:GetScalingPlanResourceForecastData",
                                    "autoscaling:Describe*",
                                    "aws-portal:View*",
                                    "backup:Describe*",
                                    "backup:Get*",
                                    "backup:List*",
                                    "batch:Describe*",
                                    "batch:List*",
                                    "braket:GetDevice",
                                    "braket:GetQuantumTask",
                                    "braket:SearchDevices",
                                    "braket:SearchQuantumTasks",
                                    "budgets:Describe*",
                                    "budgets:View*",
                                    "cassandra:Select",
                                    "ce:DescribeCostCategoryDefinition",
                                    "ce:DescribeNotificationSubscription",
                                    "ce:DescribeReport",
                                    "ce:GetAnomalies",
                                    "ce:GetAnomalyMonitors",
                                    "ce:GetAnomalySubscriptions",
                                    "ce:GetCostAndUsage",
                                    "ce:GetCostAndUsageWithResources",
                                    "ce:GetCostCategories",
                                    "ce:GetCostForecast",
                                    "ce:GetDimensionValues",
                                    "ce:GetPreferences",
                                    "ce:GetReservationCoverage",
                                    "ce:GetReservationPurchaseRecommendation",
                                    "ce:GetReservationUtilization",
                                    "ce:GetRightsizingRecommendation",
                                    "ce:GetSavingsPlansCoverage",
                                    "ce:GetSavingsPlansPurchaseRecommendation",
                                    "ce:GetSavingsPlansUtilization",
                                    "ce:GetSavingsPlansUtilizationDetails",
                                    "ce:GetTags",
                                    "ce:GetUsageForecast",
                                    "ce:ListCostCategoryDefinitions",
                                    "chatbot:Describe*",
                                    "chatbot:Get*",
                                    "chime:Get*",
                                    "chime:List*",
                                    "chime:Retrieve*",
                                    "chime:Search*",
                                    "chime:Validate*",
                                    "cloud9:Describe*",
                                    "cloud9:List*",
                                    "clouddirectory:BatchRead",
                                    "clouddirectory:Get*",
                                    "clouddirectory:List*",
                                    "clouddirectory:LookupPolicy",
                                    "cloudformation:Describe*",
                                    "cloudformation:Detect*",
                                    "cloudformation:Estimate*",
                                    "cloudformation:Get*",
                                    "cloudformation:List*",
                                    "cloudfront:DescribeFunction",
                                    "cloudfront:Get*",
                                    "cloudfront:List*",
                                    "cloudhsm:Describe*",
                                    "cloudhsm:Get*",
                                    "cloudhsm:List*",
                                    "cloudsearch:Describe*",
                                    "cloudsearch:List*",
                                    "cloudtrail:Describe*",
                                    "cloudtrail:Get*",
                                    "cloudtrail:List*",
                                    "cloudtrail:LookupEvents",
                                    "cloudwatch:Describe*",
                                    "cloudwatch:Get*",
                                    "cloudwatch:List*",
                                    "codeartifact:DescribeDomain",
                                    "codeartifact:DescribePackageVersion",
                                    "codeartifact:DescribeRepository",
                                    "codeartifact:GetAuthorizationToken",
                                    "codeartifact:GetDomainPermissionsPolicy",
                                    "codeartifact:GetPackageVersionAsset",
                                    "codeartifact:GetPackageVersionReadme",
                                    "codeartifact:GetRepositoryEndpoint",
                                    "codeartifact:GetRepositoryPermissionsPolicy",
                                    "codeartifact:ListDomains",
                                    "codeartifact:ListPackages",
                                    "codeartifact:ListPackageVersionAssets",
                                    "codeartifact:ListPackageVersionDependencies",
                                    "codeartifact:ListPackageVersions",
                                    "codeartifact:ListRepositories",
                                    "codeartifact:ListRepositoriesInDomain",
                                    "codeartifact:ListTagsForResource",
                                    "codeartifact:ReadFromRepository",
                                    "codebuild:BatchGet*",
                                    "codebuild:DescribeCodeCoverages",
                                    "codebuild:DescribeTestCases",
                                    "codebuild:List*",
                                    "codecommit:BatchGet*",
                                    "codecommit:Describe*",
                                    "codecommit:Get*",
                                    "codecommit:GitPull",
                                    "codecommit:List*",
                                    "codedeploy:BatchGet*",
                                    "codedeploy:Get*",
                                    "codedeploy:List*",
                                    "codeguru-profiler:Describe*",
                                    "codeguru-profiler:Get*",
                                    "codeguru-profiler:List*",
                                    "codeguru-reviewer:Describe*",
                                    "codeguru-reviewer:Get*",
                                    "codeguru-reviewer:List*",
                                    "codepipeline:Get*",
                                    "codepipeline:List*",
                                    "codestar-connections:GetConnection",
                                    "codestar-connections:GetHost",
                                    "codestar-connections:ListConnections",
                                    "codestar-connections:ListHosts",
                                    "codestar-connections:ListTagsForResource",
                                    "codestar-notifications:describeNotificationRule",
                                    "codestar-notifications:listEventTypes",
                                    "codestar-notifications:listNotificationRules",
                                    "codestar-notifications:listTagsForResource",
                                    "codestar-notifications:ListTargets",
                                    "codestar:Describe*",
                                    "codestar:Get*",
                                    "codestar:List*",
                                    "codestar:Verify*",
                                    "cognito-identity:Describe*",
                                    "cognito-identity:GetCredentialsForIdentity",
                                    "cognito-identity:GetIdentityPoolRoles",
                                    "cognito-identity:GetOpenIdToken",
                                    "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                                    "cognito-identity:List*",
                                    "cognito-identity:Lookup*",
                                    "cognito-idp:AdminGet*",
                                    "cognito-idp:AdminList*",
                                    "cognito-idp:Describe*",
                                    "cognito-idp:Get*",
                                    "cognito-idp:List*",
                                    "cognito-sync:Describe*",
                                    "cognito-sync:Get*",
                                    "cognito-sync:List*",
                                    "cognito-sync:QueryRecords",
                                    "compute-optimizer:DescribeRecommendationExportJobs",
                                    "compute-optimizer:GetAutoScalingGroupRecommendations",
                                    "compute-optimizer:GetEBSVolumeRecommendations",
                                    "compute-optimizer:GetEC2InstanceRecommendations",
                                    "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                                    "compute-optimizer:GetEnrollmentStatus",
                                    "compute-optimizer:GetEnrollmentStatusesForOrganization",
                                    "compute-optimizer:GetLambdaFunctionRecommendations",
                                    "compute-optimizer:GetRecommendationSummaries",
                                    "config:BatchGetAggregateResourceConfig",
                                    "config:BatchGetResourceConfig",
                                    "config:Deliver*",
                                    "config:Describe*",
                                    "config:Get*",
                                    "config:List*",
                                    "config:SelectAggregateResourceConfig",
                                    "config:SelectResourceConfig",
                                    "connect:Describe*",
                                    "connect:GetFederationToken",
                                    "connect:List*",
                                    "dataexchange:Get*",
                                    "dataexchange:List*",
                                    "datapipeline:Describe*",
                                    "datapipeline:EvaluateExpression",
                                    "datapipeline:Get*",
                                    "datapipeline:List*",
                                    "datapipeline:QueryObjects",
                                    "datapipeline:Validate*",
                                    "datasync:Describe*",
                                    "datasync:List*",
                                    "dax:BatchGetItem",
                                    "dax:Describe*",
                                    "dax:GetItem",
                                    "dax:ListTags",
                                    "dax:Query",
                                    "dax:Scan",
                                    "deepcomposer:GetComposition",
                                    "deepcomposer:GetModel",
                                    "deepcomposer:GetSampleModel",
                                    "deepcomposer:ListCompositions",
                                    "deepcomposer:ListModels",
                                    "deepcomposer:ListSampleModels",
                                    "deepcomposer:ListTrainingTopics",
                                    "detective:Get*",
                                    "detective:List*",
                                    "detective:SearchGraph",
                                    "devicefarm:Get*",
                                    "devicefarm:List*",
                                    "devops-guru:DescribeAccountHealth",
                                    "devops-guru:DescribeAccountOverview",
                                    "devops-guru:DescribeAnomaly",
                                    "devops-guru:DescribeFeedback",
                                    "devops-guru:DescribeInsight",
                                    "devops-guru:DescribeResourceCollectionHealth",
                                    "devops-guru:DescribeServiceIntegration",
                                    "devops-guru:GetCostEstimation",
                                    "devops-guru:GetResourceCollection",
                                    "devops-guru:ListAnomaliesForInsight",
                                    "devops-guru:ListEvents",
                                    "devops-guru:ListInsights",
                                    "devops-guru:ListNotificationChannels",
                                    "devops-guru:ListRecommendations",
                                    "devops-guru:SearchInsights",
                                    "devops-guru:StartCostEstimation",
                                    "directconnect:Describe*",
                                    "discovery:Describe*",
                                    "discovery:Get*",
                                    "discovery:List*",
                                    "dlm:Get*",
                                    "dms:Describe*",
                                    "dms:List*",
                                    "dms:Test*",
                                    "ds:Check*",
                                    "ds:Describe*",
                                    "ds:Get*",
                                    "ds:List*",
                                    "ds:Verify*",
                                    "dynamodb:BatchGet*",
                                    "dynamodb:Describe*",
                                    "dynamodb:Get*",
                                    "dynamodb:List*",
                                    "dynamodb:Query",
                                    "dynamodb:Scan",
                                    "ec2:Describe*",
                                    "ec2:Get*",
                                    "ec2:SearchTransitGatewayRoutes",
                                    "ec2messages:Get*",
                                    "ecr-public:BatchCheckLayerAvailability",
                                    "ecr-public:DescribeImages",
                                    "ecr-public:DescribeImageTags",
                                    "ecr-public:DescribeRegistries",
                                    "ecr-public:DescribeRepositories",
                                    "ecr-public:GetAuthorizationToken",
                                    "ecr-public:GetRegistryCatalogData",
                                    "ecr-public:GetRepositoryCatalogData",
                                    "ecr-public:GetRepositoryPolicy",
                                    "ecr-public:ListTagsForResource",
                                    "ecr:BatchCheck*",
                                    "ecr:BatchGet*",
                                    "ecr:Describe*",
                                    "ecr:Get*",
                                    "ecr:List*",
                                    "ecs:Describe*",
                                    "ecs:List*",
                                    "eks:Describe*",
                                    "eks:List*",
                                    "elasticache:Describe*",
                                    "elasticache:List*",
                                    "elasticbeanstalk:Check*",
                                    "elasticbeanstalk:Describe*",
                                    "elasticbeanstalk:List*",
                                    "elasticbeanstalk:Request*",
                                    "elasticbeanstalk:Retrieve*",
                                    "elasticbeanstalk:Validate*",
                                    "elasticfilesystem:Describe*",
                                    "elasticloadbalancing:Describe*",
                                    "elasticmapreduce:Describe*",
                                    "elasticmapreduce:GetBlockPublicAccessConfiguration",
                                    "elasticmapreduce:List*",
                                    "elasticmapreduce:View*",
                                    "elastictranscoder:List*",
                                    "elastictranscoder:Read*",
                                    "elemental-appliances-software:Get*",
                                    "elemental-appliances-software:List*",
                                    "es:Describe*",
                                    "es:ESHttpGet",
                                    "es:ESHttpHead",
                                    "es:Get*",
                                    "es:List*",
                                    "events:Describe*",
                                    "events:List*",
                                    "events:Test*",
                                    "firehose:Describe*",
                                    "firehose:List*",
                                    "fis:GetAction",
                                    "fis:GetExperiment",
                                    "fis:GetExperimentTemplate",
                                    "fis:ListActions",
                                    "fis:ListExperiments",
                                    "fis:ListExperimentTemplates",
                                    "fis:ListTagsForResource",
                                    "fms:GetAdminAccount",
                                    "fms:GetAppsList",
                                    "fms:GetComplianceDetail",
                                    "fms:GetNotificationChannel",
                                    "fms:GetPolicy",
                                    "fms:GetProtectionStatus",
                                    "fms:GetProtocolsList",
                                    "fms:GetViolationDetails",
                                    "fms:ListAppsLists",
                                    "fms:ListComplianceStatus",
                                    "fms:ListMemberAccounts",
                                    "fms:ListPolicies",
                                    "fms:ListProtocolsLists",
                                    "fms:ListTagsForResource",
                                    "forecast:DescribeDataset",
                                    "forecast:DescribeDatasetGroup",
                                    "forecast:DescribeDatasetImportJob",
                                    "forecast:DescribeForecast",
                                    "forecast:DescribeForecastExportJob",
                                    "forecast:DescribePredictor",
                                    "forecast:DescribePredictorBacktestExportJob",
                                    "forecast:GetAccuracyMetrics",
                                    "forecast:ListDatasetGroups",
                                    "forecast:ListDatasetImportJobs",
                                    "forecast:ListDatasets",
                                    "forecast:ListForecastExportJobs",
                                    "forecast:ListForecasts",
                                    "forecast:ListPredictorBacktestExportJobs",
                                    "forecast:ListPredictors",
                                    "forecast:QueryForecast",
                                    "freertos:Describe*",
                                    "freertos:List*",
                                    "fsx:Describe*",
                                    "fsx:List*",
                                    "gamelift:Describe*",
                                    "gamelift:Get*",
                                    "gamelift:List*",
                                    "gamelift:ResolveAlias",
                                    "gamelift:Search*",
                                    "glacier:Describe*",
                                    "glacier:Get*",
                                    "glacier:List*",
                                    "globalaccelerator:Describe*",
                                    "globalaccelerator:List*",
                                    "glue:BatchGetDevEndpoints",
                                    "glue:BatchGetJobs",
                                    "glue:BatchGetPartition",
                                    "glue:BatchGetTriggers",
                                    "glue:BatchGetWorkflows",
                                    "glue:CheckSchemaVersionValidity",
                                    "glue:GetCatalogImportStatus",
                                    "glue:GetClassifier",
                                    "glue:GetClassifiers",
                                    "glue:GetCrawler",
                                    "glue:GetCrawlerMetrics",
                                    "glue:GetCrawlers",
                                    "glue:GetDatabase",
                                    "glue:GetDatabases",
                                    "glue:GetDataCatalogEncryptionSettings",
                                    "glue:GetDataflowGraph",
                                    "glue:GetDevEndpoint",
                                    "glue:GetDevEndpoints",
                                    "glue:GetJob",
                                    "glue:GetJobBookmark",
                                    "glue:GetJobRun",
                                    "glue:GetJobRuns",
                                    "glue:GetJobs",
                                    "glue:GetMapping",
                                    "glue:GetMLTaskRun",
                                    "glue:GetMLTaskRuns",
                                    "glue:GetMLTransform",
                                    "glue:GetMLTransforms",
                                    "glue:GetPartition",
                                    "glue:GetPartitions",
                                    "glue:GetPlan",
                                    "glue:GetRegistry",
                                    "glue:GetResourcePolicy",
                                    "glue:GetSchema",
                                    "glue:GetSchemaByDefinition",
                                    "glue:GetSchemaVersion",
                                    "glue:GetSchemaVersionsDiff",
                                    "glue:GetSecurityConfiguration",
                                    "glue:GetSecurityConfigurations",
                                    "glue:GetTable",
                                    "glue:GetTables",
                                    "glue:GetTableVersion",
                                    "glue:GetTableVersions",
                                    "glue:GetTags",
                                    "glue:GetTrigger",
                                    "glue:GetTriggers",
                                    "glue:GetUserDefinedFunction",
                                    "glue:GetUserDefinedFunctions",
                                    "glue:GetWorkflow",
                                    "glue:GetWorkflowRun",
                                    "glue:GetWorkflowRunProperties",
                                    "glue:GetWorkflowRuns",
                                    "glue:ListCrawlers",
                                    "glue:ListDevEndpoints",
                                    "glue:ListJobs",
                                    "glue:ListMLTransforms",
                                    "glue:ListRegistries",
                                    "glue:ListSchemas",
                                    "glue:ListSchemaVersions",
                                    "glue:ListTriggers",
                                    "glue:ListWorkflows",
                                    "glue:QuerySchemaVersionMetadata",
                                    "greengrass:DescribeComponent",
                                    "greengrass:Get*",
                                    "greengrass:List*",
                                    "groundstation:DescribeContact",
                                    "groundstation:GetConfig",
                                    "groundstation:GetDataflowEndpointGroup",
                                    "groundstation:GetMinuteUsage",
                                    "groundstation:GetMissionProfile",
                                    "groundstation:GetSatellite",
                                    "groundstation:ListConfigs",
                                    "groundstation:ListContacts",
                                    "groundstation:ListDataflowEndpointGroups",
                                    "groundstation:ListGroundStations",
                                    "groundstation:ListMissionProfiles",
                                    "groundstation:ListSatellites",
                                    "groundstation:ListTagsForResource",
                                    "guardduty:DescribeOrganizationConfiguration",
                                    "guardduty:DescribePublishingDestination",
                                    "guardduty:Get*",
                                    "guardduty:List*",
                                    "health:Describe*",
                                    "iam:Generate*",
                                    "iam:Get*",
                                    "iam:List*",
                                    "iam:Simulate*",
                                    "imagebuilder:Get*",
                                    "imagebuilder:List*",
                                    "importexport:Get*",
                                    "importexport:List*",
                                    "inspector:Describe*",
                                    "inspector:Get*",
                                    "inspector:List*",
                                    "inspector:Preview*",
                                    "iot:Describe*",
                                    "iot:Get*",
                                    "iot:List*",
                                    "iot1click:DescribeDevice",
                                    "iot1click:DescribePlacement",
                                    "iot1click:DescribeProject",
                                    "iot1click:GetDeviceMethods",
                                    "iot1click:GetDevicesInPlacement",
                                    "iot1click:ListDeviceEvents",
                                    "iot1click:ListDevices",
                                    "iot1click:ListPlacements",
                                    "iot1click:ListProjects",
                                    "iot1click:ListTagsForResource",
                                    "iotanalytics:Describe*",
                                    "iotanalytics:Get*",
                                    "iotanalytics:List*",
                                    "iotanalytics:SampleChannelData",
                                    "iotevents:DescribeAlarm",
                                    "iotevents:DescribeAlarmModel",
                                    "iotevents:DescribeDetector",
                                    "iotevents:DescribeDetectorModel",
                                    "iotevents:DescribeInput",
                                    "iotevents:DescribeLoggingOptions",
                                    "iotevents:ListAlarmModels",
                                    "iotevents:ListAlarmModelVersions",
                                    "iotevents:ListAlarms",
                                    "iotevents:ListDetectorModels",
                                    "iotevents:ListDetectorModelVersions",
                                    "iotevents:ListDetectors",
                                    "iotevents:ListInputs",
                                    "iotevents:ListTagsForResource",
                                    "iotfleethub:DescribeApplication",
                                    "iotfleethub:ListApplications",
                                    "iotsitewise:Describe*",
                                    "iotsitewise:Get*",
                                    "iotsitewise:List*",
                                    "iotwireless:GetDestination",
                                    "iotwireless:GetDeviceProfile",
                                    "iotwireless:GetPartnerAccount",
                                    "iotwireless:GetServiceEndpoint",
                                    "iotwireless:GetServiceProfile",
                                    "iotwireless:GetWirelessDevice",
                                    "iotwireless:GetWirelessDeviceStatistics",
                                    "iotwireless:GetWirelessGateway",
                                    "iotwireless:GetWirelessGatewayCertificate",
                                    "iotwireless:GetWirelessGatewayFirmwareInformation",
                                    "iotwireless:GetWirelessGatewayStatistics",
                                    "iotwireless:GetWirelessGatewayTask",
                                    "iotwireless:GetWirelessGatewayTaskDefinition",
                                    "iotwireless:ListDestinations",
                                    "iotwireless:ListDeviceProfiles",
                                    "iotwireless:ListPartnerAccounts",
                                    "iotwireless:ListServiceProfiles",
                                    "iotwireless:ListTagsForResource",
                                    "iotwireless:ListWirelessDevices",
                                    "iotwireless:ListWirelessGateways",
                                    "iotwireless:ListWirelessGatewayTaskDefinitions",
                                    "ivs:BatchGetChannel",
                                    "ivs:GetChannel",
                                    "ivs:GetPlaybackKeyPair",
                                    "ivs:GetRecordingConfiguration",
                                    "ivs:ListChannels",
                                    "ivs:ListPlaybackKeyPairs",
                                    "ivs:ListRecordingConfigurations",
                                    "ivs:ListStreams",
                                    "ivs:ListTagsForResource",
                                    "kafka:Describe*",
                                    "kafka:Get*",
                                    "kafka:List*",
                                    "kendra:DescribeDataSource",
                                    "kendra:DescribeFaq",
                                    "kendra:DescribeIndex",
                                    "kendra:DescribeQuerySuggestionsBlockList",
                                    "kendra:DescribeQuerySuggestionsConfig",
                                    "kendra:DescribeThesaurus",
                                    "kendra:GetQuerySuggestions",
                                    "kendra:ListDataSources",
                                    "kendra:ListDataSourceSyncJobs",
                                    "kendra:ListFaqs",
                                    "kendra:ListIndices",
                                    "kendra:ListQuerySuggestionsBlockLists",
                                    "kendra:ListTagsForResource",
                                    "kendra:ListThesauri",
                                    "kendra:Query",
                                    "kinesis:Describe*",
                                    "kinesis:Get*",
                                    "kinesis:List*",
                                    "kinesisanalytics:Describe*",
                                    "kinesisanalytics:Discover*",
                                    "kinesisanalytics:Get*",
                                    "kinesisanalytics:List*",
                                    "kinesisvideo:Describe*",
                                    "kinesisvideo:Get*",
                                    "kinesisvideo:List*",
                                    "kms:Describe*",
                                    "kms:Get*",
                                    "kms:List*",
                                    "lambda:Get*",
                                    "lambda:List*",
                                    "lex:DescribeBot",
                                    "lex:DescribeBotAlias",
                                    "lex:DescribeBotChannel",
                                    "lex:DescribeBotLocale",
                                    "lex:DescribeBotVersion",
                                    "lex:DescribeExport",
                                    "lex:DescribeImport",
                                    "lex:DescribeIntent",
                                    "lex:DescribeResourcePolicy",
                                    "lex:DescribeSlot",
                                    "lex:DescribeSlotType",
                                    "lex:Get*",
                                    "lex:ListBotAliases",
                                    "lex:ListBotChannels",
                                    "lex:ListBotLocales",
                                    "lex:ListBots",
                                    "lex:ListBotVersions",
                                    "lex:ListBuiltInIntents",
                                    "lex:ListBuiltInSlotTypes",
                                    "lex:ListExports",
                                    "lex:ListImports",
                                    "lex:ListIntents",
                                    "lex:ListSlots",
                                    "lex:ListSlotTypes",
                                    "lex:ListTagsForResource",
                                    "license-manager:Get*",
                                    "license-manager:List*",
                                    "lightsail:GetActiveNames",
                                    "lightsail:GetAlarms",
                                    "lightsail:GetAutoSnapshots",
                                    "lightsail:GetBlueprints",
                                    "lightsail:GetBucketAccessKeys",
                                    "lightsail:GetBucketBundles",
                                    "lightsail:GetBucketMetricData",
                                    "lightsail:GetBuckets",
                                    "lightsail:GetBundles",
                                    "lightsail:GetCertificates",
                                    "lightsail:GetCloudFormationStackRecords",
                                    "lightsail:GetContainerAPIMetadata",
                                    "lightsail:GetContainerImages",
                                    "lightsail:GetContainerServiceDeployments",
                                    "lightsail:GetContainerServiceMetricData",
                                    "lightsail:GetContainerServicePowers",
                                    "lightsail:GetContainerServices",
                                    "lightsail:GetDisk",
                                    "lightsail:GetDisks",
                                    "lightsail:GetDiskSnapshot",
                                    "lightsail:GetDiskSnapshots",
                                    "lightsail:GetDistributionBundles",
                                    "lightsail:GetDistributionLatestCacheReset",
                                    "lightsail:GetDistributionMetricData",
                                    "lightsail:GetDistributions",
                                    "lightsail:GetDomain",
                                    "lightsail:GetDomains",
                                    "lightsail:GetExportSnapshotRecords",
                                    "lightsail:GetInstance",
                                    "lightsail:GetInstanceMetricData",
                                    "lightsail:GetInstancePortStates",
                                    "lightsail:GetInstances",
                                    "lightsail:GetInstanceSnapshot",
                                    "lightsail:GetInstanceSnapshots",
                                    "lightsail:GetInstanceState",
                                    "lightsail:GetKeyPair",
                                    "lightsail:GetKeyPairs",
                                    "lightsail:GetLoadBalancer",
                                    "lightsail:GetLoadBalancerMetricData",
                                    "lightsail:GetLoadBalancers",
                                    "lightsail:GetLoadBalancerTlsCertificates",
                                    "lightsail:GetOperation",
                                    "lightsail:GetOperations",
                                    "lightsail:GetOperationsForResource",
                                    "lightsail:GetRegions",
                                    "lightsail:GetRelationalDatabase",
                                    "lightsail:GetRelationalDatabaseBlueprints",
                                    "lightsail:GetRelationalDatabaseBundles",
                                    "lightsail:GetRelationalDatabaseEvents",
                                    "lightsail:GetRelationalDatabaseLogEvents",
                                    "lightsail:GetRelationalDatabaseLogStreams",
                                    "lightsail:GetRelationalDatabaseMetricData",
                                    "lightsail:GetRelationalDatabaseParameters",
                                    "lightsail:GetRelationalDatabases",
                                    "lightsail:GetRelationalDatabaseSnapshot",
                                    "lightsail:GetRelationalDatabaseSnapshots",
                                    "lightsail:GetStaticIp",
                                    "lightsail:GetStaticIps",
                                    "lightsail:Is*",
                                    "logs:Describe*",
                                    "logs:FilterLogEvents",
                                    "logs:Get*",
                                    "logs:ListTagsLogGroup",
                                    "logs:StartQuery",
                                    "logs:StopQuery",
                                    "logs:TestMetricFilter",
                                    "lookoutvision:DescribeDataset",
                                    "lookoutvision:DescribeModel",
                                    "lookoutvision:DescribeProject",
                                    "lookoutvision:ListDatasetEntries",
                                    "lookoutvision:ListModels",
                                    "lookoutvision:ListProjects",
                                    "lookoutvision:ListTagsForResource",
                                    "machinelearning:Describe*",
                                    "machinelearning:Get*",
                                    "macie:ListMemberAccounts",
                                    "macie:ListS3Resources",
                                    "macie2:BatchGetCustomDataIdentifiers",
                                    "macie2:DescribeBuckets",
                                    "macie2:DescribeClassificationJob",
                                    "macie2:DescribeOrganizationConfiguration",
                                    "macie2:GetAdministratorAccount",
                                    "macie2:GetBucketStatistics",
                                    "macie2:GetClassificationExportConfiguration",
                                    "macie2:GetCustomDataIdentifier",
                                    "macie2:GetFindings",
                                    "macie2:GetFindingsFilter",
                                    "macie2:GetFindingsPublicationConfiguration",
                                    "macie2:GetFindingStatistics",
                                    "macie2:GetInvitationsCount",
                                    "macie2:GetMacieSession",
                                    "macie2:GetMember",
                                    "macie2:GetUsageStatistics",
                                    "macie2:GetUsageTotals",
                                    "macie2:ListClassificationJobs",
                                    "macie2:ListCustomDataIdentifiers",
                                    "macie2:ListFindings",
                                    "macie2:ListFindingsFilters",
                                    "macie2:ListInvitations",
                                    "macie2:ListMembers",
                                    "macie2:ListOrganizationAdminAccounts",
                                    "macie2:ListTagsForResource",
                                    "macie2:SearchResources",
                                    "managedblockchain:GetNetwork",
                                    "managedblockchain:GetProposal",
                                    "managedblockchain:GetMember",
                                    "managedblockchain:GetNode",
                                    "managedblockchain:ListNetworks",
                                    "managedblockchain:ListProposals",
                                    "managedblockchain:ListProposalVotes",
                                    "managedblockchain:ListInvitations",
                                    "managedblockchain:ListMembers",
                                    "managedblockchain:ListNodes",
                                    "managedblockchain:ListTagsForResource",
                                    "mediaconnect:DescribeFlow",
                                    "mediaconnect:DescribeOffering",
                                    "mediaconnect:DescribeReservation",
                                    "mediaconnect:ListFlows",
                                    "mediaconvert:DescribeEndpoints",
                                    "mediaconvert:Get*",
                                    "mediaconvert:List*",
                                    "mediapackage:Describe*",
                                    "mediapackage:List*",
                                    "mediastore:DescribeContainer",
                                    "mediastore:DescribeObject",
                                    "mediastore:GetContainerPolicy",
                                    "mediastore:GetCorsPolicy",
                                    "mediastore:GetLifecyclePolicy",
                                    "mediastore:GetMetricPolicy",
                                    "mediastore:GetObject",
                                    "mediastore:ListContainers",
                                    "mediastore:ListItems",
                                    "mediastore:ListTagsForResource",
                                    "mgh:Describe*",
                                    "mgh:GetHomeRegion",
                                    "mgh:List*",
                                    "mgn:DescribeJobLogItems",
                                    "mgn:DescribeJobs",
                                    "mgn:DescribeReplicationConfigurationTemplates",
                                    "mgn:DescribeSourceServers",
                                    "mgn:GetLaunchConfiguration",
                                    "mgn:GetReplicationConfiguration",
                                    "mobileanalytics:Get*",
                                    "mobilehub:Describe*",
                                    "mobilehub:Export*",
                                    "mobilehub:Generate*",
                                    "mobilehub:Get*",
                                    "mobilehub:List*",
                                    "mobilehub:Validate*",
                                    "mobilehub:Verify*",
                                    "mobiletargeting:Get*",
                                    "mobiletargeting:List*",
                                    "monitron:GetProject",
                                    "monitron:GetProjectAdminUser",
                                    "monitron:ListProjects",
                                    "monitron:ListTagsForResource",
                                    "mq:Describe*",
                                    "mq:List*",
                                    "network-firewall:DescribeFirewall",
                                    "network-firewall:DescribeFirewallPolicy",
                                    "network-firewall:DescribeLoggingConfiguration",
                                    "network-firewall:DescribeResourcePolicy",
                                    "network-firewall:DescribeRuleGroup",
                                    "network-firewall:ListFirewallPolicies",
                                    "network-firewall:ListFirewalls",
                                    "network-firewall:ListRuleGroups",
                                    "network-firewall:ListTagsForResource",
                                    "networkmanager:DescribeGlobalNetworks",
                                    "networkmanager:GetConnections",
                                    "networkmanager:GetCustomerGatewayAssociations",
                                    "networkmanager:GetDevices",
                                    "networkmanager:GetLinkAssociations",
                                    "networkmanager:GetLinks",
                                    "networkmanager:GetSites",
                                    "networkmanager:GetTransitGatewayConnectPeerAssociations",
                                    "networkmanager:GetTransitGatewayRegistrations",
                                    "opsworks-cm:Describe*",
                                    "opsworks-cm:List*",
                                    "opsworks:Describe*",
                                    "opsworks:Get*",
                                    "organizations:Describe*",
                                    "organizations:List*",
                                    "outposts:Get*",
                                    "outposts:List*",
                                    "personalize:Describe*",
                                    "personalize:Get*",
                                    "personalize:List*",
                                    "pi:DescribeDimensionKeys",
                                    "pi:GetDimensionKeyDetails",
                                    "pi:GetResourceMetrics",
                                    "polly:Describe*",
                                    "polly:Get*",
                                    "polly:List*",
                                    "polly:SynthesizeSpeech",
                                    "proton:GetEnvironment",
                                    "proton:GetEnvironmentTemplate",
                                    "proton:GetEnvironmentTemplateVersion",
                                    "proton:GetService",
                                    "proton:GetServiceInstance",
                                    "proton:GetServiceTemplate",
                                    "proton:GetServiceTemplateVersion",
                                    "proton:ListEnvironmentAccountConnections",
                                    "proton:ListEnvironments",
                                    "proton:ListEnvironmentTemplates",
                                    "proton:ListServiceInstances",
                                    "proton:ListServices",
                                    "proton:ListServiceTemplates",
                                    "proton:ListTagsForResource",
                                    "qldb:DescribeJournalS3Export",
                                    "qldb:DescribeLedger",
                                    "qldb:GetBlock",
                                    "qldb:GetDigest",
                                    "qldb:GetRevision",
                                    "qldb:ListJournalS3Exports",
                                    "qldb:ListJournalS3ExportsForLedger",
                                    "qldb:ListLedgers",
                                    "qldb:ListTagsForResource",
                                    "ram:Get*",
                                    "ram:List*",
                                    "rds:Describe*",
                                    "rds:Download*",
                                    "rds:List*",
                                    "redshift:Describe*",
                                    "redshift:GetReservedNodeExchangeOfferings",
                                    "redshift:View*",
                                    "rekognition:CompareFaces",
                                    "rekognition:Detect*",
                                    "rekognition:List*",
                                    "rekognition:Search*",
                                    "resource-groups:Get*",
                                    "resource-groups:List*",
                                    "resource-groups:Search*",
                                    "robomaker:BatchDescribe*",
                                    "robomaker:Describe*",
                                    "robomaker:Get*",
                                    "robomaker:List*",
                                    "route53-recovery-cluster:Get*",
                                    "route53-recovery-control-config:Describe*",
                                    "route53-recovery-control-config:List*",
                                    "route53-recovery-readiness:Get*",
                                    "route53-recovery-readiness:List*",
                                    "route53:Get*",
                                    "route53:List*",
                                    "route53:Test*",
                                    "route53domains:Check*",
                                    "route53domains:Get*",
                                    "route53domains:List*",
                                    "route53domains:View*",
                                    "route53resolver:Get*",
                                    "route53resolver:List*",
                                    "s3-object-lambda:GetObject",
                                    "s3-object-lambda:GetObjectAcl",
                                    "s3-object-lambda:GetObjectLegalHold",
                                    "s3-object-lambda:GetObjectRetention",
                                    "s3-object-lambda:GetObjectTagging",
                                    "s3-object-lambda:GetObjectVersion",
                                    "s3-object-lambda:GetObjectVersionAcl",
                                    "s3-object-lambda:GetObjectVersionTagging",
                                    "s3-object-lambda:ListBucket",
                                    "s3-object-lambda:ListBucketMultipartUploads",
                                    "s3-object-lambda:ListBucketVersions",
                                    "s3-object-lambda:ListMultipartUploadParts",
                                    "s3:DescribeJob",
                                    "s3:Get*",
                                    "s3:List*",
                                    "sagemaker:Describe*",
                                    "sagemaker:GetSearchSuggestions",
                                    "sagemaker:List*",
                                    "sagemaker:Search",
                                    "savingsplans:DescribeSavingsPlanRates",
                                    "savingsplans:DescribeSavingsPlans",
                                    "savingsplans:DescribeSavingsPlansOfferingRates",
                                    "savingsplans:DescribeSavingsPlansOfferings",
                                    "savingsplans:ListTagsForResource",
                                    "schemas:Describe*",
                                    "schemas:Get*",
                                    "schemas:List*",
                                    "schemas:Search*",
                                    "sdb:Get*",
                                    "sdb:List*",
                                    "sdb:Select*",
                                    "secretsmanager:Describe*",
                                    "secretsmanager:GetResourcePolicy",
                                    "secretsmanager:List*",
                                    "securityhub:Describe*",
                                    "securityhub:Get*",
                                    "securityhub:List*",
                                    "serverlessrepo:Get*",
                                    "serverlessrepo:List*",
                                    "serverlessrepo:SearchApplications",
                                    "servicecatalog:Describe*",
                                    "servicecatalog:GetApplication",
                                    "servicecatalog:GetAttributeGroup",
                                    "servicecatalog:List*",
                                    "servicecatalog:Scan*",
                                    "servicecatalog:Search*",
                                    "servicediscovery:Get*",
                                    "servicediscovery:List*",
                                    "servicequotas:GetAssociationForServiceQuotaTemplate",
                                    "servicequotas:GetAWSDefaultServiceQuota",
                                    "servicequotas:GetRequestedServiceQuotaChange",
                                    "servicequotas:GetServiceQuota",
                                    "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                                    "servicequotas:ListAWSDefaultServiceQuotas",
                                    "servicequotas:ListRequestedServiceQuotaChangeHistory",
                                    "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                                    "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                                    "servicequotas:ListServiceQuotas",
                                    "servicequotas:ListServices",
                                    "ses:Describe*",
                                    "ses:Get*",
                                    "ses:List*",
                                    "shield:Describe*",
                                    "shield:Get*",
                                    "shield:List*",
                                    "signer:DescribeSigningJob",
                                    "signer:GetSigningPlatform",
                                    "signer:GetSigningProfile",
                                    "signer:ListProfilePermissions",
                                    "signer:ListSigningJobs",
                                    "signer:ListSigningPlatforms",
                                    "signer:ListSigningProfiles",
                                    "signer:ListTagsForResource",
                                    "snowball:Describe*",
                                    "snowball:Get*",
                                    "snowball:List*",
                                    "sns:Check*",
                                    "sns:Get*",
                                    "sns:List*",
                                    "sqs:Get*",
                                    "sqs:List*",
                                    "sqs:Receive*",
                                    "ssm-contacts:DescribeEngagement",
                                    "ssm-contacts:DescribePage",
                                    "ssm-contacts:GetContact",
                                    "ssm-contacts:GetContactChannel",
                                    "ssm-contacts:ListContactChannels",
                                    "ssm-contacts:ListContacts",
                                    "ssm-contacts:ListEngagements",
                                    "ssm-contacts:ListPageReceipts",
                                    "ssm-contacts:ListPagesByContact",
                                    "ssm-contacts:ListPagesByEngagement",
                                    "ssm-incidents:GetIncidentRecord",
                                    "ssm-incidents:GetReplicationSet",
                                    "ssm-incidents:GetResourcePolicies",
                                    "ssm-incidents:GetResponsePlan",
                                    "ssm-incidents:GetTimelineEvent",
                                    "ssm-incidents:ListIncidentRecords",
                                    "ssm-incidents:ListRelatedItems",
                                    "ssm-incidents:ListReplicationSets",
                                    "ssm-incidents:ListResponsePlans",
                                    "ssm-incidents:ListTagsForResource",
                                    "ssm-incidents:ListTimelineEvents",
                                    "ssm:Describe*",
                                    "ssm:Get*",
                                    "ssm:List*",
                                    "sso-directory:Describe*",
                                    "sso-directory:List*",
                                    "sso-directory:Search*",
                                    "sso:Describe*",
                                    "sso:Get*",
                                    "sso:List*",
                                    "sso:Search*",
                                    "states:Describe*",
                                    "states:GetExecutionHistory",
                                    "states:List*",
                                    "storagegateway:Describe*",
                                    "storagegateway:List*",
                                    "sts:GetAccessKeyInfo",
                                    "sts:GetCallerIdentity",
                                    "sts:GetSessionToken",
                                    "support:DescribeCases",
                                    "swf:Count*",
                                    "swf:Describe*",
                                    "swf:Get*",
                                    "swf:List*",
                                    "synthetics:Describe*",
                                    "synthetics:Get*",
                                    "synthetics:List*",
                                    "tag:Get*",
                                    "timestream:DescribeDatabase",
                                    "timestream:DescribeEndpoints",
                                    "timestream:DescribeTable",
                                    "timestream:ListDatabases",
                                    "timestream:ListMeasures",
                                    "timestream:ListTables",
                                    "timestream:ListTagsForResource",
                                    "transcribe:Get*",
                                    "transcribe:List*",
                                    "transfer:Describe*",
                                    "transfer:List*",
                                    "transfer:TestIdentityProvider",
                                    "trustedadvisor:Describe*",
                                    "waf-regional:Get*",
                                    "waf-regional:List*",
                                    "waf:Get*",
                                    "waf:List*",
                                    "wafv2:CheckCapacity",
                                    "wafv2:Describe*",
                                    "wafv2:Get*",
                                    "wafv2:List*",
                                    "workdocs:CheckAlias",
                                    "workdocs:Describe*",
                                    "workdocs:Get*",
                                    "worklink:Describe*",
                                    "worklink:List*",
                                    "workmail:Describe*",
                                    "workmail:Get*",
                                    "workmail:List*",
                                    "workmail:Search*",
                                    "workspaces:Describe*",
                                    "xray:BatchGet*",
                                    "xray:Get*"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v82",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-10-26 20:14:30+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSDataPipeline_PowerUser",
            "PolicyId": "ANPAIMXGLVY6DVR24VTYS",
            "Arn": "arn:aws:iam::aws:policy/AWSDataPipeline_PowerUser",
            "Path": "/",
            "DefaultVersionId": "v2",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2017-01-19 23:16:46+00:00",
            "UpdateDate": "2017-08-17 18:49:42+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Action": [
                                    "s3:List*",
                                    "dynamodb:DescribeTable",
                                    "rds:DescribeDBInstances",
                                    "rds:DescribeDBSecurityGroups",
                                    "redshift:DescribeClusters",
                                    "redshift:DescribeClusterSecurityGroups",
                                    "sns:ListTopics",
                                    "iam:ListRoles",
                                    "iam:GetRolePolicy",
                                    "iam:GetInstanceProfile",
                                    "iam:ListInstanceProfiles",
                                    "datapipeline:*"
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Action": "iam:PassRole",
                                "Effect": "Allow",
                                "Resource": [
                                    "arn:aws:iam::*:role/DataPipelineDefaultResourceRole",
                                    "arn:aws:iam::*:role/DataPipelineDefaultRole"
                                ]
                            }
                        ]
                    },
                    "VersionId": "v2",
                    "IsDefaultVersion": true,
                    "CreateDate": "2017-08-17 18:49:42+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSCodeStarServiceRole",
            "PolicyId": "ANPAIN6D4M2KD3NBOC4M4",
            "Arn": "arn:aws:iam::aws:policy/service-role/AWSCodeStarServiceRole",
            "Path": "/service-role/",
            "DefaultVersionId": "v11",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2017-04-19 15:20:50+00:00",
            "UpdateDate": "2021-09-20 19:11:03+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Sid": "ProjectEventRules",
                                "Effect": "Allow",
                                "Action": [
                                    "events:PutTargets",
                                    "events:RemoveTargets",
                                    "events:PutRule",
                                    "events:DeleteRule",
                                    "events:DescribeRule"
                                ],
                                "Resource": [
                                    "arn:aws:events:*:*:rule/awscodestar-*"
                                ]
                            },
                            {
                                "Sid": "ProjectStack",
                                "Effect": "Allow",
                                "Action": [
                                    "cloudformation:*Stack*",
                                    "cloudformation:CreateChangeSet",
                                    "cloudformation:ExecuteChangeSet",
                                    "cloudformation:DeleteChangeSet",
                                    "cloudformation:GetTemplate"
                                ],
                                "Resource": [
                                    "arn:aws:cloudformation:*:*:stack/awscodestar-*",
                                    "arn:aws:cloudformation:*:*:stack/awseb-*",
                                    "arn:aws:cloudformation:*:*:stack/aws-cloud9-*",
                                    "arn:aws:cloudformation:*:aws:transform/CodeStar*"
                                ]
                            },
                            {
                                "Sid": "ProjectStackTemplate",
                                "Effect": "Allow",
                                "Action": [
                                    "cloudformation:GetTemplateSummary",
                                    "cloudformation:DescribeChangeSet"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "ProjectQuickstarts",
                                "Effect": "Allow",
                                "Action": [
                                    "s3:GetObject"
                                ],
                                "Resource": [
                                    "arn:aws:s3:::awscodestar-*/*"
                                ]
                            },
                            {
                                "Sid": "ProjectS3Buckets",
                                "Effect": "Allow",
                                "Action": [
                                    "s3:*"
                                ],
                                "Resource": [
                                    "arn:aws:s3:::aws-codestar-*",
                                    "arn:aws:s3:::elasticbeanstalk-*"
                                ]
                            },
                            {
                                "Sid": "ProjectServices",
                                "Effect": "Allow",
                                "Action": [
                                    "codestar:*",
                                    "codecommit:*",
                                    "codepipeline:*",
                                    "codedeploy:*",
                                    "codebuild:*",
                                    "autoscaling:*",
                                    "cloudwatch:Put*",
                                    "ec2:*",
                                    "elasticbeanstalk:*",
                                    "elasticloadbalancing:*",
                                    "iam:ListRoles",
                                    "logs:*",
                                    "sns:*",
                                    "cloud9:CreateEnvironmentEC2",
                                    "cloud9:DeleteEnvironment",
                                    "cloud9:DescribeEnvironment*",
                                    "cloud9:ListEnvironments"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "ProjectWorkerRoles",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:AttachRolePolicy",
                                    "iam:CreateRole",
                                    "iam:DeleteRole",
                                    "iam:DeleteRolePolicy",
                                    "iam:DetachRolePolicy",
                                    "iam:GetRole",
                                    "iam:PassRole",
                                    "iam:GetRolePolicy",
                                    "iam:PutRolePolicy",
                                    "iam:SetDefaultPolicyVersion",
                                    "iam:CreatePolicy",
                                    "iam:DeletePolicy",
                                    "iam:AddRoleToInstanceProfile",
                                    "iam:CreateInstanceProfile",
                                    "iam:DeleteInstanceProfile",
                                    "iam:RemoveRoleFromInstanceProfile"
                                ],
                                "Resource": [
                                    "arn:aws:iam::*:role/CodeStarWorker*",
                                    "arn:aws:iam::*:policy/CodeStarWorker*",
                                    "arn:aws:iam::*:instance-profile/awscodestar-*"
                                ]
                            },
                            {
                                "Sid": "ProjectTeamMembers",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:AttachUserPolicy",
                                    "iam:DetachUserPolicy"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "ArnEquals": {
                                        "iam:PolicyArn": [
                                            "arn:aws:iam::*:policy/CodeStar_*"
                                        ]
                                    }
                                }
                            },
                            {
                                "Sid": "ProjectRoles",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreatePolicy",
                                    "iam:DeletePolicy",
                                    "iam:CreatePolicyVersion",
                                    "iam:DeletePolicyVersion",
                                    "iam:ListEntitiesForPolicy",
                                    "iam:ListPolicyVersions",
                                    "iam:GetPolicy",
                                    "iam:GetPolicyVersion"
                                ],
                                "Resource": [
                                    "arn:aws:iam::*:policy/CodeStar_*"
                                ]
                            },
                            {
                                "Sid": "InspectServiceRole",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:ListAttachedRolePolicies"
                                ],
                                "Resource": [
                                    "arn:aws:iam::*:role/aws-codestar-service-role",
                                    "arn:aws:iam::*:role/service-role/aws-codestar-service-role"
                                ]
                            },
                            {
                                "Sid": "IAMLinkRole",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateServiceLinkedRole"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "iam:AWSServiceName": "cloud9.amazonaws.com"
                                    }
                                }
                            },
                            {
                                "Sid": "DescribeConfigRuleForARN",
                                "Effect": "Allow",
                                "Action": [
                                    "config:DescribeConfigRules"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Sid": "ProjectCodeStarConnections",
                                "Effect": "Allow",
                                "Action": [
                                    "codestar-connections:UseConnection",
                                    "codestar-connections:GetConnection"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "ProjectCodeStarConnectionsPassConnections",
                                "Effect": "Allow",
                                "Action": "codestar-connections:PassConnection",
                                "Resource": "*",
                                "Condition": {
                                    "StringEqualsIfExists": {
                                        "codestar-connections:PassedToService": "codepipeline.amazonaws.com"
                                    }
                                }
                            }
                        ]
                    },
                    "VersionId": "v11",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-09-20 19:11:03+00:00"
                }
            ]
        },
        {
            "PolicyName": "AmazonRDSServiceRolePolicy",
            "PolicyId": "ANPAIPEU5ZOBJWKWHUIBA",
            "Arn": "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSServiceRolePolicy",
            "Path": "/aws-service-role/",
            "DefaultVersionId": "v9",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2018-01-08 18:17:46+00:00",
            "UpdateDate": "2020-11-21 00:08:24+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "rds:CrossRegionCommunication"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:AllocateAddress",
                                    "ec2:AssociateAddress",
                                    "ec2:AuthorizeSecurityGroupIngress",
                                    "ec2:CreateNetworkInterface",
                                    "ec2:CreateSecurityGroup",
                                    "ec2:DeleteNetworkInterface",
                                    "ec2:DeleteSecurityGroup",
                                    "ec2:DescribeAddresses",
                                    "ec2:DescribeAvailabilityZones",
                                    "ec2:DescribeCoipPools",
                                    "ec2:DescribeInternetGateways",
                                    "ec2:DescribeLocalGatewayRouteTables",
                                    "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                                    "ec2:DescribeLocalGateways",
                                    "ec2:DescribeSecurityGroups",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeVpcAttribute",
                                    "ec2:DescribeVpcs",
                                    "ec2:DisassociateAddress",
                                    "ec2:ModifyNetworkInterfaceAttribute",
                                    "ec2:ModifyVpcEndpoint",
                                    "ec2:ReleaseAddress",
                                    "ec2:RevokeSecurityGroupIngress",
                                    "ec2:CreateVpcEndpoint",
                                    "ec2:DescribeVpcEndpoints",
                                    "ec2:DeleteVpcEndpoints",
                                    "ec2:AssignPrivateIpAddresses",
                                    "ec2:UnassignPrivateIpAddresses"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "sns:Publish"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogGroup"
                                ],
                                "Resource": [
                                    "arn:aws:logs:*:*:log-group:/aws/rds/*",
                                    "arn:aws:logs:*:*:log-group:/aws/docdb/*",
                                    "arn:aws:logs:*:*:log-group:/aws/neptune/*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents",
                                    "logs:DescribeLogStreams"
                                ],
                                "Resource": [
                                    "arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
                                    "arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*",
                                    "arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "kinesis:CreateStream",
                                    "kinesis:PutRecord",
                                    "kinesis:PutRecords",
                                    "kinesis:DescribeStream",
                                    "kinesis:SplitShard",
                                    "kinesis:MergeShards",
                                    "kinesis:DeleteStream",
                                    "kinesis:UpdateShardCount"
                                ],
                                "Resource": [
                                    "arn:aws:kinesis:*:*:stream/aws-rds-das-*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:PutMetricData"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "cloudwatch:namespace": "AWS/RDS"
                                    }
                                }
                            }
                        ]
                    },
                    "VersionId": "v9",
                    "IsDefaultVersion": true,
                    "CreateDate": "2020-11-21 00:08:24+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSOrganizationsServiceTrustPolicy",
            "PolicyId": "ANPAIQH6ROMVVECFVRJPK",
            "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSOrganizationsServiceTrustPolicy",
            "Path": "/aws-service-role/",
            "DefaultVersionId": "v2",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2017-10-10 23:04:07+00:00",
            "UpdateDate": "2017-11-01 06:01:18+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Sid": "AllowDeletionOfServiceLinkedRoleForOrganizations",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:DeleteRole"
                                ],
                                "Resource": [
                                    "arn:aws:iam::*:role/aws-service-role/organizations.amazonaws.com/*"
                                ]
                            },
                            {
                                "Sid": "AllowCreationOfServiceLinkedRoles",
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateServiceLinkedRole"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v2",
                    "IsDefaultVersion": true,
                    "CreateDate": "2017-11-01 06:01:18+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSConfigRole",
            "PolicyId": "ANPAIQRXRDRGJUA33ELIO",
            "Arn": "arn:aws:iam::aws:policy/service-role/AWSConfigRole",
            "Path": "/service-role/",
            "DefaultVersionId": "v41",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-04-02 17:36:23+00:00",
            "UpdateDate": "2021-09-08 18:07:39+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "access-analyzer:GetAnalyzer",
                                    "access-analyzer:ListAnalyzers",
                                    "access-analyzer:ListArchiveRules",
                                    "access-analyzer:ListTagsForResource",
                                    "acm:DescribeCertificate",
                                    "acm:ListCertificates",
                                    "acm:ListTagsForCertificate",
                                    "apigateway:GET",
                                    "application-autoscaling:DescribeScalableTargets",
                                    "application-autoscaling:DescribeScalingPolicies",
                                    "autoscaling:DescribeAutoScalingGroups",
                                    "autoscaling:DescribeLaunchConfigurations",
                                    "autoscaling:DescribeLifecycleHooks",
                                    "autoscaling:DescribePolicies",
                                    "autoscaling:DescribeScheduledActions",
                                    "autoscaling:DescribeTags",
                                    "backup:DescribeBackupVault",
                                    "backup:DescribeRecoveryPoint",
                                    "backup:GetBackupPlan",
                                    "backup:GetBackupSelection",
                                    "backup:GetBackupVaultAccessPolicy",
                                    "backup:GetBackupVaultNotifications",
                                    "backup:ListBackupPlans",
                                    "backup:ListBackupSelections",
                                    "backup:ListBackupVaults",
                                    "backup:ListRecoveryPointsByBackupVault",
                                    "backup:ListTags",
                                    "cloudformation:DescribeType",
                                    "cloudformation:ListTypes",
                                    "cloudfront:ListDistributions",
                                    "cloudfront:ListTagsForResource",
                                    "cloudtrail:DescribeTrails",
                                    "cloudtrail:GetEventSelectors",
                                    "cloudtrail:GetTrailStatus",
                                    "cloudtrail:ListTags",
                                    "cloudwatch:DescribeAlarms",
                                    "codepipeline:GetPipeline",
                                    "codepipeline:GetPipelineState",
                                    "codepipeline:ListPipelines",
                                    "config:BatchGet*",
                                    "config:Describe*",
                                    "config:Get*",
                                    "config:List*",
                                    "config:Put*",
                                    "config:Select*",
                                    "dax:DescribeClusters",
                                    "dms:DescribeEventSubscriptions",
                                    "dms:DescribeReplicationInstances",
                                    "dms:DescribeReplicationSubnetGroups",
                                    "dms:ListTagsForResource",
                                    "dynamodb:DescribeContinuousBackups",
                                    "dynamodb:DescribeLimits",
                                    "dynamodb:DescribeTable",
                                    "dynamodb:ListTables",
                                    "dynamodb:ListTagsOfResource",
                                    "ec2:Describe*",
                                    "ec2:GetEbsEncryptionByDefault",
                                    "ecr-public:DescribeRepositories",
                                    "ecr-public:GetRepositoryCatalogData",
                                    "ecr-public:ListTagsForResource",
                                    "ecr:DescribeRepositories",
                                    "ecr:GetLifecyclePolicy",
                                    "ecr:GetRepositoryPolicy",
                                    "ecr:ListTagsForResource",
                                    "ecs:DescribeClusters",
                                    "ecs:DescribeServices",
                                    "ecs:DescribeTaskDefinition",
                                    "ecs:DescribeTaskSets",
                                    "ecs:ListClusters",
                                    "ecs:ListServices",
                                    "ecs:ListTagsForResource",
                                    "ecs:ListTaskDefinitions",
                                    "eks:DescribeCluster",
                                    "eks:DescribeNodegroup",
                                    "eks:ListClusters",
                                    "eks:ListNodegroups",
                                    "elasticache:DescribeCacheClusters",
                                    "elasticache:DescribeCacheParameterGroups",
                                    "elasticache:DescribeCacheSubnetGroups",
                                    "elasticache:DescribeReplicationGroups",
                                    "elasticache:DescribeSnapshots",
                                    "elasticache:ListTagsForResource",
                                    "elasticfilesystem:DescribeAccessPoints",
                                    "elasticfilesystem:DescribeBackupPolicy",
                                    "elasticfilesystem:DescribeFileSystemPolicy",
                                    "elasticfilesystem:DescribeFileSystems",
                                    "elasticfilesystem:DescribeLifecycleConfiguration",
                                    "elasticfilesystem:DescribeMountTargets",
                                    "elasticfilesystem:DescribeMountTargetSecurityGroups",
                                    "elasticloadbalancing:DescribeListeners",
                                    "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                    "elasticloadbalancing:DescribeLoadBalancerPolicies",
                                    "elasticloadbalancing:DescribeLoadBalancers",
                                    "elasticloadbalancing:DescribeRules",
                                    "elasticloadbalancing:DescribeTags",
                                    "elasticmapreduce:DescribeCluster",
                                    "elasticmapreduce:DescribeSecurityConfiguration",
                                    "elasticmapreduce:DescribeStep",
                                    "elasticmapreduce:GetBlockPublicAccessConfiguration",
                                    "elasticmapreduce:GetManagedScalingPolicy",
                                    "elasticmapreduce:ListClusters",
                                    "elasticmapreduce:ListInstanceFleets",
                                    "elasticmapreduce:ListInstanceGroups",
                                    "elasticmapreduce:ListInstances",
                                    "elasticmapreduce:ListSecurityConfigurations",
                                    "elasticmapreduce:ListSteps",
                                    "es:DescribeElasticsearchDomain",
                                    "es:DescribeElasticsearchDomains",
                                    "es:ListDomainNames",
                                    "es:ListTags",
                                    "es:DescribeDomain",
                                    "es:DescribeDomains",
                                    "firehose:DescribeDeliveryStream",
                                    "firehose:ListDeliveryStreams",
                                    "firehose:ListTagsForDeliveryStream",
                                    "fsx:DescribeFileSystems",
                                    "globalaccelerator:DescribeAccelerator",
                                    "globalaccelerator:DescribeEndpointGroup",
                                    "globalaccelerator:DescribeListener",
                                    "globalaccelerator:ListAccelerators",
                                    "globalaccelerator:ListEndpointGroups",
                                    "globalaccelerator:ListListeners",
                                    "globalaccelerator:ListTagsForResource",
                                    "guardduty:GetDetector",
                                    "guardduty:GetFindings",
                                    "guardduty:GetMasterAccount",
                                    "guardduty:ListDetectors",
                                    "guardduty:ListFindings",
                                    "iam:GenerateCredentialReport",
                                    "iam:GetAccountAuthorizationDetails",
                                    "iam:GetAccountPasswordPolicy",
                                    "iam:GetAccountSummary",
                                    "iam:GetCredentialReport",
                                    "iam:GetGroup",
                                    "iam:GetGroupPolicy",
                                    "iam:GetPolicy",
                                    "iam:GetPolicyVersion",
                                    "iam:GetRole",
                                    "iam:GetRolePolicy",
                                    "iam:GetUser",
                                    "iam:GetUserPolicy",
                                    "iam:ListAttachedGroupPolicies",
                                    "iam:ListAttachedRolePolicies",
                                    "iam:ListAttachedUserPolicies",
                                    "iam:ListEntitiesForPolicy",
                                    "iam:ListGroupPolicies",
                                    "iam:ListGroupsForUser",
                                    "iam:ListInstanceProfilesForRole",
                                    "iam:ListPolicyVersions",
                                    "iam:ListRolePolicies",
                                    "iam:ListUserPolicies",
                                    "iam:ListVirtualMFADevices",
                                    "kafka:DescribeCluster",
                                    "kafka:ListClusters",
                                    "kinesis:DescribeStreamConsumer",
                                    "kinesis:DescribeStreamSummary",
                                    "kinesis:ListStreamConsumers",
                                    "kinesis:ListStreams",
                                    "kinesis:ListTagsForStream",
                                    "kms:DescribeKey",
                                    "kms:GetKeyPolicy",
                                    "kms:GetKeyRotationStatus",
                                    "kms:ListKeys",
                                    "kms:ListResourceTags",
                                    "lambda:GetAlias",
                                    "lambda:GetFunction",
                                    "lambda:GetFunctionCodeSigningConfig",
                                    "lambda:GetPolicy",
                                    "lambda:ListAliases",
                                    "lambda:ListFunctions",
                                    "lambda:ListVersionsByFunction",
                                    "logs:DescribeLogGroups",
                                    "logs:ListTagsLogGroup",
                                    "network-firewall:DescribeLoggingConfiguration",
                                    "network-firewall:ListFirewalls",
                                    "organizations:DescribeOrganization",
                                    "rds:DescribeDBParameterGroups",
                                    "rds:DescribeDBClusters",
                                    "rds:DescribeDBClusterSnapshotAttributes",
                                    "rds:DescribeDBClusterSnapshots",
                                    "rds:DescribeDBEngineVersions",
                                    "rds:DescribeDBInstances",
                                    "rds:DescribeDBSecurityGroups",
                                    "rds:DescribeDBSnapshotAttributes",
                                    "rds:DescribeDBSnapshots",
                                    "rds:DescribeDBSubnetGroups",
                                    "rds:DescribeEventSubscriptions",
                                    "rds:ListTagsForResource",
                                    "rds:DescribeDBParameters",
                                    "redshift:DescribeClusterParameterGroups",
                                    "redshift:DescribeClusterParameters",
                                    "redshift:DescribeClusters",
                                    "redshift:DescribeClusterSecurityGroups",
                                    "redshift:DescribeClusterSnapshots",
                                    "redshift:DescribeClusterSubnetGroups",
                                    "redshift:DescribeEventSubscriptions",
                                    "redshift:DescribeLoggingStatus",
                                    "route53:GetHealthCheck",
                                    "route53:GetHostedZone",
                                    "route53:ListHealthChecks",
                                    "route53:ListHostedZones",
                                    "route53:ListHostedZonesByName",
                                    "route53:ListQueryLoggingConfigs",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListTagsForResource",
                                    "route53resolver:GetResolverEndpoint",
                                    "route53resolver:GetResolverRule",
                                    "route53resolver:GetResolverRuleAssociation",
                                    "route53resolver:ListResolverEndpointIpAddresses",
                                    "route53resolver:ListResolverEndpoints",
                                    "route53resolver:ListResolverRuleAssociations",
                                    "route53resolver:ListResolverRules",
                                    "route53resolver:ListTagsForResource",
                                    "s3:GetAccelerateConfiguration",
                                    "s3:GetAccessPoint",
                                    "s3:GetAccessPointPolicy",
                                    "s3:GetAccessPointPolicyStatus",
                                    "s3:GetAccountPublicAccessBlock",
                                    "s3:GetBucketAcl",
                                    "s3:GetBucketCORS",
                                    "s3:GetBucketLocation",
                                    "s3:GetBucketLogging",
                                    "s3:GetBucketNotification",
                                    "s3:GetBucketObjectLockConfiguration",
                                    "s3:GetBucketPolicy",
                                    "s3:GetBucketPublicAccessBlock",
                                    "s3:GetBucketRequestPayment",
                                    "s3:GetBucketTagging",
                                    "s3:GetBucketVersioning",
                                    "s3:GetBucketWebsite",
                                    "s3:GetEncryptionConfiguration",
                                    "s3:GetLifecycleConfiguration",
                                    "s3:GetObject",
                                    "s3:GetReplicationConfiguration",
                                    "s3:ListAccessPoints",
                                    "s3:ListAllMyBuckets",
                                    "s3:ListBucket",
                                    "sagemaker:DescribeCodeRepository",
                                    "sagemaker:DescribeEndpoint",
                                    "sagemaker:DescribeEndpointConfig",
                                    "sagemaker:DescribeModel",
                                    "sagemaker:DescribeMonitoringSchedule",
                                    "sagemaker:DescribeNotebookInstance",
                                    "sagemaker:DescribeNotebookInstanceLifecycleConfig",
                                    "sagemaker:DescribeWorkteam",
                                    "sagemaker:ListCodeRepositories",
                                    "sagemaker:ListEndpointConfigs",
                                    "sagemaker:ListEndpoints",
                                    "sagemaker:ListModels",
                                    "sagemaker:ListMonitoringSchedules",
                                    "sagemaker:ListNotebookInstanceLifecycleConfigs",
                                    "sagemaker:ListNotebookInstances",
                                    "sagemaker:ListTags",
                                    "sagemaker:ListWorkteams",
                                    "secretsmanager:ListSecrets",
                                    "secretsmanager:ListSecretVersionIds",
                                    "securityhub:DescribeHub",
                                    "shield:DescribeDRTAccess",
                                    "shield:DescribeProtection",
                                    "shield:DescribeSubscription",
                                    "sns:GetSubscriptionAttributes",
                                    "sns:GetTopicAttributes",
                                    "sns:ListSubscriptions",
                                    "sns:ListSubscriptionsByTopic",
                                    "sns:ListTagsForResource",
                                    "sns:ListTopics",
                                    "sqs:GetQueueAttributes",
                                    "sqs:ListQueues",
                                    "sqs:ListQueueTags",
                                    "ssm:DescribeAutomationExecutions",
                                    "ssm:DescribeDocument",
                                    "ssm:DescribeDocumentPermission",
                                    "ssm:GetAutomationExecution",
                                    "ssm:GetDocument",
                                    "ssm:ListDocuments",
                                    "states:DescribeStateMachine",
                                    "states:ListStateMachines",
                                    "states:ListTagsForResource",
                                    "storagegateway:ListGateways",
                                    "storagegateway:ListTagsForResource",
                                    "storagegateway:ListVolumes",
                                    "support:DescribeCases",
                                    "tag:GetResources",
                                    "waf-regional:GetLoggingConfiguration",
                                    "waf-regional:GetWebACL",
                                    "waf-regional:GetWebACLForResource",
                                    "waf:GetLoggingConfiguration",
                                    "waf:GetWebACL",
                                    "wafv2:GetLoggingConfiguration"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v41",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-09-08 18:07:39+00:00"
                }
            ]
        },
        {
            "PolicyName": "AdministratorAccess",
            "PolicyId": "ANPAIWMBCKSKIEE64ZLYK",
            "Arn": "arn:aws:iam::aws:policy/AdministratorAccess",
            "Path": "/",
            "DefaultVersionId": "v1",
            "AttachmentCount": 3,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-02-06 18:39:46+00:00",
            "UpdateDate": "2015-02-06 18:39:46+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": "*",
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": true,
                    "CreateDate": "2015-02-06 18:39:46+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSSupportServiceRolePolicy",
            "PolicyId": "ANPAJ7W6266ELXF5MISDS",
            "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy",
            "Path": "/aws-service-role/",
            "DefaultVersionId": "v19",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2018-04-19 18:04:44+00:00",
            "UpdateDate": "2021-12-22 08:23:42+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Statement": [
                            {
                                "Action": [
                                    "apigateway:GET"
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                    "arn:aws:apigateway:*::/account",
                                    "arn:aws:apigateway:*::/apis",
                                    "arn:aws:apigateway:*::/apis/*",
                                    "arn:aws:apigateway:*::/apis/*/authorizers",
                                    "arn:aws:apigateway:*::/apis/*/authorizers/*",
                                    "arn:aws:apigateway:*::/apis/*/deployments",
                                    "arn:aws:apigateway:*::/apis/*/deployments/*",
                                    "arn:aws:apigateway:*::/apis/*/integrations",
                                    "arn:aws:apigateway:*::/apis/*/integrations/*",
                                    "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
                                    "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
                                    "arn:aws:apigateway:*::/apis/*/models",
                                    "arn:aws:apigateway:*::/apis/*/models/*",
                                    "arn:aws:apigateway:*::/apis/*/routes",
                                    "arn:aws:apigateway:*::/apis/*/routes/*",
                                    "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
                                    "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
                                    "arn:aws:apigateway:*::/apis/*/stages",
                                    "arn:aws:apigateway:*::/apis/*/stages/*",
                                    "arn:aws:apigateway:*::/clientcertificates",
                                    "arn:aws:apigateway:*::/clientcertificates/*",
                                    "arn:aws:apigateway:*::/domainnames",
                                    "arn:aws:apigateway:*::/domainnames/*",
                                    "arn:aws:apigateway:*::/domainnames/*/apimappings",
                                    "arn:aws:apigateway:*::/domainnames/*/apimappings/*",
                                    "arn:aws:apigateway:*::/domainnames/*/basepathmappings",
                                    "arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
                                    "arn:aws:apigateway:*::/restapis",
                                    "arn:aws:apigateway:*::/restapis/*",
                                    "arn:aws:apigateway:*::/restapis/*/authorizers",
                                    "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                                    "arn:aws:apigateway:*::/restapis/*/deployments",
                                    "arn:aws:apigateway:*::/restapis/*/deployments/*",
                                    "arn:aws:apigateway:*::/restapis/*/models",
                                    "arn:aws:apigateway:*::/restapis/*/models/*",
                                    "arn:aws:apigateway:*::/restapis/*/models/*/default_template",
                                    "arn:aws:apigateway:*::/restapis/*/resources",
                                    "arn:aws:apigateway:*::/restapis/*/resources/*",
                                    "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
                                    "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
                                    "arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
                                    "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
                                    "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
                                    "arn:aws:apigateway:*::/restapis/*/stages",
                                    "arn:aws:apigateway:*::/restapis/*/stages/*"
                                ]
                            },
                            {
                                "Action": [
                                    "iam:DeleteRole"
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                    "arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
                                ]
                            },
                            {
                                "Action": [
                                    "a4b:getDevice",
                                    "a4b:getProfile",
                                    "a4b:getRoom",
                                    "a4b:getRoomSkillParameter",
                                    "a4b:getSkillGroup",
                                    "a4b:searchDevices",
                                    "a4b:searchProfiles",
                                    "a4b:searchRooms",
                                    "a4b:searchSkillGroups",
                                    "access-analyzer:getFinding",
                                    "access-analyzer:listAnalyzers",
                                    "access-analyzer:listArchiveRules",
                                    "access-analyzer:listFindings",
                                    "acm-pca:describeCertificateAuthority",
                                    "acm-pca:describeCertificateAuthorityAuditReport",
                                    "acm-pca:getCertificate",
                                    "acm-pca:getCertificateAuthorityCertificate",
                                    "acm-pca:getCertificateAuthorityCsr",
                                    "acm-pca:listCertificateAuthorities",
                                    "acm-pca:listTags",
                                    "acm:describeCertificate",
                                    "acm:getCertificate",
                                    "acm:listCertificates",
                                    "acm:listTagsForCertificate",
                                    "airflow:getEnvironment",
                                    "airflow:listEnvironments",
                                    "airflow:listTagsForResource",
                                    "amplify:getApp",
                                    "amplify:getBranch",
                                    "amplify:getDomainAssociation",
                                    "amplify:getJob",
                                    "amplify:getWebhook",
                                    "amplify:listApps",
                                    "amplify:listWebhooks",
                                    "appflow:describeConnectorEntity",
                                    "appflow:describeConnectorProfiles",
                                    "appflow:describeFlow",
                                    "appflow:listFlows",
                                    "appflow:describeConnectors",
                                    "appflow:describeFlowExecutionRecords",
                                    "appflow:listConnectorEntities",
                                    "application-autoscaling:describeScalableTargets",
                                    "application-autoscaling:describeScalingActivities",
                                    "application-autoscaling:describeScalingPolicies",
                                    "application-autoscaling:describeScheduledActions",
                                    "applicationinsights:describeComponentConfiguration",
                                    "applicationinsights:describeComponentConfigurationRecommendation",
                                    "applicationinsights:listApplications",
                                    "applicationinsights:listComponents",
                                    "applicationinsights:listConfigurationHistory",
                                    "applicationinsights:listLogPatterns",
                                    "applicationinsights:listLogPatternSets",
                                    "appmesh:describeGatewayRoute",
                                    "appmesh:describeMesh",
                                    "appmesh:describeRoute",
                                    "appmesh:describeVirtualGateway",
                                    "appmesh:describeVirtualNode",
                                    "appmesh:describeVirtualRouter",
                                    "appmesh:describeVirtualService",
                                    "appmesh:listGatewayRoutes",
                                    "appmesh:listMeshes",
                                    "appmesh:listRoutes",
                                    "appmesh:listTagsForResource",
                                    "appmesh:listVirtualGateways",
                                    "appmesh:listVirtualNodes",
                                    "appmesh:listVirtualRouters",
                                    "appmesh:listVirtualServices",
                                    "apprunner:describeAutoScalingConfiguration",
                                    "apprunner:describeCustomDomains",
                                    "apprunner:describeOperation",
                                    "apprunner:describeService",
                                    "apprunner:listAutoScalingConfigurations",
                                    "apprunner:listConnections",
                                    "apprunner:listOperations",
                                    "apprunner:listServices",
                                    "apprunner:listTagsForResource",
                                    "appstream:describeDirectoryConfigs",
                                    "appstream:describeFleets",
                                    "appstream:describeImageBuilders",
                                    "appstream:describeImages",
                                    "appstream:describeSessions",
                                    "appstream:describeStacks",
                                    "appstream:listAssociatedFleets",
                                    "appstream:listAssociatedStacks",
                                    "appstream:listTagsForResource",
                                    "appsync:getFunction",
                                    "appsync:getGraphqlApi",
                                    "appsync:getIntrospectionSchema",
                                    "appsync:getResolver",
                                    "appsync:getSchemaCreationStatus",
                                    "appsync:getType",
                                    "appsync:listDataSources",
                                    "appsync:listFunctions",
                                    "appsync:listGraphqlApis",
                                    "appsync:listResolvers",
                                    "appsync:listTypes",
                                    "athena:batchGetNamedQuery",
                                    "athena:batchGetQueryExecution",
                                    "athena:getNamedQuery",
                                    "athena:getQueryExecution",
                                    "athena:getWorkGroup",
                                    "athena:listNamedQueries",
                                    "athena:listQueryExecutions",
                                    "athena:listTagsForResource",
                                    "athena:listWorkGroups",
                                    "auditmanager:getAccountStatus",
                                    "auditmanager:getDelegations",
                                    "auditmanager:listAssessmentFrameworks",
                                    "auditmanager:listAssessmentReports",
                                    "auditmanager:listAssessments",
                                    "auditmanager:listControls",
                                    "auditmanager:listKeywordsForDataSource",
                                    "auditmanager:listNotifications",
                                    "autoscaling-plans:describeScalingPlanResources",
                                    "autoscaling-plans:describeScalingPlans",
                                    "autoscaling-plans:getScalingPlanResourceForecastData",
                                    "autoscaling:describeAccountLimits",
                                    "autoscaling:describeAdjustmentTypes",
                                    "autoscaling:describeAutoScalingGroups",
                                    "autoscaling:describeAutoScalingInstances",
                                    "autoscaling:describeAutoScalingNotificationTypes",
                                    "autoscaling:describeInstanceRefreshes",
                                    "autoscaling:describeLaunchConfigurations",
                                    "autoscaling:describeLifecycleHooks",
                                    "autoscaling:describeLifecycleHookTypes",
                                    "autoscaling:describeLoadBalancers",
                                    "autoscaling:describeLoadBalancerTargetGroups",
                                    "autoscaling:describeMetricCollectionTypes",
                                    "autoscaling:describeNotificationConfigurations",
                                    "autoscaling:describePolicies",
                                    "autoscaling:describeScalingActivities",
                                    "autoscaling:describeScalingProcessTypes",
                                    "autoscaling:describeScheduledActions",
                                    "autoscaling:describeTags",
                                    "autoscaling:describeTerminationPolicyTypes",
                                    "backup:describeBackupJob",
                                    "backup:describeBackupVault",
                                    "backup:describeProtectedResource",
                                    "backup:describeRecoveryPoint",
                                    "backup:describeRestoreJob",
                                    "backup:getBackupPlan",
                                    "backup:getBackupPlanFromJSON",
                                    "backup:getBackupPlanFromTemplate",
                                    "backup:getBackupSelection",
                                    "backup:getBackupVaultAccessPolicy",
                                    "backup:getBackupVaultNotifications",
                                    "backup:getRecoveryPointRestoreMetadata",
                                    "backup:getSupportedResourceTypes",
                                    "backup:listBackupJobs",
                                    "backup:listBackupPlans",
                                    "backup:listBackupPlanTemplates",
                                    "backup:listBackupPlanVersions",
                                    "backup:listBackupSelections",
                                    "backup:listBackupVaults",
                                    "backup:listProtectedResources",
                                    "backup:listRecoveryPointsByBackupVault",
                                    "backup:listRecoveryPointsByResource",
                                    "backup:listRestoreJobs",
                                    "backup:listTags",
                                    "batch:describeComputeEnvironments",
                                    "batch:describeJobDefinitions",
                                    "batch:describeJobQueues",
                                    "batch:describeJobs",
                                    "batch:listJobs",
                                    "braket:getDevice",
                                    "braket:getQuantumTask",
                                    "braket:searchDevices",
                                    "braket:searchQuantumTasks",
                                    "budgets:viewBudget",
                                    "ce:getCostAndUsage",
                                    "ce:getCostAndUsageWithResources",
                                    "ce:getCostForecast",
                                    "ce:getDimensionValues",
                                    "ce:getReservationCoverage",
                                    "ce:getReservationPurchaseRecommendation",
                                    "ce:getReservationUtilization",
                                    "ce:getRightsizingRecommendation",
                                    "ce:getSavingsPlansCoverage",
                                    "ce:getSavingsPlansPurchaseRecommendation",
                                    "ce:getSavingsPlansUtilization",
                                    "ce:getSavingsPlansUtilizationDetails",
                                    "ce:getTags",
                                    "cloud9:describeEnvironmentMemberships",
                                    "cloud9:describeEnvironments",
                                    "cloud9:listEnvironments",
                                    "clouddirectory:getDirectory",
                                    "clouddirectory:listDirectories",
                                    "cloudformation:describeAccountLimits",
                                    "cloudformation:describeChangeSet",
                                    "cloudformation:describeStackEvents",
                                    "cloudformation:describeStackInstance",
                                    "cloudformation:describeStackResource",
                                    "cloudformation:describeStackResources",
                                    "cloudformation:describeStacks",
                                    "cloudformation:describeStackSet",
                                    "cloudformation:describeStackSetOperation",
                                    "cloudformation:estimateTemplateCost",
                                    "cloudformation:getStackPolicy",
                                    "cloudformation:getTemplate",
                                    "cloudformation:getTemplateSummary",
                                    "cloudformation:listChangeSets",
                                    "cloudformation:listExports",
                                    "cloudformation:listImports",
                                    "cloudformation:listStackInstances",
                                    "cloudformation:listStackResources",
                                    "cloudformation:listStacks",
                                    "cloudformation:listStackSetOperationResults",
                                    "cloudformation:listStackSetOperations",
                                    "cloudformation:listStackSets",
                                    "cloudfront:getCloudFrontOriginAccessIdentity",
                                    "cloudfront:getCloudFrontOriginAccessIdentityConfig",
                                    "cloudfront:getDistribution",
                                    "cloudfront:getDistributionConfig",
                                    "cloudfront:getInvalidation",
                                    "cloudfront:getStreamingDistribution",
                                    "cloudfront:getStreamingDistributionConfig",
                                    "cloudfront:listCloudFrontOriginAccessIdentities",
                                    "cloudfront:listDistributions",
                                    "cloudfront:listDistributionsByWebACLId",
                                    "cloudfront:listInvalidations",
                                    "cloudfront:listStreamingDistributions",
                                    "cloudhsm:describeBackups",
                                    "cloudhsm:describeClusters",
                                    "cloudsearch:describeAnalysisSchemes",
                                    "cloudsearch:describeAvailabilityOptions",
                                    "cloudsearch:describeDomains",
                                    "cloudsearch:describeExpressions",
                                    "cloudsearch:describeIndexFields",
                                    "cloudsearch:describeScalingParameters",
                                    "cloudsearch:describeServiceAccessPolicies",
                                    "cloudsearch:describeSuggesters",
                                    "cloudsearch:listDomainNames",
                                    "cloudtrail:describeTrails",
                                    "cloudtrail:getEventSelectors",
                                    "cloudtrail:getInsightSelectors",
                                    "cloudtrail:getTrail",
                                    "cloudtrail:getTrailStatus",
                                    "cloudtrail:listPublicKeys",
                                    "cloudtrail:listTags",
                                    "cloudtrail:listTrails",
                                    "cloudtrail:lookupEvents",
                                    "cloudwatch:describeAlarmHistory",
                                    "cloudwatch:describeAlarms",
                                    "cloudwatch:describeAlarmsForMetric",
                                    "cloudwatch:describeAnomalyDetectors",
                                    "cloudwatch:describeInsightRules",
                                    "cloudwatch:getDashboard",
                                    "cloudwatch:getInsightRuleReport",
                                    "cloudwatch:getMetricData",
                                    "cloudwatch:getMetricStatistics",
                                    "cloudwatch:listDashboards",
                                    "cloudwatch:listMetrics",
                                    "codeartifact:describeDomain",
                                    "codeartifact:describePackageVersion",
                                    "codeartifact:describeRepository",
                                    "codeartifact:getDomainPermissionsPolicy",
                                    "codeartifact:getRepositoryEndPoint",
                                    "codeartifact:getRepositoryPermissionsPolicy",
                                    "codeartifact:listDomains",
                                    "codeartifact:listPackages",
                                    "codeartifact:listPackageVersionAssets",
                                    "codeartifact:listPackageVersions",
                                    "codeartifact:listRepositories",
                                    "codeartifact:listRepositoriesInDomain",
                                    "codebuild:batchGetBuildBatches",
                                    "codebuild:batchGetBuilds",
                                    "codebuild:batchGetProjects",
                                    "codebuild:listBuildBatches",
                                    "codebuild:listBuildBatchesForProject",
                                    "codebuild:listBuilds",
                                    "codebuild:listBuildsForProject",
                                    "codebuild:listCuratedEnvironmentImages",
                                    "codebuild:listProjects",
                                    "codebuild:listSourceCredentials",
                                    "codecommit:batchGetRepositories",
                                    "codecommit:getBranch",
                                    "codecommit:getRepository",
                                    "codecommit:getRepositoryTriggers",
                                    "codecommit:listBranches",
                                    "codecommit:listRepositories",
                                    "codedeploy:batchGetApplicationRevisions",
                                    "codedeploy:batchGetApplications",
                                    "codedeploy:batchGetDeploymentGroups",
                                    "codedeploy:batchGetDeploymentInstances",
                                    "codedeploy:batchGetDeployments",
                                    "codedeploy:batchGetDeploymentTargets",
                                    "codedeploy:batchGetOnPremisesInstances",
                                    "codedeploy:getApplication",
                                    "codedeploy:getApplicationRevision",
                                    "codedeploy:getDeployment",
                                    "codedeploy:getDeploymentConfig",
                                    "codedeploy:getDeploymentGroup",
                                    "codedeploy:getDeploymentInstance",
                                    "codedeploy:getDeploymentTarget",
                                    "codedeploy:getOnPremisesInstance",
                                    "codedeploy:listApplicationRevisions",
                                    "codedeploy:listApplications",
                                    "codedeploy:listDeploymentConfigs",
                                    "codedeploy:listDeploymentGroups",
                                    "codedeploy:listDeploymentInstances",
                                    "codedeploy:listDeployments",
                                    "codedeploy:listDeploymentTargets",
                                    "codedeploy:listGitHubAccountTokenNames",
                                    "codedeploy:listOnPremisesInstances",
                                    "codepipeline:getJobDetails",
                                    "codepipeline:getPipeline",
                                    "codepipeline:getPipelineExecution",
                                    "codepipeline:getPipelineState",
                                    "codepipeline:listActionExecutions",
                                    "codepipeline:listActionTypes",
                                    "codepipeline:listPipelineExecutions",
                                    "codepipeline:listPipelines",
                                    "codepipeline:listWebhooks",
                                    "codestar:describeProject",
                                    "codestar:listProjects",
                                    "codestar:listResources",
                                    "codestar:listTeamMembers",
                                    "codestar:listUserProfiles",
                                    "cognito-identity:describeIdentityPool",
                                    "cognito-identity:getIdentityPoolRoles",
                                    "cognito-identity:listIdentities",
                                    "cognito-identity:listIdentityPools",
                                    "cognito-idp:adminGetUser",
                                    "cognito-idp:describeIdentityProvider",
                                    "cognito-idp:describeResourceServer",
                                    "cognito-idp:describeRiskConfiguration",
                                    "cognito-idp:describeUserImportJob",
                                    "cognito-idp:describeUserPool",
                                    "cognito-idp:describeUserPoolClient",
                                    "cognito-idp:describeUserPoolDomain",
                                    "cognito-idp:getGroup",
                                    "cognito-idp:getUICustomization",
                                    "cognito-idp:getUser",
                                    "cognito-idp:getUserPoolMfaConfig",
                                    "cognito-idp:listGroups",
                                    "cognito-idp:listIdentityProviders",
                                    "cognito-idp:listResourceServers",
                                    "cognito-idp:listUserImportJobs",
                                    "cognito-idp:listUserPoolClients",
                                    "cognito-idp:listUserPools",
                                    "cognito-sync:describeDataset",
                                    "cognito-sync:describeIdentityPoolUsage",
                                    "cognito-sync:describeIdentityUsage",
                                    "cognito-sync:getCognitoEvents",
                                    "cognito-sync:getIdentityPoolConfiguration",
                                    "cognito-sync:listDatasets",
                                    "cognito-sync:listIdentityPoolUsage",
                                    "compute-optimizer:getAutoScalingGroupRecommendations",
                                    "compute-optimizer:getEBSVolumeRecommendations",
                                    "compute-optimizer:getEC2InstanceRecommendations",
                                    "compute-optimizer:getEC2RecommendationProjectedMetrics",
                                    "compute-optimizer:getEnrollmentStatus",
                                    "compute-optimizer:getRecommendationSummaries",
                                    "config:batchGetAggregateResourceConfig",
                                    "config:batchGetResourceConfig",
                                    "config:describeAggregateComplianceByConfigRules",
                                    "config:describeAggregationAuthorizations",
                                    "config:describeComplianceByConfigRule",
                                    "config:describeComplianceByResource",
                                    "config:describeConfigRuleEvaluationStatus",
                                    "config:describeConfigRules",
                                    "config:describeConfigurationAggregators",
                                    "config:describeConfigurationAggregatorSourcesStatus",
                                    "config:describeConfigurationRecorders",
                                    "config:describeConfigurationRecorderStatus",
                                    "config:describeConformancePackCompliance",
                                    "config:describeConformancePacks",
                                    "config:describeConformancePackStatus",
                                    "config:describeDeliveryChannels",
                                    "config:describeDeliveryChannelStatus",
                                    "config:describeOrganizationConfigRules",
                                    "config:describeOrganizationConfigRuleStatuses",
                                    "config:describeOrganizationConformancePacks",
                                    "config:describeOrganizationConformancePackStatuses",
                                    "config:describePendingAggregationRequests",
                                    "config:describeRemediationConfigurations",
                                    "config:describeRemediationExceptions",
                                    "config:describeRemediationExecutionStatus",
                                    "config:describeRetentionConfigurations",
                                    "config:getAggregateComplianceDetailsByConfigRule",
                                    "config:getAggregateConfigRuleComplianceSummary",
                                    "config:getAggregateDiscoveredResourceCounts",
                                    "config:getAggregateResourceConfig",
                                    "config:getComplianceDetailsByConfigRule",
                                    "config:getComplianceDetailsByResource",
                                    "config:getComplianceSummaryByConfigRule",
                                    "config:getComplianceSummaryByResourceType",
                                    "config:getConformancePackComplianceDetails",
                                    "config:getConformancePackComplianceSummary",
                                    "config:getDiscoveredResourceCounts",
                                    "config:getOrganizationConfigRuleDetailedStatus",
                                    "config:getOrganizationConformancePackDetailedStatus",
                                    "config:getResourceConfigHistory",
                                    "config:listAggregateDiscoveredResources",
                                    "config:listDiscoveredResources",
                                    "config:listTagsForResource",
                                    "connect:describeUser",
                                    "connect:getCurrentMetricData",
                                    "connect:getMetricData",
                                    "connect:listRoutingProfiles",
                                    "connect:listSecurityProfiles",
                                    "connect:listUsers",
                                    "controltower:describeAccountFactoryConfig",
                                    "controltower:describeCoreService",
                                    "controltower:describeGuardrail",
                                    "controltower:describeGuardrailForTarget",
                                    "controltower:describeManagedAccount",
                                    "controltower:describeSingleSignOn",
                                    "controltower:getAvailableUpdates",
                                    "controltower:getHomeRegion",
                                    "controltower:getLandingZoneStatus",
                                    "controltower:listDirectoryGroups",
                                    "controltower:listGuardrailsForTarget",
                                    "controltower:listGuardrailViolations",
                                    "controltower:listManagedAccounts",
                                    "controltower:listManagedAccountsForGuardrail",
                                    "controltower:listManagedAccountsForParent",
                                    "controltower:listManagedOrganizationalUnits",
                                    "controltower:listManagedOrganizationalUnitsForGuardrail",
                                    "databrew:describeDataset",
                                    "databrew:describeJob",
                                    "databrew:describeProject",
                                    "databrew:describeRecipe",
                                    "databrew:listDatasets",
                                    "databrew:listJobRuns",
                                    "databrew:listJobs",
                                    "databrew:listProjects",
                                    "databrew:listRecipes",
                                    "databrew:listRecipeVersions",
                                    "databrew:listTagsForResource",
                                    "datapipeline:describeObjects",
                                    "datapipeline:describePipelines",
                                    "datapipeline:getPipelineDefinition",
                                    "datapipeline:listPipelines",
                                    "datapipeline:queryObjects",
                                    "datasync:describeAgent",
                                    "datasync:describeLocationEfs",
                                    "datasync:describeLocationFsxWindows",
                                    "datasync:describeLocationNfs",
                                    "datasync:describeLocationObjectStorage",
                                    "datasync:describeLocationS3",
                                    "datasync:describeLocationSmb",
                                    "datasync:describeTask",
                                    "datasync:describeTaskExecution",
                                    "datasync:listAgents",
                                    "datasync:listLocations",
                                    "datasync:listTaskExecutions",
                                    "datasync:listTasks",
                                    "dax:describeClusters",
                                    "dax:describeDefaultParameters",
                                    "dax:describeEvents",
                                    "dax:describeParameterGroups",
                                    "dax:describeParameters",
                                    "dax:describeSubnetGroups",
                                    "detective:getMembers",
                                    "detective:listGraphs",
                                    "detective:listInvitations",
                                    "detective:listMembers",
                                    "devicefarm:getAccountSettings",
                                    "devicefarm:getDevice",
                                    "devicefarm:getDevicePool",
                                    "devicefarm:getDevicePoolCompatibility",
                                    "devicefarm:getJob",
                                    "devicefarm:getProject",
                                    "devicefarm:getRemoteAccessSession",
                                    "devicefarm:getRun",
                                    "devicefarm:getSuite",
                                    "devicefarm:getTest",
                                    "devicefarm:getTestGridProject",
                                    "devicefarm:getTestGridSession",
                                    "devicefarm:getUpload",
                                    "devicefarm:listArtifacts",
                                    "devicefarm:listDevicePools",
                                    "devicefarm:listDevices",
                                    "devicefarm:listJobs",
                                    "devicefarm:listProjects",
                                    "devicefarm:listRemoteAccessSessions",
                                    "devicefarm:listRuns",
                                    "devicefarm:listSamples",
                                    "devicefarm:listSuites",
                                    "devicefarm:listTestGridProjects",
                                    "devicefarm:listTestGridSessionActions",
                                    "devicefarm:listTestGridSessionArtifacts",
                                    "devicefarm:listTestGridSessions",
                                    "devicefarm:listTests",
                                    "devicefarm:listUniqueProblems",
                                    "devicefarm:listUploads",
                                    "directconnect:describeConnections",
                                    "directconnect:describeConnectionsOnInterconnect",
                                    "directconnect:describeInterconnects",
                                    "directconnect:describeLocations",
                                    "directconnect:describeVirtualGateways",
                                    "directconnect:describeVirtualInterfaces",
                                    "dlm:getLifecyclePolicies",
                                    "dlm:getLifecyclePolicy",
                                    "dms:describeAccountAttributes",
                                    "dms:describeConnections",
                                    "dms:describeEndpoints",
                                    "dms:describeEndpointTypes",
                                    "dms:describeOrderableReplicationInstances",
                                    "dms:describeRefreshSchemasStatus",
                                    "dms:describeReplicationInstances",
                                    "dms:describeReplicationSubnetGroups",
                                    "ds:describeConditionalForwarders",
                                    "ds:describeDirectories",
                                    "ds:describeEventTopics",
                                    "ds:describeSnapshots",
                                    "ds:describeTrusts",
                                    "ds:getDirectoryLimits",
                                    "ds:getSnapshotLimits",
                                    "ds:listIpRoutes",
                                    "ds:listSchemaExtensions",
                                    "ds:listTagsForResource",
                                    "dynamodb:describeBackup",
                                    "dynamodb:describeContinuousBackups",
                                    "dynamodb:describeGlobalTable",
                                    "dynamodb:describeLimits",
                                    "dynamodb:describeStream",
                                    "dynamodb:describeTable",
                                    "dynamodb:describeTimeToLive",
                                    "dynamodb:listBackups",
                                    "dynamodb:listGlobalTables",
                                    "dynamodb:listStreams",
                                    "dynamodb:listTables",
                                    "dynamodb:listTagsOfResource",
                                    "ec2:describeAccountAttributes",
                                    "ec2:describeAddresses",
                                    "ec2:describeAvailabilityZones",
                                    "ec2:describeBundleTasks",
                                    "ec2:describeByoipCidrs",
                                    "ec2:describeCapacityReservations",
                                    "ec2:describeClassicLinkInstances",
                                    "ec2:describeClientVpnAuthorizationRules",
                                    "ec2:describeClientVpnConnections",
                                    "ec2:describeClientVpnEndpoints",
                                    "ec2:describeClientVpnRoutes",
                                    "ec2:describeClientVpnTargetNetworks",
                                    "ec2:describeCoipPools",
                                    "ec2:describeConversionTasks",
                                    "ec2:describeCustomerGateways",
                                    "ec2:describeDhcpOptions",
                                    "ec2:describeElasticGpus",
                                    "ec2:describeExportImageTasks",
                                    "ec2:describeExportTasks",
                                    "ec2:describeFastSnapshotRestores",
                                    "ec2:describeFleetHistory",
                                    "ec2:describeFleetInstances",
                                    "ec2:describeFleets",
                                    "ec2:describeFlowLogs",
                                    "ec2:describeHostReservationOfferings",
                                    "ec2:describeHostReservations",
                                    "ec2:describeHosts",
                                    "ec2:describeIdentityIdFormat",
                                    "ec2:describeIdFormat",
                                    "ec2:describeImageAttribute",
                                    "ec2:describeImages",
                                    "ec2:describeImportImageTasks",
                                    "ec2:describeImportSnapshotTasks",
                                    "ec2:describeInstanceAttribute",
                                    "ec2:describeInstances",
                                    "ec2:describeInstanceStatus",
                                    "ec2:describeInternetGateways",
                                    "ec2:describeKeyPairs",
                                    "ec2:describeLaunchTemplates",
                                    "ec2:describeLaunchTemplateVersions",
                                    "ec2:describeLocalGatewayRouteTables",
                                    "ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
                                    "ec2:describeLocalGatewayRouteTableVpcAssociations",
                                    "ec2:describeLocalGateways",
                                    "ec2:describeLocalGatewayVirtualInterfaceGroups",
                                    "ec2:describeLocalGatewayVirtualInterfaces",
                                    "ec2:describeMovingAddresses",
                                    "ec2:describeNatGateways",
                                    "ec2:describeNetworkAcls",
                                    "ec2:describeNetworkInterfaceAttribute",
                                    "ec2:describeNetworkInterfaces",
                                    "ec2:describePlacementGroups",
                                    "ec2:describePrefixLists",
                                    "ec2:describePublicIpv4Pools",
                                    "ec2:describeRegions",
                                    "ec2:describeReservedInstances",
                                    "ec2:describeReservedInstancesListings",
                                    "ec2:describeReservedInstancesModifications",
                                    "ec2:describeReservedInstancesOfferings",
                                    "ec2:describeRouteTables",
                                    "ec2:describeScheduledInstances",
                                    "ec2:describeSecurityGroups",
                                    "ec2:describeSnapshotAttribute",
                                    "ec2:describeSnapshots",
                                    "ec2:describeSpotDatafeedSubscription",
                                    "ec2:describeSpotFleetInstances",
                                    "ec2:describeSpotFleetRequestHistory",
                                    "ec2:describeSpotFleetRequests",
                                    "ec2:describeSpotInstanceRequests",
                                    "ec2:describeSpotPriceHistory",
                                    "ec2:describeSubnets",
                                    "ec2:describeTags",
                                    "ec2:describeTrafficMirrorFilters",
                                    "ec2:describeTrafficMirrorSessions",
                                    "ec2:describeTrafficMirrorTargets",
                                    "ec2:describeTransitGatewayAttachments",
                                    "ec2:describeTransitGatewayRouteTables",
                                    "ec2:describeTransitGateways",
                                    "ec2:describeTransitGatewayVpcAttachments",
                                    "ec2:describeVolumeAttribute",
                                    "ec2:describeVolumes",
                                    "ec2:describeVolumesModifications",
                                    "ec2:describeVolumeStatus",
                                    "ec2:describeVpcAttribute",
                                    "ec2:describeVpcClassicLink",
                                    "ec2:describeVpcClassicLinkDnsSupport",
                                    "ec2:describeVpcEndpointConnectionNotifications",
                                    "ec2:describeVpcEndpointConnections",
                                    "ec2:describeVpcEndpoints",
                                    "ec2:describeVpcEndpointServiceConfigurations",
                                    "ec2:describeVpcEndpointServicePermissions",
                                    "ec2:describeVpcEndpointServices",
                                    "ec2:describeVpcPeeringConnections",
                                    "ec2:describeVpcs",
                                    "ec2:describeVpnConnections",
                                    "ec2:describeVpnGateways",
                                    "ec2:getCoipPoolUsage",
                                    "ec2:getConsoleScreenshot",
                                    "ec2:getReservedInstancesExchangeQuote",
                                    "ec2:getTransitGatewayAttachmentPropagations",
                                    "ec2:getTransitGatewayRouteTableAssociations",
                                    "ec2:getTransitGatewayRouteTablePropagations",
                                    "ec2:searchLocalGatewayRoutes",
                                    "ecr-public:describeImages",
                                    "ecr-public:describeImageTags",
                                    "ecr-public:describeRegistries",
                                    "ecr-public:describeRepositories",
                                    "ecr-public:getRegistryCatalogData",
                                    "ecr-public:getRepositoryCatalogData",
                                    "ecr-public:getRepositoryPolicy",
                                    "ecr-public:listTagsForResource",
                                    "ecr:batchCheckLayerAvailability",
                                    "ecr:describeImages",
                                    "ecr:describeImageScanFindings",
                                    "ecr:describeRegistry",
                                    "ecr:describeRepositories",
                                    "ecr:getLifecyclePolicy",
                                    "ecr:getRegistryPolicy",
                                    "ecr:getRepositoryPolicy",
                                    "ecr:listImages",
                                    "ecr:listTagsForResource",
                                    "ecs:describeCapacityProviders",
                                    "ecs:describeClusters",
                                    "ecs:describeContainerInstances",
                                    "ecs:describeServices",
                                    "ecs:describeTaskDefinition",
                                    "ecs:describeTasks",
                                    "ecs:describeTaskSets",
                                    "ecs:listAccountSettings",
                                    "ecs:listAttributes",
                                    "ecs:listClusters",
                                    "ecs:listContainerInstances",
                                    "ecs:listServices",
                                    "ecs:listTagsForResource",
                                    "ecs:listTaskDefinitionFamilies",
                                    "ecs:listTaskDefinitions",
                                    "ecs:listTasks",
                                    "eks:describeCluster",
                                    "eks:describeFargateProfile",
                                    "eks:describeNodegroup",
                                    "eks:describeUpdate",
                                    "eks:listClusters",
                                    "eks:listFargateProfiles",
                                    "eks:listNodegroups",
                                    "eks:listUpdates",
                                    "elasticache:describeCacheClusters",
                                    "elasticache:describeCacheEngineVersions",
                                    "elasticache:describeCacheParameterGroups",
                                    "elasticache:describeCacheParameters",
                                    "elasticache:describeCacheSecurityGroups",
                                    "elasticache:describeCacheSubnetGroups",
                                    "elasticache:describeEngineDefaultParameters",
                                    "elasticache:describeEvents",
                                    "elasticache:describeReplicationGroups",
                                    "elasticache:describeReservedCacheNodes",
                                    "elasticache:describeReservedCacheNodesOfferings",
                                    "elasticache:describeSnapshots",
                                    "elasticache:listAllowedNodeTypeModifications",
                                    "elasticache:listTagsForResource",
                                    "elasticbeanstalk:checkDNSAvailability",
                                    "elasticbeanstalk:describeApplications",
                                    "elasticbeanstalk:describeApplicationVersions",
                                    "elasticbeanstalk:describeConfigurationOptions",
                                    "elasticbeanstalk:describeConfigurationSettings",
                                    "elasticbeanstalk:describeEnvironmentHealth",
                                    "elasticbeanstalk:describeEnvironmentManagedActionHistory",
                                    "elasticbeanstalk:describeEnvironmentManagedActions",
                                    "elasticbeanstalk:describeEnvironmentResources",
                                    "elasticbeanstalk:describeEnvironments",
                                    "elasticbeanstalk:describeEvents",
                                    "elasticbeanstalk:describeInstancesHealth",
                                    "elasticbeanstalk:describePlatformVersion",
                                    "elasticbeanstalk:listAvailableSolutionStacks",
                                    "elasticbeanstalk:listPlatformVersions",
                                    "elasticbeanstalk:validateConfigurationSettings",
                                    "elasticfilesystem:describeAccessPoints",
                                    "elasticfilesystem:describeFileSystemPolicy",
                                    "elasticfilesystem:describeFileSystems",
                                    "elasticfilesystem:describeLifecycleConfiguration",
                                    "elasticfilesystem:describeMountTargets",
                                    "elasticfilesystem:describeMountTargetSecurityGroups",
                                    "elasticfilesystem:describeTags",
                                    "elasticfilesystem:listTagsForResource",
                                    "elasticloadbalancing:describeInstanceHealth",
                                    "elasticloadbalancing:describeListenerCertificates",
                                    "elasticloadbalancing:describeListeners",
                                    "elasticloadbalancing:describeLoadBalancerAttributes",
                                    "elasticloadbalancing:describeLoadBalancerPolicies",
                                    "elasticloadbalancing:describeLoadBalancerPolicyTypes",
                                    "elasticloadbalancing:describeLoadBalancers",
                                    "elasticloadbalancing:describeRules",
                                    "elasticloadbalancing:describeSSLPolicies",
                                    "elasticloadbalancing:describeTags",
                                    "elasticloadbalancing:describeTargetGroupAttributes",
                                    "elasticloadbalancing:describeTargetGroups",
                                    "elasticloadbalancing:describeTargetHealth",
                                    "elasticmapreduce:describeCluster",
                                    "elasticmapreduce:describeSecurityConfiguration",
                                    "elasticmapreduce:describeStep",
                                    "elasticmapreduce:listBootstrapActions",
                                    "elasticmapreduce:listClusters",
                                    "elasticmapreduce:listInstanceGroups",
                                    "elasticmapreduce:listInstances",
                                    "elasticmapreduce:listSecurityConfigurations",
                                    "elasticmapreduce:listSteps",
                                    "elastictranscoder:listJobsByPipeline",
                                    "elastictranscoder:listJobsByStatus",
                                    "elastictranscoder:listPipelines",
                                    "elastictranscoder:listPresets",
                                    "elastictranscoder:readPipeline",
                                    "elastictranscoder:readPreset",
                                    "es:describeElasticsearchDomain",
                                    "es:describeElasticsearchDomainConfig",
                                    "es:describeElasticsearchDomains",
                                    "es:listDomainNames",
                                    "es:listTags",
                                    "events:describeApiDestination",
                                    "events:describeEventBus",
                                    "events:describeEventSource",
                                    "events:describePartnerEventSource",
                                    "events:describeRule",
                                    "events:listApiDestinations",
                                    "events:listConnections",
                                    "events:listEventBuses",
                                    "events:listEventSources",
                                    "events:listPartnerEventSourceAccounts",
                                    "events:listPartnerEventSources",
                                    "events:listRuleNamesByTarget",
                                    "events:listRules",
                                    "events:listTargetsByRule",
                                    "events:testEventPattern",
                                    "firehose:describeDeliveryStream",
                                    "firehose:listDeliveryStreams",
                                    "fms:getAdminAccount",
                                    "fms:getComplianceDetail",
                                    "fms:getNotificationChannel",
                                    "fms:getPolicy",
                                    "fms:getProtectionStatus",
                                    "fms:listComplianceStatus",
                                    "fms:listMemberAccounts",
                                    "fms:listPolicies",
                                    "forecast:describeDataset",
                                    "forecast:describeDatasetGroup",
                                    "forecast:describeDatasetImportJob",
                                    "forecast:describeForecast",
                                    "forecast:describeForecastExportJob",
                                    "forecast:describePredictor",
                                    "forecast:getAccuracyMetrics",
                                    "forecast:listDatasetGroups",
                                    "forecast:listDatasetImportJobs",
                                    "forecast:listDatasets",
                                    "forecast:listForecastExportJobs",
                                    "forecast:listForecasts",
                                    "forecast:listPredictors",
                                    "fsx:describeBackups",
                                    "fsx:describeDataRepositoryTasks",
                                    "fsx:describeFileSystems",
                                    "fsx:describeStorageVirtualMachines",
                                    "fsx:describeVolumes",
                                    "fsx:listTagsForResource",
                                    "glacier:describeJob",
                                    "glacier:describeVault",
                                    "glacier:getDataRetrievalPolicy",
                                    "glacier:getVaultAccessPolicy",
                                    "glacier:getVaultLock",
                                    "glacier:getVaultNotifications",
                                    "glacier:listJobs",
                                    "glacier:listTagsForVault",
                                    "glacier:listVaults",
                                    "globalaccelerator:describeAccelerator",
                                    "globalaccelerator:describeAcceleratorAttributes",
                                    "globalaccelerator:describeEndpointGroup",
                                    "globalaccelerator:describeListener",
                                    "globalaccelerator:listAccelerators",
                                    "globalaccelerator:listEndpointGroups",
                                    "globalaccelerator:listListeners",
                                    "glue:batchGetPartition",
                                    "glue:checkSchemaVersionValidity",
                                    "glue:getCatalogImportStatus",
                                    "glue:getClassifier",
                                    "glue:getClassifiers",
                                    "glue:getCrawler",
                                    "glue:getCrawlerMetrics",
                                    "glue:getCrawlers",
                                    "glue:getDatabase",
                                    "glue:getDatabases",
                                    "glue:getDataflowGraph",
                                    "glue:getDevEndpoint",
                                    "glue:getDevEndpoints",
                                    "glue:getJob",
                                    "glue:getJobRun",
                                    "glue:getJobRuns",
                                    "glue:getJobs",
                                    "glue:getMapping",
                                    "glue:getPartition",
                                    "glue:getPartitions",
                                    "glue:getRegistry",
                                    "glue:getSchema",
                                    "glue:getSchemaByDefinition",
                                    "glue:getSchemaVersion",
                                    "glue:getSchemaVersionsDiff",
                                    "glue:getTable",
                                    "glue:getTables",
                                    "glue:getTableVersions",
                                    "glue:getTrigger",
                                    "glue:getTriggers",
                                    "glue:getUserDefinedFunction",
                                    "glue:getUserDefinedFunctions",
                                    "glue:listRegistries",
                                    "glue:listSchemas",
                                    "glue:listSchemaVersions",
                                    "glue:querySchemaVersionMetadata",
                                    "greengrass:getConnectivityInfo",
                                    "greengrass:getCoreDefinition",
                                    "greengrass:getCoreDefinitionVersion",
                                    "greengrass:getDeploymentStatus",
                                    "greengrass:getDeviceDefinition",
                                    "greengrass:getDeviceDefinitionVersion",
                                    "greengrass:getFunctionDefinition",
                                    "greengrass:getFunctionDefinitionVersion",
                                    "greengrass:getGroup",
                                    "greengrass:getGroupCertificateAuthority",
                                    "greengrass:getGroupVersion",
                                    "greengrass:getLoggerDefinition",
                                    "greengrass:getLoggerDefinitionVersion",
                                    "greengrass:getResourceDefinitionVersion",
                                    "greengrass:getServiceRoleForAccount",
                                    "greengrass:getSubscriptionDefinition",
                                    "greengrass:getSubscriptionDefinitionVersion",
                                    "greengrass:listCoreDefinitions",
                                    "greengrass:listCoreDefinitionVersions",
                                    "greengrass:listDeployments",
                                    "greengrass:listDeviceDefinitions",
                                    "greengrass:listDeviceDefinitionVersions",
                                    "greengrass:listFunctionDefinitions",
                                    "greengrass:listFunctionDefinitionVersions",
                                    "greengrass:listGroups",
                                    "greengrass:listGroupVersions",
                                    "greengrass:listLoggerDefinitions",
                                    "greengrass:listLoggerDefinitionVersions",
                                    "greengrass:listResourceDefinitions",
                                    "greengrass:listResourceDefinitionVersions",
                                    "greengrass:listSubscriptionDefinitions",
                                    "greengrass:listSubscriptionDefinitionVersions",
                                    "guardduty:getDetector",
                                    "guardduty:getFindings",
                                    "guardduty:getFindingsStatistics",
                                    "guardduty:getInvitationsCount",
                                    "guardduty:getIPSet",
                                    "guardduty:getMasterAccount",
                                    "guardduty:getMembers",
                                    "guardduty:getThreatIntelSet",
                                    "guardduty:listDetectors",
                                    "guardduty:listFindings",
                                    "guardduty:listInvitations",
                                    "guardduty:listIPSets",
                                    "guardduty:listMembers",
                                    "guardduty:listThreatIntelSets",
                                    "health:describeAffectedAccountsForOrganization",
                                    "health:describeAffectedEntities",
                                    "health:describeAffectedEntitiesForOrganization",
                                    "health:describeEntityAggregates",
                                    "health:describeEventAggregates",
                                    "health:describeEventDetails",
                                    "health:describeEventDetailsForOrganization",
                                    "health:describeEvents",
                                    "health:describeEventsForOrganization",
                                    "health:describeEventTypes",
                                    "health:describeHealthServiceStatusForOrganization",
                                    "iam:getAccessKeyLastUsed",
                                    "iam:getAccountAuthorizationDetails",
                                    "iam:getAccountPasswordPolicy",
                                    "iam:getAccountSummary",
                                    "iam:getContextKeysForCustomPolicy",
                                    "iam:getContextKeysForPrincipalPolicy",
                                    "iam:getCredentialReport",
                                    "iam:getGroup",
                                    "iam:getGroupPolicy",
                                    "iam:getInstanceProfile",
                                    "iam:getLoginProfile",
                                    "iam:getOpenIDConnectProvider",
                                    "iam:getPolicy",
                                    "iam:getPolicyVersion",
                                    "iam:getRole",
                                    "iam:getRolePolicy",
                                    "iam:getSAMLProvider",
                                    "iam:getServerCertificate",
                                    "iam:getSSHPublicKey",
                                    "iam:getUser",
                                    "iam:getUserPolicy",
                                    "iam:listAccessKeys",
                                    "iam:listAccountAliases",
                                    "iam:listAttachedGroupPolicies",
                                    "iam:listAttachedRolePolicies",
                                    "iam:listAttachedUserPolicies",
                                    "iam:listEntitiesForPolicy",
                                    "iam:listGroupPolicies",
                                    "iam:listGroups",
                                    "iam:listGroupsForUser",
                                    "iam:listInstanceProfiles",
                                    "iam:listInstanceProfilesForRole",
                                    "iam:listMFADevices",
                                    "iam:listOpenIDConnectProviders",
                                    "iam:listPolicies",
                                    "iam:listPolicyVersions",
                                    "iam:listRolePolicies",
                                    "iam:listRoles",
                                    "iam:listSAMLProviders",
                                    "iam:listServerCertificates",
                                    "iam:listSigningCertificates",
                                    "iam:listSSHPublicKeys",
                                    "iam:listUserPolicies",
                                    "iam:listUsers",
                                    "iam:listVirtualMFADevices",
                                    "iam:simulateCustomPolicy",
                                    "iam:simulatePrincipalPolicy",
                                    "imagebuilder:getComponent",
                                    "imagebuilder:getComponentPolicy",
                                    "imagebuilder:getContainerRecipe",
                                    "imagebuilder:getDistributionConfiguration",
                                    "imagebuilder:getImage",
                                    "imagebuilder:getImagePipeline",
                                    "imagebuilder:getImagePolicy",
                                    "imagebuilder:getImageRecipe",
                                    "imagebuilder:getImageRecipePolicy",
                                    "imagebuilder:getInfrastructureConfiguration",
                                    "imagebuilder:listComponentBuildVersions",
                                    "imagebuilder:listComponents",
                                    "imagebuilder:listContainerRecipes",
                                    "imagebuilder:listDistributionConfigurations",
                                    "imagebuilder:listImageBuildVersions",
                                    "imagebuilder:listImagePipelineImages",
                                    "imagebuilder:listImagePipelines",
                                    "imagebuilder:listImageRecipes",
                                    "imagebuilder:listImages",
                                    "imagebuilder:listInfrastructureConfigurations",
                                    "imagebuilder:listTagsForResource",
                                    "importexport:getStatus",
                                    "importexport:listJobs",
                                    "inspector:describeAssessmentRuns",
                                    "inspector:describeAssessmentTargets",
                                    "inspector:describeAssessmentTemplates",
                                    "inspector:describeCrossAccountAccessRole",
                                    "inspector:describeResourceGroups",
                                    "inspector:describeRulesPackages",
                                    "inspector:getTelemetryMetadata",
                                    "inspector:listAssessmentRunAgents",
                                    "inspector:listAssessmentRuns",
                                    "inspector:listAssessmentTargets",
                                    "inspector:listAssessmentTemplates",
                                    "inspector:listEventSubscriptions",
                                    "inspector:listRulesPackages",
                                    "inspector:listTagsForResource",
                                    "iot:describeAuthorizer",
                                    "iot:describeCACertificate",
                                    "iot:describeCertificate",
                                    "iot:describeDefaultAuthorizer",
                                    "iot:describeEndpoint",
                                    "iot:describeIndex",
                                    "iot:describeJobExecution",
                                    "iot:describeThing",
                                    "iot:describeThingGroup",
                                    "iot:describeTunnel",
                                    "iot:getEffectivePolicies",
                                    "iot:getIndexingConfiguration",
                                    "iot:getLoggingOptions",
                                    "iot:getPolicy",
                                    "iot:getPolicyVersion",
                                    "iot:getTopicRule",
                                    "iot:getV2LoggingOptions",
                                    "iot:listAttachedPolicies",
                                    "iot:listAuthorizers",
                                    "iot:listCACertificates",
                                    "iot:listCertificates",
                                    "iot:listCertificatesByCA",
                                    "iot:listJobExecutionsForJob",
                                    "iot:listJobExecutionsForThing",
                                    "iot:listJobs",
                                    "iot:listOutgoingCertificates",
                                    "iot:listPolicies",
                                    "iot:listPolicyPrincipals",
                                    "iot:listPolicyVersions",
                                    "iot:listPrincipalPolicies",
                                    "iot:listPrincipalThings",
                                    "iot:listRoleAliases",
                                    "iot:listTargetsForPolicy",
                                    "iot:listThingGroups",
                                    "iot:listThingGroupsForThing",
                                    "iot:listThingPrincipals",
                                    "iot:listThingRegistrationTasks",
                                    "iot:listThings",
                                    "iot:listThingTypes",
                                    "iot:listTopicRules",
                                    "iot:listTunnels",
                                    "iot:listV2LoggingLevels",
                                    "iotevents:describeDetector",
                                    "iotevents:describeDetectorModel",
                                    "iotevents:describeInput",
                                    "iotevents:describeLoggingOptions",
                                    "iotevents:listDetectorModels",
                                    "iotevents:listDetectorModelVersions",
                                    "iotevents:listDetectors",
                                    "iotevents:listInputs",
                                    "iotsitewise:describeAccessPolicy",
                                    "iotsitewise:describeAsset",
                                    "iotsitewise:describeAssetModel",
                                    "iotsitewise:describeAssetProperty",
                                    "iotsitewise:describeDashboard",
                                    "iotsitewise:describeGateway",
                                    "iotsitewise:describeGatewayCapabilityConfiguration",
                                    "iotsitewise:describeLoggingOptions",
                                    "iotsitewise:describePortal",
                                    "iotsitewise:describeProject",
                                    "iotsitewise:listAccessPolicies",
                                    "iotsitewise:listAssetModels",
                                    "iotsitewise:listAssets",
                                    "iotsitewise:listAssociatedAssets",
                                    "iotsitewise:listDashboards",
                                    "iotsitewise:listGateways",
                                    "iotsitewise:listPortals",
                                    "iotsitewise:listProjectAssets",
                                    "iotsitewise:listProjects",
                                    "iotwireless:getDestination",
                                    "iotwireless:getDeviceProfile",
                                    "iotwireless:getPartnerAccount",
                                    "iotwireless:getServiceEndpoint",
                                    "iotwireless:getServiceProfile",
                                    "iotwireless:getWirelessDevice",
                                    "iotwireless:getWirelessDeviceStatistics",
                                    "iotwireless:getWirelessGateway",
                                    "iotwireless:getWirelessGatewayCertificate",
                                    "iotwireless:getWirelessGatewayFirmwareInformation",
                                    "iotwireless:getWirelessGatewayStatistics",
                                    "iotwireless:getWirelessGatewayTask",
                                    "iotwireless:getWirelessGatewayTaskDefinition",
                                    "iotwireless:listDestinations",
                                    "iotwireless:listDeviceProfiles",
                                    "iotwireless:listPartnerAccounts",
                                    "iotwireless:listServiceProfiles",
                                    "iotwireless:listTagsForResource",
                                    "iotwireless:listWirelessDevices",
                                    "iotwireless:listWirelessGateways",
                                    "iotwireless:listWirelessGatewayTaskDefinitions",
                                    "kafka:describeCluster",
                                    "kafka:getBootstrapBrokers",
                                    "kafka:listClusters",
                                    "kafka:listNodes",
                                    "kendra:describeDataSource",
                                    "kendra:describeFaq",
                                    "kendra:describeIndex",
                                    "kendra:listDataSources",
                                    "kendra:listFaqs",
                                    "kendra:listIndices",
                                    "kinesis:describeStream",
                                    "kinesis:listStreams",
                                    "kinesis:listTagsForStream",
                                    "kinesisanalytics:describeApplication",
                                    "kinesisanalytics:describeApplicationSnapshot",
                                    "kinesisanalytics:listApplications",
                                    "kinesisanalytics:listApplicationSnapshots",
                                    "kms:describeKey",
                                    "kms:getKeyPolicy",
                                    "kms:getKeyRotationStatus",
                                    "kms:listAliases",
                                    "kms:listGrants",
                                    "kms:listKeyPolicies",
                                    "kms:listKeys",
                                    "kms:listResourceTags",
                                    "kms:listRetirableGrants",
                                    "lambda:getAccountSettings",
                                    "lambda:getAlias",
                                    "lambda:getCodeSigningConfig",
                                    "lambda:getEventSourceMapping",
                                    "lambda:getFunction",
                                    "lambda:getFunctionCodeSigningConfig",
                                    "lambda:getFunctionConcurrency",
                                    "lambda:getFunctionConfiguration",
                                    "lambda:getFunctionEventInvokeConfig",
                                    "lambda:getLayerVersion",
                                    "lambda:getLayerVersionPolicy",
                                    "lambda:getPolicy",
                                    "lambda:getProvisionedConcurrencyConfig",
                                    "lambda:listAliases",
                                    "lambda:listCodeSigningConfigs",
                                    "lambda:listEventSourceMappings",
                                    "lambda:listFunctionEventInvokeConfigs",
                                    "lambda:listFunctions",
                                    "lambda:listFunctionsByCodeSigningConfig",
                                    "lambda:listLayers",
                                    "lambda:listLayerVersions",
                                    "lambda:listProvisionedConcurrencyConfigs",
                                    "lambda:listVersionsByFunction",
                                    "launchwizard:describeProvisionedApp",
                                    "launchwizard:describeProvisioningEvents",
                                    "launchwizard:listProvisionedApps",
                                    "lex:getBot",
                                    "lex:getBotAlias",
                                    "lex:getBotAliases",
                                    "lex:getBotChannelAssociation",
                                    "lex:getBotChannelAssociations",
                                    "lex:getBots",
                                    "lex:getBotVersions",
                                    "lex:getBuiltinIntent",
                                    "lex:getBuiltinIntents",
                                    "lex:getBuiltinSlotTypes",
                                    "lex:getIntent",
                                    "lex:getIntents",
                                    "lex:getIntentVersions",
                                    "lex:getSlotType",
                                    "lex:getSlotTypes",
                                    "lex:getSlotTypeVersions",
                                    "license-manager:getLicenseConfiguration",
                                    "license-manager:getServiceSettings",
                                    "license-manager:listAssociationsForLicenseConfiguration",
                                    "license-manager:listFailuresForLicenseConfigurationOperations",
                                    "license-manager:listLicenseConfigurations",
                                    "license-manager:listLicenseSpecificationsForResource",
                                    "license-manager:listResourceInventory",
                                    "license-manager:listUsageForLicenseConfiguration",
                                    "lightsail:getActiveNames",
                                    "lightsail:getAlarms",
                                    "lightsail:getAutoSnapshots",
                                    "lightsail:getBlueprints",
                                    "lightsail:getBundles",
                                    "lightsail:getCertificates",
                                    "lightsail:getContainerImages",
                                    "lightsail:getContainerServiceDeployments",
                                    "lightsail:getContainerServiceMetricData",
                                    "lightsail:getContainerServicePowers",
                                    "lightsail:getContainerServices",
                                    "lightsail:getDisk",
                                    "lightsail:getDisks",
                                    "lightsail:getDiskSnapshot",
                                    "lightsail:getDiskSnapshots",
                                    "lightsail:getDistributionBundles",
                                    "lightsail:getDistributionMetricData",
                                    "lightsail:getDistributions",
                                    "lightsail:getDomain",
                                    "lightsail:getDomains",
                                    "lightsail:getExportSnapshotRecords",
                                    "lightsail:getInstance",
                                    "lightsail:getInstanceMetricData",
                                    "lightsail:getInstancePortStates",
                                    "lightsail:getInstances",
                                    "lightsail:getInstanceSnapshot",
                                    "lightsail:getInstanceSnapshots",
                                    "lightsail:getInstanceState",
                                    "lightsail:getKeyPair",
                                    "lightsail:getKeyPairs",
                                    "lightsail:getLoadBalancer",
                                    "lightsail:getLoadBalancerMetricData",
                                    "lightsail:getLoadBalancers",
                                    "lightsail:getLoadBalancerTlsCertificates",
                                    "lightsail:getOperation",
                                    "lightsail:getOperations",
                                    "lightsail:getOperationsForResource",
                                    "lightsail:getRegions",
                                    "lightsail:getRelationalDatabase",
                                    "lightsail:getRelationalDatabaseMetricData",
                                    "lightsail:getRelationalDatabases",
                                    "lightsail:getRelationalDatabaseSnapshot",
                                    "lightsail:getRelationalDatabaseSnapshots",
                                    "lightsail:getStaticIp",
                                    "lightsail:getStaticIps",
                                    "lightsail:isVpcPeered",
                                    "logs:describeDestinations",
                                    "logs:describeExportTasks",
                                    "logs:describeLogGroups",
                                    "logs:describeLogStreams",
                                    "logs:describeMetricFilters",
                                    "logs:describeQueries",
                                    "logs:describeSubscriptionFilters",
                                    "logs:testMetricFilter",
                                    "lookoutmetrics:describeAlert",
                                    "lookoutmetrics:describeAnomalyDetectionExecutions",
                                    "lookoutmetrics:describeAnomalyDetector",
                                    "lookoutmetrics:describeMetricSet",
                                    "lookoutmetrics:getAnomalyGroup",
                                    "lookoutmetrics:getDataQualityMetrics",
                                    "lookoutmetrics:getFeedback",
                                    "lookoutmetrics:getSampleData",
                                    "lookoutmetrics:listAlerts",
                                    "lookoutmetrics:listAnomalyDetectors",
                                    "lookoutmetrics:listAnomalyGroupSummaries",
                                    "lookoutmetrics:listAnomalyGroupTimeSeries",
                                    "lookoutmetrics:listMetricSets",
                                    "lookoutmetrics:listTagsForResource",
                                    "machinelearning:describeBatchPredictions",
                                    "machinelearning:describeDataSources",
                                    "machinelearning:describeEvaluations",
                                    "machinelearning:describeMLModels",
                                    "machinelearning:getBatchPrediction",
                                    "machinelearning:getDataSource",
                                    "machinelearning:getEvaluation",
                                    "machinelearning:getMLModel",
                                    "managedblockchain:getMember",
                                    "managedblockchain:getNetwork",
                                    "managedblockchain:getNode",
                                    "managedblockchain:listMembers",
                                    "managedblockchain:listNetworks",
                                    "managedblockchain:listNodes",
                                    "mediaconnect:describeFlow",
                                    "mediaconnect:listEntitlements",
                                    "mediaconnect:listFlows",
                                    "mediaconvert:describeEndpoints",
                                    "mediaconvert:getJob",
                                    "mediaconvert:getJobTemplate",
                                    "mediaconvert:getPreset",
                                    "mediaconvert:getQueue",
                                    "mediaconvert:listJobs",
                                    "mediaconvert:listJobTemplates",
                                    "medialive:describeChannel",
                                    "medialive:describeInput",
                                    "medialive:describeInputDevice",
                                    "medialive:describeInputSecurityGroup",
                                    "medialive:describeMultiplex",
                                    "medialive:describeOffering",
                                    "medialive:describeReservation",
                                    "medialive:describeSchedule",
                                    "medialive:listChannels",
                                    "medialive:listInputDevices",
                                    "medialive:listInputs",
                                    "medialive:listInputSecurityGroups",
                                    "medialive:listMultiplexes",
                                    "medialive:listOfferings",
                                    "medialive:listReservations",
                                    "mediapackage:describeChannel",
                                    "mediapackage:describeOriginEndpoint",
                                    "mediapackage:listChannels",
                                    "mediapackage:listOriginEndpoints",
                                    "mediastore:describeContainer",
                                    "mediastore:describeObject",
                                    "mediastore:getContainerPolicy",
                                    "mediastore:getCorsPolicy",
                                    "mediastore:listContainers",
                                    "mediastore:listItems",
                                    "mediatailor:getPlaybackConfiguration",
                                    "mediatailor:listPlaybackConfigurations",
                                    "mgn:describeJobLogItems",
                                    "mgn:describeJobs",
                                    "mgn:describeReplicationConfigurationTemplates",
                                    "mgn:describeSourceServers",
                                    "mgn:getLaunchConfiguration",
                                    "mgn:getReplicationConfiguration",
                                    "mobiletargeting:getAdmChannel",
                                    "mobiletargeting:getApnsChannel",
                                    "mobiletargeting:getApnsSandboxChannel",
                                    "mobiletargeting:getApnsVoipChannel",
                                    "mobiletargeting:getApnsVoipSandboxChannel",
                                    "mobiletargeting:getApp",
                                    "mobiletargeting:getApplicationSettings",
                                    "mobiletargeting:getApps",
                                    "mobiletargeting:getBaiduChannel",
                                    "mobiletargeting:getCampaign",
                                    "mobiletargeting:getCampaignActivities",
                                    "mobiletargeting:getCampaigns",
                                    "mobiletargeting:getCampaignVersion",
                                    "mobiletargeting:getCampaignVersions",
                                    "mobiletargeting:getEmailChannel",
                                    "mobiletargeting:getEndpoint",
                                    "mobiletargeting:getEventStream",
                                    "mobiletargeting:getExportJob",
                                    "mobiletargeting:getExportJobs",
                                    "mobiletargeting:getGcmChannel",
                                    "mobiletargeting:getImportJob",
                                    "mobiletargeting:getImportJobs",
                                    "mobiletargeting:getSegment",
                                    "mobiletargeting:getSegmentImportJobs",
                                    "mobiletargeting:getSegments",
                                    "mobiletargeting:getSegmentVersion",
                                    "mobiletargeting:getSegmentVersions",
                                    "mobiletargeting:getSmsChannel",
                                    "mq:describeBroker",
                                    "mq:describeConfiguration",
                                    "mq:describeConfigurationRevision",
                                    "mq:describeUser",
                                    "mq:listBrokers",
                                    "mq:listConfigurationRevisions",
                                    "mq:listConfigurations",
                                    "mq:listUsers",
                                    "network-firewall:describeFirewall",
                                    "network-firewall:describeFirewallPolicy",
                                    "network-firewall:describeLoggingConfiguration",
                                    "network-firewall:describeRuleGroup",
                                    "network-firewall:listFirewallPolicies",
                                    "network-firewall:listFirewalls",
                                    "network-firewall:listRuleGroups",
                                    "networkmanager:describeGlobalNetworks",
                                    "networkmanager:getCustomerGatewayAssociations",
                                    "networkmanager:getDevices",
                                    "networkmanager:getLinkAssociations",
                                    "networkmanager:getLinks",
                                    "networkmanager:getSites",
                                    "networkmanager:getTransitGatewayRegistrations",
                                    "opsworks-cm:describeAccountAttributes",
                                    "opsworks-cm:describeBackups",
                                    "opsworks-cm:describeEvents",
                                    "opsworks-cm:describeNodeAssociationStatus",
                                    "opsworks-cm:describeServers",
                                    "opsworks:describeAgentVersions",
                                    "opsworks:describeApps",
                                    "opsworks:describeCommands",
                                    "opsworks:describeDeployments",
                                    "opsworks:describeEcsClusters",
                                    "opsworks:describeElasticIps",
                                    "opsworks:describeElasticLoadBalancers",
                                    "opsworks:describeInstances",
                                    "opsworks:describeLayers",
                                    "opsworks:describeLoadBasedAutoScaling",
                                    "opsworks:describeMyUserProfile",
                                    "opsworks:describePermissions",
                                    "opsworks:describeRaidArrays",
                                    "opsworks:describeRdsDbInstances",
                                    "opsworks:describeServiceErrors",
                                    "opsworks:describeStackProvisioningParameters",
                                    "opsworks:describeStacks",
                                    "opsworks:describeStackSummary",
                                    "opsworks:describeTimeBasedAutoScaling",
                                    "opsworks:describeUserProfiles",
                                    "opsworks:describeVolumes",
                                    "opsworks:getHostnameSuggestion",
                                    "organizations:listAccounts",
                                    "organizations:listTagsForResource",
                                    "outposts:getOutpost",
                                    "outposts:getOutpostInstanceTypes",
                                    "outposts:listOutposts",
                                    "outposts:listSites",
                                    "personalize:describeAlgorithm",
                                    "personalize:describeCampaign",
                                    "personalize:describeDataset",
                                    "personalize:describeDatasetGroup",
                                    "personalize:describeDatasetImportJob",
                                    "personalize:describeEventTracker",
                                    "personalize:describeFeatureTransformation",
                                    "personalize:describeRecipe",
                                    "personalize:describeSchema",
                                    "personalize:describeSolution",
                                    "personalize:describeSolutionVersion",
                                    "personalize:listCampaigns",
                                    "personalize:listDatasetGroups",
                                    "personalize:listDatasetImportJobs",
                                    "personalize:listDatasets",
                                    "personalize:listEventTrackers",
                                    "personalize:listRecipes",
                                    "personalize:listSchemas",
                                    "personalize:listSolutions",
                                    "personalize:listSolutionVersions",
                                    "polly:describeVoices",
                                    "polly:getLexicon",
                                    "polly:listLexicons",
                                    "pricing:describeServices",
                                    "pricing:getAttributeValues",
                                    "pricing:getProducts",
                                    "quicksight:describeDashboard",
                                    "quicksight:describeDashboardPermissions",
                                    "quicksight:describeGroup",
                                    "quicksight:describeIAMPolicyAssignment",
                                    "quicksight:describeTemplate",
                                    "quicksight:describeTemplateAlias",
                                    "quicksight:describeTemplatePermissions",
                                    "quicksight:describeUser",
                                    "quicksight:listDashboards",
                                    "quicksight:listGroupMemberships",
                                    "quicksight:listGroups",
                                    "quicksight:listIAMPolicyAssignments",
                                    "quicksight:listIAMPolicyAssignmentsForUser",
                                    "quicksight:listTemplateAliases",
                                    "quicksight:listTemplates",
                                    "quicksight:listTemplateVersions",
                                    "quicksight:listUserGroups",
                                    "quicksight:listUsers",
                                    "ram:getPermission",
                                    "ram:getResourceShareAssociations",
                                    "ram:getResourceShareInvitations",
                                    "ram:getResourceShares",
                                    "ram:listPendingInvitationResources",
                                    "ram:listPrincipals",
                                    "ram:listResources",
                                    "ram:listResourceSharePermissions",
                                    "rds:describeAccountAttributes",
                                    "rds:describeCertificates",
                                    "rds:describeDBClusterParameterGroups",
                                    "rds:describeDBClusterParameters",
                                    "rds:describeDBClusters",
                                    "rds:describeDBClusterSnapshots",
                                    "rds:describeDBEngineVersions",
                                    "rds:describeDBInstances",
                                    "rds:describeDBParameterGroups",
                                    "rds:describeDBParameters",
                                    "rds:describeDBSecurityGroups",
                                    "rds:describeDBSnapshotAttributes",
                                    "rds:describeDBSnapshots",
                                    "rds:describeDBSubnetGroups",
                                    "rds:describeEngineDefaultClusterParameters",
                                    "rds:describeEngineDefaultParameters",
                                    "rds:describeEventCategories",
                                    "rds:describeEvents",
                                    "rds:describeEventSubscriptions",
                                    "rds:describeExportTasks",
                                    "rds:describeOptionGroupOptions",
                                    "rds:describeOptionGroups",
                                    "rds:describeOrderableDBInstanceOptions",
                                    "rds:describePendingMaintenanceActions",
                                    "rds:describeReservedDBInstances",
                                    "rds:describeReservedDBInstancesOfferings",
                                    "rds:listTagsForResource",
                                    "redshift-data:describeStatement",
                                    "redshift-data:listStatements",
                                    "redshift:describeClusterParameterGroups",
                                    "redshift:describeClusterParameters",
                                    "redshift:describeClusters",
                                    "redshift:describeClusterSecurityGroups",
                                    "redshift:describeClusterSnapshots",
                                    "redshift:describeClusterSubnetGroups",
                                    "redshift:describeClusterVersions",
                                    "redshift:describeDefaultClusterParameters",
                                    "redshift:describeEventCategories",
                                    "redshift:describeEvents",
                                    "redshift:describeEventSubscriptions",
                                    "redshift:describeHsmClientCertificates",
                                    "redshift:describeHsmConfigurations",
                                    "redshift:describeLoggingStatus",
                                    "redshift:describeOrderableClusterOptions",
                                    "redshift:describeReservedNodeOfferings",
                                    "redshift:describeReservedNodes",
                                    "redshift:describeResize",
                                    "redshift:describeSnapshotCopyGrants",
                                    "redshift:describeStorage",
                                    "redshift:describeTableRestoreStatus",
                                    "redshift:describeTags",
                                    "rekognition:listCollections",
                                    "rekognition:listFaces",
                                    "resource-groups:getGroup",
                                    "resource-groups:getGroupQuery",
                                    "resource-groups:getTags",
                                    "resource-groups:listGroupResources",
                                    "resource-groups:listGroups",
                                    "resource-groups:searchResources",
                                    "robomaker:batchDescribeSimulationJob",
                                    "robomaker:describeDeploymentJob",
                                    "robomaker:describeFleet",
                                    "robomaker:describeRobot",
                                    "robomaker:describeRobotApplication",
                                    "robomaker:describeSimulationApplication",
                                    "robomaker:describeSimulationJob",
                                    "robomaker:listDeploymentJobs",
                                    "robomaker:listFleets",
                                    "robomaker:listRobotApplications",
                                    "robomaker:listRobots",
                                    "robomaker:listSimulationApplications",
                                    "robomaker:listSimulationJobs",
                                    "route53-recovery-readiness:getCell",
                                    "route53-recovery-readiness:getCellReadinessSummary",
                                    "route53-recovery-readiness:getReadinessCheck",
                                    "route53-recovery-readiness:getReadinessCheckResourceStatus",
                                    "route53-recovery-readiness:getReadinessCheckStatus",
                                    "route53-recovery-readiness:getRecoveryGroup",
                                    "route53-recovery-readiness:getRecoveryGroupReadinessSummary",
                                    "route53-recovery-readiness:listCells",
                                    "route53-recovery-readiness:listReadinessChecks",
                                    "route53-recovery-readiness:listRecoveryGroups",
                                    "route53-recovery-readiness:listResourceSets",
                                    "route53:getChange",
                                    "route53:getCheckerIpRanges",
                                    "route53:getGeoLocation",
                                    "route53:getHealthCheck",
                                    "route53:getHealthCheckCount",
                                    "route53:getHealthCheckLastFailureReason",
                                    "route53:getHealthCheckStatus",
                                    "route53:getHostedZone",
                                    "route53:getHostedZoneCount",
                                    "route53:getReusableDelegationSet",
                                    "route53:getTrafficPolicy",
                                    "route53:getTrafficPolicyInstance",
                                    "route53:getTrafficPolicyInstanceCount",
                                    "route53:listGeoLocations",
                                    "route53:listHealthChecks",
                                    "route53:listHostedZones",
                                    "route53:listHostedZonesByName",
                                    "route53:listResourceRecordSets",
                                    "route53:listReusableDelegationSets",
                                    "route53:listTagsForResource",
                                    "route53:listTagsForResources",
                                    "route53:listTrafficPolicies",
                                    "route53:listTrafficPolicyInstances",
                                    "route53:listTrafficPolicyInstancesByHostedZone",
                                    "route53:listTrafficPolicyInstancesByPolicy",
                                    "route53:listTrafficPolicyVersions",
                                    "route53domains:checkDomainAvailability",
                                    "route53domains:getContactReachabilityStatus",
                                    "route53domains:getDomainDetail",
                                    "route53domains:getOperationDetail",
                                    "route53domains:listDomains",
                                    "route53domains:listOperations",
                                    "route53domains:listTagsForDomain",
                                    "route53domains:viewBilling",
                                    "route53resolver:getFirewallConfig",
                                    "route53resolver:getFirewallDomainList",
                                    "route53resolver:getFirewallRuleGroup",
                                    "route53resolver:getFirewallRuleGroupAssociation",
                                    "route53resolver:getResolverDnssecConfig",
                                    "route53resolver:getResolverRulePolicy",
                                    "route53resolver:listFirewallConfigs",
                                    "route53resolver:listFirewallDomainLists",
                                    "route53resolver:listFirewallDomains",
                                    "route53resolver:listFirewallRuleGroupAssociations",
                                    "route53resolver:listFirewallRuleGroups",
                                    "route53resolver:listFirewallRules",
                                    "route53resolver:listResolverDnssecConfigs",
                                    "route53resolver:listResolverEndpointIpAddresses",
                                    "route53resolver:listResolverEndpoints",
                                    "route53resolver:listResolverRuleAssociations",
                                    "route53resolver:listResolverRules",
                                    "route53resolver:listTagsForResource",
                                    "s3:getAccelerateConfiguration",
                                    "s3:getAccessPointConfigurationForObjectLambda",
                                    "s3:getAccessPointForObjectLambda",
                                    "s3:getAccessPointPolicyStatusForObjectLambda",
                                    "s3:getAnalyticsConfiguration",
                                    "s3:getBucketAcl",
                                    "s3:getBucketCORS",
                                    "s3:getBucketLocation",
                                    "s3:getBucketLogging",
                                    "s3:getBucketNotification",
                                    "s3:getBucketPolicy",
                                    "s3:getBucketRequestPayment",
                                    "s3:getBucketTagging",
                                    "s3:getBucketVersioning",
                                    "s3:getBucketWebsite",
                                    "s3:getEncryptionConfiguration",
                                    "s3:getInventoryConfiguration",
                                    "s3:getLifecycleConfiguration",
                                    "s3:getMetricsConfiguration",
                                    "s3:getReplicationConfiguration",
                                    "s3:listAccessPointsForObjectLambda",
                                    "s3:listAllMyBuckets",
                                    "s3:listBucket",
                                    "s3:listBucketMultipartUploads",
                                    "sagemaker:describeAction",
                                    "sagemaker:describeAlgorithm",
                                    "sagemaker:describeApp",
                                    "sagemaker:describeArtifact",
                                    "sagemaker:describeAutoMLJob",
                                    "sagemaker:describeCompilationJob",
                                    "sagemaker:describeContext",
                                    "sagemaker:describeDataQualityJobDefinition",
                                    "sagemaker:describeDevice",
                                    "sagemaker:describeDeviceFleet",
                                    "sagemaker:describeDomain",
                                    "sagemaker:describeEdgePackagingJob",
                                    "sagemaker:describeEndpoint",
                                    "sagemaker:describeEndpointConfig",
                                    "sagemaker:describeExperiment",
                                    "sagemaker:describeFeatureGroup",
                                    "sagemaker:describeHumanTaskUi",
                                    "sagemaker:describeHyperParameterTuningJob",
                                    "sagemaker:describeImage",
                                    "sagemaker:describeImageVersion",
                                    "sagemaker:describeLabelingJob",
                                    "sagemaker:describeModel",
                                    "sagemaker:describeModelBiasJobDefinition",
                                    "sagemaker:describeModelExplainabilityJobDefinition",
                                    "sagemaker:describeModelPackage",
                                    "sagemaker:describeModelPackageGroup",
                                    "sagemaker:describeModelQualityJobDefinition",
                                    "sagemaker:describeMonitoringSchedule",
                                    "sagemaker:describeNotebookInstance",
                                    "sagemaker:describeNotebookInstanceLifecycleConfig",
                                    "sagemaker:describePipeline",
                                    "sagemaker:describePipelineDefinitionForExecution",
                                    "sagemaker:describePipelineExecution",
                                    "sagemaker:describeProcessingJob",
                                    "sagemaker:describeProject",
                                    "sagemaker:describeSubscribedWorkteam",
                                    "sagemaker:describeTrainingJob",
                                    "sagemaker:describeTransformJob",
                                    "sagemaker:describeTrial",
                                    "sagemaker:describeTrialComponent",
                                    "sagemaker:describeUserProfile",
                                    "sagemaker:describeWorkteam",
                                    "sagemaker:listActions",
                                    "sagemaker:listAlgorithms",
                                    "sagemaker:listApps",
                                    "sagemaker:listArtifacts",
                                    "sagemaker:listAssociations",
                                    "sagemaker:listAutoMLJobs",
                                    "sagemaker:listCandidatesForAutoMLJob",
                                    "sagemaker:listCodeRepositories",
                                    "sagemaker:listCompilationJobs",
                                    "sagemaker:listContexts",
                                    "sagemaker:listDataQualityJobDefinitions",
                                    "sagemaker:listDeviceFleets",
                                    "sagemaker:listDevices",
                                    "sagemaker:listDomains",
                                    "sagemaker:listEdgePackagingJobs",
                                    "sagemaker:listEndpointConfigs",
                                    "sagemaker:listEndpoints",
                                    "sagemaker:listExperiments",
                                    "sagemaker:listFeatureGroups",
                                    "sagemaker:listFlowDefinitions",
                                    "sagemaker:listHumanTaskUis",
                                    "sagemaker:listHyperParameterTuningJobs",
                                    "sagemaker:listImages",
                                    "sagemaker:listImageVersions",
                                    "sagemaker:listLabelingJobs",
                                    "sagemaker:listLabelingJobsForWorkteam",
                                    "sagemaker:listModelBiasJobDefinitions",
                                    "sagemaker:listModelExplainabilityJobDefinitions",
                                    "sagemaker:listModelPackageGroups",
                                    "sagemaker:listModelPackages",
                                    "sagemaker:listModelQualityJobDefinitions",
                                    "sagemaker:listModels",
                                    "sagemaker:listMonitoringExecutions",
                                    "sagemaker:listMonitoringSchedules",
                                    "sagemaker:listNotebookInstanceLifecycleConfigs",
                                    "sagemaker:listNotebookInstances",
                                    "sagemaker:listPipelineExecutions",
                                    "sagemaker:listPipelineExecutionSteps",
                                    "sagemaker:listPipelineParametersForExecution",
                                    "sagemaker:listPipelines",
                                    "sagemaker:listProcessingJobs",
                                    "sagemaker:listProjects",
                                    "sagemaker:listSubscribedWorkteams",
                                    "sagemaker:listTags",
                                    "sagemaker:listTrainingJobs",
                                    "sagemaker:listTrainingJobsForHyperParameterTuningJob",
                                    "sagemaker:listTransformJobs",
                                    "sagemaker:listTrialComponents",
                                    "sagemaker:listTrials",
                                    "sagemaker:listUserProfiles",
                                    "sagemaker:listWorkteams",
                                    "sdb:domainMetadata",
                                    "sdb:listDomains",
                                    "secretsmanager:describeSecret",
                                    "secretsmanager:getResourcePolicy",
                                    "secretsmanager:listSecrets",
                                    "secretsmanager:listSecretVersionIds",
                                    "securityhub:getEnabledStandards",
                                    "securityhub:getFindings",
                                    "securityhub:getInsightResults",
                                    "securityhub:getInsights",
                                    "securityhub:getMasterAccount",
                                    "securityhub:getMembers",
                                    "securityhub:listEnabledProductsForImport",
                                    "securityhub:listInvitations",
                                    "securityhub:listMembers",
                                    "servicecatalog:describeConstraint",
                                    "servicecatalog:describePortfolio",
                                    "servicecatalog:describeProduct",
                                    "servicecatalog:describeProductAsAdmin",
                                    "servicecatalog:describeProductView",
                                    "servicecatalog:describeProvisioningArtifact",
                                    "servicecatalog:describeProvisioningParameters",
                                    "servicecatalog:describeRecord",
                                    "servicecatalog:listAcceptedPortfolioShares",
                                    "servicecatalog:listConstraintsForPortfolio",
                                    "servicecatalog:listLaunchPaths",
                                    "servicecatalog:listPortfolioAccess",
                                    "servicecatalog:listPortfolios",
                                    "servicecatalog:listPortfoliosForProduct",
                                    "servicecatalog:listPrincipalsForPortfolio",
                                    "servicecatalog:listProvisioningArtifacts",
                                    "servicecatalog:listRecordHistory",
                                    "servicecatalog:scanProvisionedProducts",
                                    "servicecatalog:searchProducts",
                                    "servicequotas:getAssociationForServiceQuotaTemplate",
                                    "servicequotas:getAWSDefaultServiceQuota",
                                    "servicequotas:getRequestedServiceQuotaChange",
                                    "servicequotas:getServiceQuota",
                                    "servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
                                    "servicequotas:listAWSDefaultServiceQuotas",
                                    "servicequotas:listRequestedServiceQuotaChangeHistory",
                                    "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
                                    "servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
                                    "servicequotas:listServiceQuotas",
                                    "servicequotas:listServices",
                                    "ses:describeActiveReceiptRuleSet",
                                    "ses:describeReceiptRule",
                                    "ses:describeReceiptRuleSet",
                                    "ses:getAccount",
                                    "ses:getBlacklistReports",
                                    "ses:getConfigurationSet",
                                    "ses:getConfigurationSetEventDestinations",
                                    "ses:getDedicatedIp",
                                    "ses:getDedicatedIps",
                                    "ses:getDeliverabilityDashboardOptions",
                                    "ses:getDeliverabilityTestReport",
                                    "ses:getDomainDeliverabilityCampaign",
                                    "ses:getDomainStatisticsReport",
                                    "ses:getEmailIdentity",
                                    "ses:getIdentityDkimAttributes",
                                    "ses:getIdentityMailFromDomainAttributes",
                                    "ses:getIdentityNotificationAttributes",
                                    "ses:getIdentityPolicies",
                                    "ses:getIdentityVerificationAttributes",
                                    "ses:getSendQuota",
                                    "ses:getSendStatistics",
                                    "ses:listConfigurationSets",
                                    "ses:listDedicatedIpPools",
                                    "ses:listDeliverabilityTestReports",
                                    "ses:listDomainDeliverabilityCampaigns",
                                    "ses:listEmailIdentities",
                                    "ses:listIdentities",
                                    "ses:listIdentityPolicies",
                                    "ses:listReceiptFilters",
                                    "ses:listReceiptRuleSets",
                                    "ses:listTagsForResource",
                                    "ses:listVerifiedEmailAddresses",
                                    "shield:describeAttack",
                                    "shield:describeProtection",
                                    "shield:describeSubscription",
                                    "shield:listAttacks",
                                    "shield:listProtections",
                                    "sms-voice:getConfigurationSetEventDestinations",
                                    "sms:getConnectors",
                                    "sms:getReplicationJobs",
                                    "sms:getReplicationRuns",
                                    "sms:getServers",
                                    "snowball:describeAddress",
                                    "snowball:describeAddresses",
                                    "snowball:describeJob",
                                    "snowball:getSnowballUsage",
                                    "snowball:listJobs",
                                    "sns:checkIfPhoneNumberIsOptedOut",
                                    "sns:getEndpointAttributes",
                                    "sns:getPlatformApplicationAttributes",
                                    "sns:getSMSAttributes",
                                    "sns:getSubscriptionAttributes",
                                    "sns:getTopicAttributes",
                                    "sns:listEndpointsByPlatformApplication",
                                    "sns:listPhoneNumbersOptedOut",
                                    "sns:listPlatformApplications",
                                    "sns:listSubscriptions",
                                    "sns:listSubscriptionsByTopic",
                                    "sns:listTopics",
                                    "sqs:getQueueAttributes",
                                    "sqs:getQueueUrl",
                                    "sqs:listDeadLetterSourceQueues",
                                    "sqs:listQueues",
                                    "ssm-contacts:describeEngagement",
                                    "ssm-contacts:describePage",
                                    "ssm-contacts:getContact",
                                    "ssm-contacts:getContactChannel",
                                    "ssm-contacts:listContactChannels",
                                    "ssm-contacts:listContacts",
                                    "ssm-contacts:listEngagements",
                                    "ssm-contacts:listPageReceipts",
                                    "ssm-contacts:listPagesByContact",
                                    "ssm-contacts:listPagesByEngagement",
                                    "ssm-incidents:getIncidentRecord",
                                    "ssm-incidents:getReplicationSet",
                                    "ssm-incidents:getResponsePlan",
                                    "ssm-incidents:listIncidentRecords",
                                    "ssm-incidents:listReplicationSets",
                                    "ssm-incidents:listResponsePlans",
                                    "ssm-incidents:listTimelineEvents",
                                    "ssm:describeActivations",
                                    "ssm:describeAssociation",
                                    "ssm:describeAssociationExecutions",
                                    "ssm:describeAssociationExecutionTargets",
                                    "ssm:describeAutomationExecutions",
                                    "ssm:describeAutomationStepExecutions",
                                    "ssm:describeAvailablePatches",
                                    "ssm:describeDocument",
                                    "ssm:describeDocumentPermission",
                                    "ssm:describeEffectiveInstanceAssociations",
                                    "ssm:describeEffectivePatchesForPatchBaseline",
                                    "ssm:describeInstanceAssociationsStatus",
                                    "ssm:describeInstanceInformation",
                                    "ssm:describeInstancePatches",
                                    "ssm:describeInstancePatchStates",
                                    "ssm:describeInstancePatchStatesForPatchGroup",
                                    "ssm:describeInventoryDeletions",
                                    "ssm:describeMaintenanceWindowExecutions",
                                    "ssm:describeMaintenanceWindowExecutionTaskInvocations",
                                    "ssm:describeMaintenanceWindowExecutionTasks",
                                    "ssm:describeMaintenanceWindows",
                                    "ssm:describeMaintenanceWindowSchedule",
                                    "ssm:describeMaintenanceWindowsForTarget",
                                    "ssm:describeMaintenanceWindowTargets",
                                    "ssm:describeMaintenanceWindowTasks",
                                    "ssm:describeOpsItems",
                                    "ssm:describeParameters",
                                    "ssm:describePatchBaselines",
                                    "ssm:describePatchGroups",
                                    "ssm:describePatchGroupState",
                                    "ssm:describePatchProperties",
                                    "ssm:describeSessions",
                                    "ssm:getAutomationExecution",
                                    "ssm:getCommandInvocation",
                                    "ssm:getConnectionStatus",
                                    "ssm:getDefaultPatchBaseline",
                                    "ssm:getDeployablePatchSnapshotForInstance",
                                    "ssm:getInventorySchema",
                                    "ssm:getMaintenanceWindow",
                                    "ssm:getMaintenanceWindowExecution",
                                    "ssm:getMaintenanceWindowExecutionTask",
                                    "ssm:getMaintenanceWindowExecutionTaskInvocation",
                                    "ssm:getMaintenanceWindowTask",
                                    "ssm:getOpsItem",
                                    "ssm:getPatchBaseline",
                                    "ssm:getPatchBaselineForPatchGroup",
                                    "ssm:getServiceSetting",
                                    "ssm:labelParameterVersion",
                                    "ssm:listAssociations",
                                    "ssm:listAssociationVersions",
                                    "ssm:listCommandInvocations",
                                    "ssm:listCommands",
                                    "ssm:listComplianceItems",
                                    "ssm:listComplianceSummaries",
                                    "ssm:listDocuments",
                                    "ssm:listDocumentVersions",
                                    "ssm:listOpsItemEvents",
                                    "ssm:listResourceComplianceSummaries",
                                    "ssm:listResourceDataSync",
                                    "ssm:listTagsForResource",
                                    "states:describeActivity",
                                    "states:describeExecution",
                                    "states:describeStateMachine",
                                    "states:describeStateMachineForExecution",
                                    "states:getExecutionHistory",
                                    "states:listActivities",
                                    "states:listExecutions",
                                    "states:listStateMachines",
                                    "storagegateway:describeBandwidthRateLimit",
                                    "storagegateway:describeCache",
                                    "storagegateway:describeCachediSCSIVolumes",
                                    "storagegateway:describeFileSystemAssociations",
                                    "storagegateway:describeGatewayInformation",
                                    "storagegateway:describeMaintenanceStartTime",
                                    "storagegateway:describeNFSFileShares",
                                    "storagegateway:describeSMBFileShares",
                                    "storagegateway:describeSMBSettings",
                                    "storagegateway:describeSnapshotSchedule",
                                    "storagegateway:describeStorediSCSIVolumes",
                                    "storagegateway:describeTapeArchives",
                                    "storagegateway:describeTapeRecoveryPoints",
                                    "storagegateway:describeTapes",
                                    "storagegateway:describeUploadBuffer",
                                    "storagegateway:describeVTLDevices",
                                    "storagegateway:describeWorkingStorage",
                                    "storagegateway:listFileShares",
                                    "storagegateway:listFileSystemAssociations",
                                    "storagegateway:listGateways",
                                    "storagegateway:listLocalDisks",
                                    "storagegateway:listTagsForResource",
                                    "storagegateway:listTapes",
                                    "storagegateway:listVolumeInitiators",
                                    "storagegateway:listVolumeRecoveryPoints",
                                    "storagegateway:listVolumes",
                                    "swf:countClosedWorkflowExecutions",
                                    "swf:countOpenWorkflowExecutions",
                                    "swf:countPendingActivityTasks",
                                    "swf:countPendingDecisionTasks",
                                    "swf:describeActivityType",
                                    "swf:describeDomain",
                                    "swf:describeWorkflowExecution",
                                    "swf:describeWorkflowType",
                                    "swf:getWorkflowExecutionHistory",
                                    "swf:listActivityTypes",
                                    "swf:listClosedWorkflowExecutions",
                                    "swf:listDomains",
                                    "swf:listOpenWorkflowExecutions",
                                    "swf:listWorkflowTypes",
                                    "synthetics:describeCanaries",
                                    "synthetics:describeCanariesLastRun",
                                    "synthetics:describeRuntimeVersions",
                                    "synthetics:getCanary",
                                    "synthetics:getCanaryRuns",
                                    "transfer:describeServer",
                                    "transfer:describeUser",
                                    "transfer:listServers",
                                    "transfer:listTagsForResource",
                                    "transfer:listUsers",
                                    "waf-regional:getByteMatchSet",
                                    "waf-regional:getChangeTokenStatus",
                                    "waf-regional:getIPSet",
                                    "waf-regional:getRule",
                                    "waf-regional:getSqlInjectionMatchSet",
                                    "waf-regional:getWebACL",
                                    "waf-regional:getWebACLForResource",
                                    "waf-regional:listByteMatchSets",
                                    "waf-regional:listIPSets",
                                    "waf-regional:listResourcesForWebACL",
                                    "waf-regional:listRules",
                                    "waf-regional:listSqlInjectionMatchSets",
                                    "waf-regional:listWebACLs",
                                    "waf:getByteMatchSet",
                                    "waf:getChangeTokenStatus",
                                    "waf:getIPSet",
                                    "waf:getRule",
                                    "waf:getSampledRequests",
                                    "waf:getSizeConstraintSet",
                                    "waf:getSqlInjectionMatchSet",
                                    "waf:getWebACL",
                                    "waf:getXssMatchSet",
                                    "waf:listByteMatchSets",
                                    "waf:listIPSets",
                                    "waf:listRules",
                                    "waf:listSizeConstraintSets",
                                    "waf:listSqlInjectionMatchSets",
                                    "waf:listWebACLs",
                                    "waf:listXssMatchSets",
                                    "wafv2:checkCapacity",
                                    "wafv2:describeManagedRuleGroup",
                                    "wafv2:getIPSet",
                                    "wafv2:getLoggingConfiguration",
                                    "wafv2:getPermissionPolicy",
                                    "wafv2:getRateBasedStatementManagedKeys",
                                    "wafv2:getRegexPatternSet",
                                    "wafv2:getRuleGroup",
                                    "wafv2:getSampledRequests",
                                    "wafv2:getWebACL",
                                    "wafv2:getWebACLForResource",
                                    "wafv2:listAvailableManagedRuleGroups",
                                    "wafv2:listIPSets",
                                    "wafv2:listLoggingConfigurations",
                                    "wafv2:listRegexPatternSets",
                                    "wafv2:listResourcesForWebACL",
                                    "wafv2:listRuleGroups",
                                    "wafv2:listTagsForResource",
                                    "wafv2:listWebACLs",
                                    "workdocs:checkAlias",
                                    "workdocs:describeAvailableDirectories",
                                    "workdocs:describeInstances",
                                    "worklink:describeAuditStreamConfiguration",
                                    "worklink:describeCompanyNetworkConfiguration",
                                    "worklink:describeDevice",
                                    "worklink:describeDevicePolicyConfiguration",
                                    "worklink:describeDomain",
                                    "worklink:describeFleetMetadata",
                                    "worklink:describeIdentityProviderConfiguration",
                                    "worklink:describeWebsiteCertificateAuthority",
                                    "worklink:listDevices",
                                    "worklink:listDomains",
                                    "worklink:listFleets",
                                    "worklink:listWebsiteAuthorizationProviders",
                                    "worklink:listWebsiteCertificateAuthorities",
                                    "workmail:describeGroup",
                                    "workmail:describeOrganization",
                                    "workmail:describeResource",
                                    "workmail:describeUser",
                                    "workmail:listAliases",
                                    "workmail:listGroupMembers",
                                    "workmail:listGroups",
                                    "workmail:listMailboxPermissions",
                                    "workmail:listOrganizations",
                                    "workmail:listResourceDelegates",
                                    "workmail:listResources",
                                    "workmail:listUsers",
                                    "workspaces:describeAccount",
                                    "workspaces:describeAccountModifications",
                                    "workspaces:describeIpGroups",
                                    "workspaces:describeTags",
                                    "workspaces:describeWorkspaceBundles",
                                    "workspaces:describeWorkspaceDirectories",
                                    "workspaces:describeWorkspaceImages",
                                    "workspaces:describeWorkspaces",
                                    "workspaces:describeWorkspacesConnectionStatus"
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                    "*"
                                ]
                            }
                        ],
                        "Version": "2012-10-17"
                    },
                    "VersionId": "v19",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-11-12 00:01:03+00:00"
                }
            ]
        },
        {
            "PolicyName": "AmazonEC2ContainerRegistryPowerUser",
            "PolicyId": "ANPAJDNE5PIHROIBGGDDW",
            "Arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
            "Path": "/",
            "DefaultVersionId": "v3",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-12-21 17:05:33+00:00",
            "UpdateDate": "2019-12-10 20:48:08+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ecr:GetAuthorizationToken",
                                    "ecr:BatchCheckLayerAvailability",
                                    "ecr:GetDownloadUrlForLayer",
                                    "ecr:GetRepositoryPolicy",
                                    "ecr:DescribeRepositories",
                                    "ecr:ListImages",
                                    "ecr:DescribeImages",
                                    "ecr:BatchGetImage",
                                    "ecr:GetLifecyclePolicy",
                                    "ecr:GetLifecyclePolicyPreview",
                                    "ecr:ListTagsForResource",
                                    "ecr:DescribeImageScanFindings",
                                    "ecr:InitiateLayerUpload",
                                    "ecr:UploadLayerPart",
                                    "ecr:CompleteLayerUpload",
                                    "ecr:PutImage"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v3",
                    "IsDefaultVersion": true,
                    "CreateDate": "2019-12-10 20:48:08+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSTrustedAdvisorServiceRolePolicy",
            "PolicyId": "ANPAJH4QJ2WMHBOB47BUE",
            "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy",
            "Path": "/aws-service-role/",
            "DefaultVersionId": "v9",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2018-02-22 21:24:25+00:00",
            "UpdateDate": "2021-08-10 22:41:30+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "autoscaling:DescribeAccountLimits",
                                    "autoscaling:DescribeAutoScalingGroups",
                                    "autoscaling:DescribeLaunchConfigurations",
                                    "cloudformation:DescribeAccountLimits",
                                    "cloudformation:DescribeStacks",
                                    "cloudformation:ListStacks",
                                    "cloudfront:ListDistributions",
                                    "cloudtrail:DescribeTrails",
                                    "cloudtrail:GetTrailStatus",
                                    "dynamodb:DescribeLimits",
                                    "dynamodb:DescribeTable",
                                    "dynamodb:ListTables",
                                    "ec2:DescribeAddresses",
                                    "ec2:DescribeReservedInstances",
                                    "ec2:DescribeInstances",
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeInternetGateways",
                                    "ec2:DescribeImages",
                                    "ec2:DescribeVolumes",
                                    "ec2:DescribeSecurityGroups",
                                    "ec2:DescribeReservedInstancesOfferings",
                                    "ec2:DescribeSnapshots",
                                    "ec2:DescribeVpnConnections",
                                    "ec2:DescribeVpnGateways",
                                    "ec2:DescribeLaunchTemplateVersions",
                                    "elasticloadbalancing:DescribeAccountLimits",
                                    "elasticloadbalancing:DescribeInstanceHealth",
                                    "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                    "elasticloadbalancing:DescribeLoadBalancerPolicies",
                                    "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
                                    "elasticloadbalancing:DescribeLoadBalancers",
                                    "elasticloadbalancing:DescribeTargetGroups",
                                    "iam:GenerateCredentialReport",
                                    "iam:GetAccountPasswordPolicy",
                                    "iam:GetAccountSummary",
                                    "iam:GetCredentialReport",
                                    "iam:GetServerCertificate",
                                    "iam:ListServerCertificates",
                                    "kinesis:DescribeLimits",
                                    "rds:DescribeAccountAttributes",
                                    "rds:DescribeDBClusters",
                                    "rds:DescribeDBEngineVersions",
                                    "rds:DescribeDBInstances",
                                    "rds:DescribeDBParameterGroups",
                                    "rds:DescribeDBParameters",
                                    "rds:DescribeDBSecurityGroups",
                                    "rds:DescribeDBSnapshots",
                                    "rds:DescribeDBSubnetGroups",
                                    "rds:DescribeEngineDefaultParameters",
                                    "rds:DescribeEvents",
                                    "rds:DescribeOptionGroupOptions",
                                    "rds:DescribeOptionGroups",
                                    "rds:DescribeOrderableDBInstanceOptions",
                                    "rds:DescribeReservedDBInstances",
                                    "rds:DescribeReservedDBInstancesOfferings",
                                    "rds:ListTagsForResource",
                                    "redshift:DescribeClusters",
                                    "redshift:DescribeReservedNodeOfferings",
                                    "redshift:DescribeReservedNodes",
                                    "route53:GetAccountLimit",
                                    "route53:GetHealthCheck",
                                    "route53:GetHostedZone",
                                    "route53:ListHealthChecks",
                                    "route53:ListHostedZones",
                                    "route53:ListHostedZonesByName",
                                    "route53:ListResourceRecordSets",
                                    "s3:GetAccountPublicAccessBlock",
                                    "s3:GetBucketAcl",
                                    "s3:GetBucketPolicy",
                                    "s3:GetBucketPolicyStatus",
                                    "s3:GetBucketLocation",
                                    "s3:GetBucketLogging",
                                    "s3:GetBucketVersioning",
                                    "s3:GetBucketPublicAccessBlock",
                                    "s3:ListBucket",
                                    "s3:ListAllMyBuckets",
                                    "ses:GetSendQuota",
                                    "sqs:ListQueues",
                                    "cloudwatch:GetMetricStatistics",
                                    "ce:GetReservationPurchaseRecommendation",
                                    "ce:GetSavingsPlansPurchaseRecommendation"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v9",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-08-10 22:41:30+00:00"
                }
            ]
        },
        {
            "PolicyName": "AmazonCognitoPowerUser",
            "PolicyId": "ANPAJKW5H2HNCPGCYGR6Y",
            "Arn": "arn:aws:iam::aws:policy/AmazonCognitoPowerUser",
            "Path": "/",
            "DefaultVersionId": "v6",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-03-24 17:14:56+00:00",
            "UpdateDate": "2021-06-01 17:33:32+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cognito-identity:*",
                                    "cognito-idp:*",
                                    "cognito-sync:*",
                                    "iam:ListRoles",
                                    "iam:ListOpenIdConnectProviders",
                                    "iam:GetRole",
                                    "iam:ListSAMLProviders",
                                    "iam:GetSAMLProvider",
                                    "kinesis:ListStreams",
                                    "lambda:GetPolicy",
                                    "lambda:ListFunctions",
                                    "sns:GetSMSSandboxAccountStatus",
                                    "sns:ListPlatformApplications",
                                    "ses:ListIdentities",
                                    "ses:GetIdentityVerificationAttributes",
                                    "mobiletargeting:GetApps",
                                    "acm:ListCertificates"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "iam:CreateServiceLinkedRole",
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "iam:AWSServiceName": [
                                            "cognito-idp.amazonaws.com",
                                            "email.cognito-idp.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:DeleteServiceLinkedRole",
                                    "iam:GetServiceLinkedRoleDeletionStatus"
                                ],
                                "Resource": [
                                    "arn:aws:iam::*:role/aws-service-role/cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdp*",
                                    "arn:aws:iam::*:role/aws-service-role/email.cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdpEmail*"
                                ]
                            }
                        ]
                    },
                    "VersionId": "v6",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-05-27 22:48:53+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSLambdaBasicExecutionRole",
            "PolicyId": "ANPAJNCQGXC42545SKXIK",
            "Arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "Path": "/service-role/",
            "DefaultVersionId": "v1",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-04-09 15:03:43+00:00",
            "UpdateDate": "2015-04-09 15:03:43+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": true,
                    "CreateDate": "2015-04-09 15:03:43+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSKeyManagementServicePowerUser",
            "PolicyId": "ANPAJNPP7PPPPMJRV2SA4",
            "Arn": "arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser",
            "Path": "/",
            "DefaultVersionId": "v2",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-02-06 18:40:40+00:00",
            "UpdateDate": "2017-03-07 00:55:11+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "kms:CreateAlias",
                                    "kms:CreateKey",
                                    "kms:DeleteAlias",
                                    "kms:Describe*",
                                    "kms:GenerateRandom",
                                    "kms:Get*",
                                    "kms:List*",
                                    "kms:TagResource",
                                    "kms:UntagResource",
                                    "iam:ListGroups",
                                    "iam:ListRoles",
                                    "iam:ListUsers"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v2",
                    "IsDefaultVersion": true,
                    "CreateDate": "2017-03-07 00:55:11+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSApplicationAutoscalingDynamoDBTablePolicy",
            "PolicyId": "ANPAJOVQMDI3JFCBW4LFO",
            "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingDynamoDBTablePolicy",
            "Path": "/aws-service-role/",
            "DefaultVersionId": "v1",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2017-10-20 21:34:57+00:00",
            "UpdateDate": "2017-10-20 21:34:57+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "dynamodb:DescribeTable",
                                    "dynamodb:UpdateTable",
                                    "cloudwatch:PutMetricAlarm",
                                    "cloudwatch:DescribeAlarms",
                                    "cloudwatch:DeleteAlarms"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": true,
                    "CreateDate": "2017-10-20 21:34:57+00:00"
                }
            ]
        },
        {
            "PolicyName": "APIGatewayServiceRolePolicy",
            "PolicyId": "ANPAJQQDZNLDBF2ULTWK6",
            "Arn": "arn:aws:iam::aws:policy/aws-service-role/APIGatewayServiceRolePolicy",
            "Path": "/aws-service-role/",
            "DefaultVersionId": "v9",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2017-10-20 17:23:10+00:00",
            "UpdateDate": "2021-07-12 22:24:40+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "elasticloadbalancing:AddListenerCertificates",
                                    "elasticloadbalancing:RemoveListenerCertificates",
                                    "elasticloadbalancing:ModifyListener",
                                    "elasticloadbalancing:DescribeListeners",
                                    "elasticloadbalancing:DescribeLoadBalancers",
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords",
                                    "xray:GetSamplingTargets",
                                    "xray:GetSamplingRules",
                                    "logs:CreateLogDelivery",
                                    "logs:GetLogDelivery",
                                    "logs:UpdateLogDelivery",
                                    "logs:DeleteLogDelivery",
                                    "logs:ListLogDeliveries",
                                    "servicediscovery:DiscoverInstances"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "firehose:DescribeDeliveryStream",
                                    "firehose:PutRecord",
                                    "firehose:PutRecordBatch"
                                ],
                                "Resource": "arn:aws:firehose:*:*:deliverystream/amazon-apigateway-*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "acm:DescribeCertificate",
                                    "acm:GetCertificate"
                                ],
                                "Resource": "arn:aws:acm:*:*:certificate/*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "ec2:CreateNetworkInterfacePermission",
                                "Resource": "arn:aws:ec2:*:*:network-interface/*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "ec2:CreateTags",
                                "Resource": "arn:aws:ec2:*:*:network-interface/*",
                                "Condition": {
                                    "ForAllValues:StringEquals": {
                                        "aws:TagKeys": [
                                            "Owner",
                                            "VpcLinkId"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:ModifyNetworkInterfaceAttribute",
                                    "ec2:DeleteNetworkInterface",
                                    "ec2:AssignPrivateIpAddresses",
                                    "ec2:CreateNetworkInterface",
                                    "ec2:DeleteNetworkInterfacePermission",
                                    "ec2:DescribeNetworkInterfaces",
                                    "ec2:DescribeAvailabilityZones",
                                    "ec2:DescribeNetworkInterfaceAttribute",
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeNetworkInterfacePermissions",
                                    "ec2:UnassignPrivateIpAddresses",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeRouteTables",
                                    "ec2:DescribeSecurityGroups"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "servicediscovery:GetNamespace",
                                "Resource": "arn:aws:servicediscovery:*:*:namespace/*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "servicediscovery:GetService",
                                "Resource": "arn:aws:servicediscovery:*:*:service/*"
                            }
                        ]
                    },
                    "VersionId": "v9",
                    "IsDefaultVersion": true,
                    "CreateDate": "2021-07-12 22:24:40+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSConfigServiceRolePolicy",
            "PolicyId": "ANPAJUCWFHNZER665LLQQ",
            "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy",
            "Path": "/aws-service-role/",
            "DefaultVersionId": "v28",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2018-05-30 23:31:46+00:00",
            "UpdateDate": "2022-01-21 18:35:45+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "access-analyzer:GetAnalyzer",
                                    "access-analyzer:ListAnalyzers",
                                    "access-analyzer:ListArchiveRules",
                                    "access-analyzer:ListTagsForResource",
                                    "acm:DescribeCertificate",
                                    "acm:ListCertificates",
                                    "acm:ListTagsForCertificate",
                                    "apigateway:GET",
                                    "application-autoscaling:DescribeScalableTargets",
                                    "application-autoscaling:DescribeScalingPolicies",
                                    "autoscaling:DescribeAutoScalingGroups",
                                    "autoscaling:DescribeLaunchConfigurations",
                                    "autoscaling:DescribeLifecycleHooks",
                                    "autoscaling:DescribePolicies",
                                    "autoscaling:DescribeScheduledActions",
                                    "autoscaling:DescribeTags",
                                    "backup:DescribeBackupVault",
                                    "backup:DescribeRecoveryPoint",
                                    "backup:GetBackupPlan",
                                    "backup:GetBackupSelection",
                                    "backup:GetBackupVaultAccessPolicy",
                                    "backup:GetBackupVaultNotifications",
                                    "backup:ListBackupPlans",
                                    "backup:ListBackupSelections",
                                    "backup:ListBackupVaults",
                                    "backup:ListRecoveryPointsByBackupVault",
                                    "backup:ListTags",
                                    "cloudformation:DescribeType",
                                    "cloudformation:ListTypes",
                                    "cloudfront:ListDistributions",
                                    "cloudfront:ListTagsForResource",
                                    "cloudtrail:DescribeTrails",
                                    "cloudtrail:GetEventSelectors",
                                    "cloudtrail:GetTrailStatus",
                                    "cloudtrail:ListTags",
                                    "cloudwatch:DescribeAlarms",
                                    "codepipeline:GetPipeline",
                                    "codepipeline:GetPipelineState",
                                    "codepipeline:ListPipelines",
                                    "config:BatchGet*",
                                    "config:Describe*",
                                    "config:Get*",
                                    "config:List*",
                                    "config:Put*",
                                    "config:Select*",
                                    "dax:DescribeClusters",
                                    "dms:DescribeEventSubscriptions",
                                    "dms:DescribeReplicationInstances",
                                    "dms:DescribeReplicationSubnetGroups",
                                    "dms:ListTagsForResource",
                                    "dynamodb:DescribeContinuousBackups",
                                    "dynamodb:DescribeLimits",
                                    "dynamodb:DescribeTable",
                                    "dynamodb:ListTables",
                                    "dynamodb:ListTagsOfResource",
                                    "ec2:Describe*",
                                    "ec2:GetEbsEncryptionByDefault",
                                    "ecr-public:DescribeRepositories",
                                    "ecr-public:GetRepositoryCatalogData",
                                    "ecr-public:ListTagsForResource",
                                    "ecr:DescribeRepositories",
                                    "ecr:GetLifecyclePolicy",
                                    "ecr:GetRepositoryPolicy",
                                    "ecr:ListTagsForResource",
                                    "ecs:DescribeClusters",
                                    "ecs:DescribeServices",
                                    "ecs:DescribeTaskDefinition",
                                    "ecs:DescribeTaskSets",
                                    "ecs:ListClusters",
                                    "ecs:ListServices",
                                    "ecs:ListTagsForResource",
                                    "ecs:ListTaskDefinitions",
                                    "eks:DescribeCluster",
                                    "eks:DescribeNodegroup",
                                    "eks:ListClusters",
                                    "eks:ListNodegroups",
                                    "elasticache:DescribeCacheClusters",
                                    "elasticache:DescribeCacheParameterGroups",
                                    "elasticache:DescribeCacheSubnetGroups",
                                    "elasticache:DescribeReplicationGroups",
                                    "elasticache:DescribeSnapshots",
                                    "elasticache:ListTagsForResource",
                                    "elasticfilesystem:DescribeAccessPoints",
                                    "elasticfilesystem:DescribeBackupPolicy",
                                    "elasticfilesystem:DescribeFileSystemPolicy",
                                    "elasticfilesystem:DescribeFileSystems",
                                    "elasticfilesystem:DescribeLifecycleConfiguration",
                                    "elasticfilesystem:DescribeMountTargets",
                                    "elasticfilesystem:DescribeMountTargetSecurityGroups",
                                    "elasticloadbalancing:DescribeListeners",
                                    "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                    "elasticloadbalancing:DescribeLoadBalancerPolicies",
                                    "elasticloadbalancing:DescribeLoadBalancers",
                                    "elasticloadbalancing:DescribeRules",
                                    "elasticloadbalancing:DescribeTags",
                                    "elasticmapreduce:DescribeCluster",
                                    "elasticmapreduce:DescribeSecurityConfiguration",
                                    "elasticmapreduce:DescribeStep",
                                    "elasticmapreduce:GetBlockPublicAccessConfiguration",
                                    "elasticmapreduce:GetManagedScalingPolicy",
                                    "elasticmapreduce:ListClusters",
                                    "elasticmapreduce:ListInstanceFleets",
                                    "elasticmapreduce:ListInstanceGroups",
                                    "elasticmapreduce:ListInstances",
                                    "elasticmapreduce:ListSecurityConfigurations",
                                    "elasticmapreduce:ListSteps",
                                    "es:DescribeElasticsearchDomain",
                                    "es:DescribeElasticsearchDomains",
                                    "es:ListDomainNames",
                                    "es:ListTags",
                                    "es:DescribeDomain",
                                    "es:DescribeDomains",
                                    "firehose:DescribeDeliveryStream",
                                    "firehose:ListDeliveryStreams",
                                    "firehose:ListTagsForDeliveryStream",
                                    "fsx:DescribeFileSystems",
                                    "globalaccelerator:DescribeAccelerator",
                                    "globalaccelerator:DescribeEndpointGroup",
                                    "globalaccelerator:DescribeListener",
                                    "globalaccelerator:ListAccelerators",
                                    "globalaccelerator:ListEndpointGroups",
                                    "globalaccelerator:ListListeners",
                                    "globalaccelerator:ListTagsForResource",
                                    "guardduty:GetDetector",
                                    "guardduty:GetFindings",
                                    "guardduty:GetMasterAccount",
                                    "guardduty:ListDetectors",
                                    "guardduty:ListFindings",
                                    "iam:GenerateCredentialReport",
                                    "iam:GetAccountAuthorizationDetails",
                                    "iam:GetAccountPasswordPolicy",
                                    "iam:GetAccountSummary",
                                    "iam:GetCredentialReport",
                                    "iam:GetGroup",
                                    "iam:GetGroupPolicy",
                                    "iam:GetPolicy",
                                    "iam:GetPolicyVersion",
                                    "iam:GetRole",
                                    "iam:GetRolePolicy",
                                    "iam:GetUser",
                                    "iam:GetUserPolicy",
                                    "iam:ListAttachedGroupPolicies",
                                    "iam:ListAttachedRolePolicies",
                                    "iam:ListAttachedUserPolicies",
                                    "iam:ListEntitiesForPolicy",
                                    "iam:ListGroupPolicies",
                                    "iam:ListGroupsForUser",
                                    "iam:ListInstanceProfilesForRole",
                                    "iam:ListPolicyVersions",
                                    "iam:ListRolePolicies",
                                    "iam:ListUserPolicies",
                                    "iam:ListVirtualMFADevices",
                                    "kafka:DescribeCluster",
                                    "kafka:ListClusters",
                                    "kinesis:DescribeStreamConsumer",
                                    "kinesis:DescribeStreamSummary",
                                    "kinesis:ListStreamConsumers",
                                    "kinesis:ListStreams",
                                    "kinesis:ListTagsForStream",
                                    "kms:DescribeKey",
                                    "kms:GetKeyPolicy",
                                    "kms:GetKeyRotationStatus",
                                    "kms:ListKeys",
                                    "kms:ListResourceTags",
                                    "lambda:GetAlias",
                                    "lambda:GetFunction",
                                    "lambda:GetFunctionCodeSigningConfig",
                                    "lambda:GetPolicy",
                                    "lambda:ListAliases",
                                    "lambda:ListFunctions",
                                    "lambda:ListVersionsByFunction",
                                    "logs:DescribeLogGroups",
                                    "logs:ListTagsLogGroup",
                                    "network-firewall:DescribeLoggingConfiguration",
                                    "network-firewall:ListFirewalls",
                                    "organizations:DescribeOrganization",
                                    "rds:DescribeDBParameterGroups",
                                    "rds:DescribeDBClusters",
                                    "rds:DescribeDBClusterSnapshotAttributes",
                                    "rds:DescribeDBClusterSnapshots",
                                    "rds:DescribeDBEngineVersions",
                                    "rds:DescribeDBInstances",
                                    "rds:DescribeDBSecurityGroups",
                                    "rds:DescribeDBSnapshotAttributes",
                                    "rds:DescribeDBSnapshots",
                                    "rds:DescribeDBSubnetGroups",
                                    "rds:DescribeEventSubscriptions",
                                    "rds:ListTagsForResource",
                                    "rds:DescribeDBParameters",
                                    "redshift:DescribeClusterParameterGroups",
                                    "redshift:DescribeClusterParameters",
                                    "redshift:DescribeClusters",
                                    "redshift:DescribeClusterSecurityGroups",
                                    "redshift:DescribeClusterSnapshots",
                                    "redshift:DescribeClusterSubnetGroups",
                                    "redshift:DescribeEventSubscriptions",
                                    "redshift:DescribeLoggingStatus",
                                    "route53:GetHealthCheck",
                                    "route53:GetHostedZone",
                                    "route53:ListHealthChecks",
                                    "route53:ListHostedZones",
                                    "route53:ListHostedZonesByName",
                                    "route53:ListQueryLoggingConfigs",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListTagsForResource",
                                    "route53resolver:GetResolverEndpoint",
                                    "route53resolver:GetResolverRule",
                                    "route53resolver:GetResolverRuleAssociation",
                                    "route53resolver:ListResolverEndpointIpAddresses",
                                    "route53resolver:ListResolverEndpoints",
                                    "route53resolver:ListResolverRuleAssociations",
                                    "route53resolver:ListResolverRules",
                                    "route53resolver:ListTagsForResource",
                                    "s3:GetAccelerateConfiguration",
                                    "s3:GetAccessPoint",
                                    "s3:GetAccessPointPolicy",
                                    "s3:GetAccessPointPolicyStatus",
                                    "s3:GetAccountPublicAccessBlock",
                                    "s3:GetBucketAcl",
                                    "s3:GetBucketCORS",
                                    "s3:GetBucketLocation",
                                    "s3:GetBucketLogging",
                                    "s3:GetBucketNotification",
                                    "s3:GetBucketObjectLockConfiguration",
                                    "s3:GetBucketPolicy",
                                    "s3:GetBucketPublicAccessBlock",
                                    "s3:GetBucketRequestPayment",
                                    "s3:GetBucketTagging",
                                    "s3:GetBucketVersioning",
                                    "s3:GetBucketWebsite",
                                    "s3:GetEncryptionConfiguration",
                                    "s3:GetLifecycleConfiguration",
                                    "s3:GetReplicationConfiguration",
                                    "s3:ListAccessPoints",
                                    "s3:ListAllMyBuckets",
                                    "s3:ListBucket",
                                    "sagemaker:DescribeCodeRepository",
                                    "sagemaker:DescribeEndpoint",
                                    "sagemaker:DescribeEndpointConfig",
                                    "sagemaker:DescribeModel",
                                    "sagemaker:DescribeMonitoringSchedule",
                                    "sagemaker:DescribeNotebookInstance",
                                    "sagemaker:DescribeNotebookInstanceLifecycleConfig",
                                    "sagemaker:DescribeWorkteam",
                                    "sagemaker:ListCodeRepositories",
                                    "sagemaker:ListEndpointConfigs",
                                    "sagemaker:ListEndpoints",
                                    "sagemaker:ListModels",
                                    "sagemaker:ListMonitoringSchedules",
                                    "sagemaker:ListNotebookInstanceLifecycleConfigs",
                                    "sagemaker:ListNotebookInstances",
                                    "sagemaker:ListTags",
                                    "sagemaker:ListWorkteams",
                                    "secretsmanager:ListSecrets",
                                    "secretsmanager:ListSecretVersionIds",
                                    "securityhub:DescribeHub",
                                    "shield:DescribeDRTAccess",
                                    "shield:DescribeProtection",
                                    "shield:DescribeSubscription",
                                    "sns:GetSubscriptionAttributes",
                                    "sns:GetTopicAttributes",
                                    "sns:ListSubscriptions",
                                    "sns:ListSubscriptionsByTopic",
                                    "sns:ListTagsForResource",
                                    "sns:ListTopics",
                                    "sqs:GetQueueAttributes",
                                    "sqs:ListQueues",
                                    "sqs:ListQueueTags",
                                    "ssm:DescribeAutomationExecutions",
                                    "ssm:DescribeDocument",
                                    "ssm:DescribeDocumentPermission",
                                    "ssm:GetAutomationExecution",
                                    "ssm:GetDocument",
                                    "ssm:ListDocuments",
                                    "states:DescribeStateMachine",
                                    "states:ListStateMachines",
                                    "states:ListTagsForResource",
                                    "storagegateway:ListGateways",
                                    "storagegateway:ListTagsForResource",
                                    "storagegateway:ListVolumes",
                                    "support:DescribeCases",
                                    "tag:GetResources",
                                    "waf-regional:GetLoggingConfiguration",
                                    "waf-regional:GetWebACL",
                                    "waf-regional:GetWebACLForResource",
                                    "waf:GetLoggingConfiguration",
                                    "waf:GetWebACL",
                                    "wafv2:GetLoggingConfiguration"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogStream",
                                    "logs:CreateLogGroup"
                                ],
                                "Resource": "arn:aws:logs:*:*:log-group:/aws/config/*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "logs:PutLogEvents",
                                "Resource": "arn:aws:logs:*:*:log-group:/aws/config/*:log-stream:config-rule-evaluation/*"
                            }
                        ]
                    },
                    "VersionId": "v28",
                    "IsDefaultVersion": true,
                    "CreateDate": "2022-01-21 18:35:45+00:00"
                }
            ]
        },
        {
            "PolicyName": "PowerUserAccess",
            "PolicyId": "ANPAJYRXTHIB4FOVS3ZXS",
            "Arn": "arn:aws:iam::aws:policy/PowerUserAccess",
            "Path": "/",
            "DefaultVersionId": "v4",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2015-02-06 18:39:47+00:00",
            "UpdateDate": "2019-03-20 22:19:03+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "NotAction": [
                                    "iam:*",
                                    "organizations:*",
                                    "account:*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateServiceLinkedRole",
                                    "iam:DeleteServiceLinkedRole",
                                    "iam:ListRoles",
                                    "organizations:DescribeOrganization",
                                    "account:ListRegions"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v4",
                    "IsDefaultVersion": true,
                    "CreateDate": "2019-03-20 22:19:03+00:00"
                }
            ]
        },
        {
            "PolicyName": "AWSLambda_FullAccess",
            "PolicyId": "ANPAZKAPJZG4OXQPYWZ5D",
            "Arn": "arn:aws:iam::aws:policy/AWSLambda_FullAccess",
            "Path": "/",
            "DefaultVersionId": "v1",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2020-11-17 21:14:08+00:00",
            "UpdateDate": "2020-11-17 21:14:08+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudformation:DescribeStacks",
                                    "cloudformation:ListStackResources",
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:GetMetricData",
                                    "ec2:DescribeSecurityGroups",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeVpcs",
                                    "kms:ListAliases",
                                    "iam:GetPolicy",
                                    "iam:GetPolicyVersion",
                                    "iam:GetRole",
                                    "iam:GetRolePolicy",
                                    "iam:ListAttachedRolePolicies",
                                    "iam:ListRolePolicies",
                                    "iam:ListRoles",
                                    "lambda:*",
                                    "logs:DescribeLogGroups",
                                    "states:DescribeStateMachine",
                                    "states:ListStateMachines",
                                    "tag:GetResources",
                                    "xray:GetTraceSummaries",
                                    "xray:BatchGetTraces"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "iam:PassRole",
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "iam:PassedToService": "lambda.amazonaws.com"
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:DescribeLogStreams",
                                    "logs:GetLogEvents",
                                    "logs:FilterLogEvents"
                                ],
                                "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                            }
                        ]
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": true,
                    "CreateDate": "2020-11-17 21:14:08+00:00"
                }
            ]
        },
        {
            "PolicyName": "AmazonElasticContainerRegistryPublicPowerUser",
            "PolicyId": "ANPAZKAPJZG4P6F7N3OP7",
            "Arn": "arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicPowerUser",
            "Path": "/",
            "DefaultVersionId": "v1",
            "AttachmentCount": 1,
            "PermissionsBoundaryUsageCount": 0,
            "IsAttachable": true,
            "CreateDate": "2020-12-01 16:16:54+00:00",
            "UpdateDate": "2020-12-01 16:16:54+00:00",
            "PolicyVersionList": [
                {
                    "Document": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ecr-public:GetAuthorizationToken",
                                    "sts:GetServiceBearerToken",
                                    "ecr-public:BatchCheckLayerAvailability",
                                    "ecr-public:GetRepositoryPolicy",
                                    "ecr-public:DescribeRepositories",
                                    "ecr-public:DescribeRegistries",
                                    "ecr-public:DescribeImages",
                                    "ecr-public:DescribeImageTags",
                                    "ecr-public:GetRepositoryCatalogData",
                                    "ecr-public:GetRegistryCatalogData",
                                    "ecr-public:InitiateLayerUpload",
                                    "ecr-public:UploadLayerPart",
                                    "ecr-public:CompleteLayerUpload",
                                    "ecr-public:PutImage"
                                ],
                                "Resource": "*"
                            }
                        ]
                    },
                    "VersionId": "v1",
                    "IsDefaultVersion": true,
                    "CreateDate": "2020-12-01 16:16:54+00:00"
                }
            ]
        }
    ]
}